{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Scene.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography, Button, TextField, Dialog, DialogActions, InputLabel, FormControl, MenuItem, Select } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fakeUsers = [{\n  id: 1,\n  name: 'User 1'\n}, {\n  id: 2,\n  name: 'User 2'\n}\n// Add more users as needed\n];\n\nconst DescriptionList = () => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(fakeUsers[0]);\n  const [fakeDescriptions, setFakeDescriptions] = useState([{\n    id: 1,\n    timestamp: '00:05',\n    userId: 1,\n    description: 'Description 1 by User 1'\n  }, {\n    id: 2,\n    timestamp: '01:30',\n    userId: 2,\n    description: 'Description 2 by User 2'\n  }\n  // Add more fake descriptions as needed\n  ]);\n\n  const [editedDescription, setEditedDescription] = useState('');\n  const [selectedDescriptionId, setSelectedDescriptionId] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const handleUserChange = event => {\n    const userId = event.target.value;\n    const selectedUser = fakeUsers.find(user => user.id === userId);\n    setCurrentUser(selectedUser);\n  };\n  const handleEditClick = (descriptionId, descriptionText) => {\n    setSelectedDescriptionId(descriptionId);\n    setEditedDescription(descriptionText);\n    setIsEditing(true);\n  };\n  const handleSaveClick = () => {\n    if (selectedDescriptionId !== null) {\n      const updatedDescriptions = fakeDescriptions.map(description => description.id === selectedDescriptionId ? {\n        ...description,\n        description: editedDescription\n      } : description);\n      setFakeDescriptions(updatedDescriptions);\n      setIsEditing(false);\n      setSelectedDescriptionId(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: currentUser.id,\n        onChange: handleUserChange,\n        children: fakeUsers.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: user.id,\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), fakeDescriptions.filter(description => description.userId === currentUser.id).map(description => /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      style: {\n        marginBottom: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Timestamp: \", description.timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Created by: \", currentUser.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), isEditing && selectedDescriptionId === description.id ? /*#__PURE__*/_jsxDEV(TextField, {\n          multiline: true,\n          fullWidth: true,\n          variant: \"outlined\",\n          label: \"Edit Description\",\n          value: editedDescription,\n          onChange: e => setEditedDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: description.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px'\n          },\n          children: isEditing && selectedDescriptionId === description.id ? /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSaveClick,\n              color: \"primary\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleEditClick(description.id, description.description),\n            color: \"primary\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, description.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(DescriptionList, \"CkJTg4ueN+MftQ6SQGq5LSN7MtE=\");\n_c = DescriptionList;\nexport default DescriptionList;\n\n// import {Grid } from \"@mui/material\";\n// import {SceneCards} from \"./\";\n// import sceneinfo from \"../data/sceneinfo\";\n\n// const Scene = (props) => {\n//   return (\n//     <Grid item xs={12} md={12}>\n//         {props.descriptions.map((item, idx) => (\n//             <SceneCards\n//             key = {idx}\n//             sceneNum = {idx+1}\n//             timeFrame = {item.time_stamp}\n//             screenText = \"Currently there is no on screen text, \"\n//             description = {item.descriptions}\n\n//             />\n//         ))}\n//     </Grid>\n//   )\n// }\n\n// export default Scene;\nvar _c;\n$RefreshReg$(_c, \"DescriptionList\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","Button","TextField","Dialog","DialogActions","InputLabel","FormControl","MenuItem","Select","jsxDEV","_jsxDEV","fakeUsers","id","name","DescriptionList","_s","currentUser","setCurrentUser","fakeDescriptions","setFakeDescriptions","timestamp","userId","description","editedDescription","setEditedDescription","selectedDescriptionId","setSelectedDescriptionId","isEditing","setIsEditing","handleUserChange","event","target","value","selectedUser","find","user","handleEditClick","descriptionId","descriptionText","handleSaveClick","updatedDescriptions","map","children","fullWidth","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onChange","filter","variant","multiline","label","e","marginTop","onClick","color","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Scene.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Select,\n} from '@mui/material';\n\nconst fakeUsers = [\n  { id: 1, name: 'User 1' },\n  { id: 2, name: 'User 2' },\n  // Add more users as needed\n];\n\nconst DescriptionList = () => {\n  const [currentUser, setCurrentUser] = useState(fakeUsers[0]);\n  const [fakeDescriptions, setFakeDescriptions] = useState([\n    { id: 1, timestamp: '00:05', userId: 1, description: 'Description 1 by User 1' },\n    { id: 2, timestamp: '01:30', userId: 2, description: 'Description 2 by User 2' },\n    // Add more fake descriptions as needed\n  ]);\n  const [editedDescription, setEditedDescription] = useState('');\n  const [selectedDescriptionId, setSelectedDescriptionId] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleUserChange = (event) => {\n    const userId = event.target.value;\n    const selectedUser = fakeUsers.find((user) => user.id === userId);\n    setCurrentUser(selectedUser);\n  };\n\n  const handleEditClick = (descriptionId, descriptionText) => {\n    setSelectedDescriptionId(descriptionId);\n    setEditedDescription(descriptionText);\n    setIsEditing(true);\n  };\n\n  const handleSaveClick = () => {\n    if (selectedDescriptionId !== null) {\n      const updatedDescriptions = fakeDescriptions.map((description) =>\n        description.id === selectedDescriptionId ? { ...description, description: editedDescription } : description\n      );\n      setFakeDescriptions(updatedDescriptions);\n      setIsEditing(false);\n      setSelectedDescriptionId(null);\n    }\n  };\n\n  return (\n    <div>\n      <FormControl fullWidth style={{ marginBottom: '20px' }}>\n        <InputLabel>User</InputLabel>\n        <Select value={currentUser.id} onChange={handleUserChange}>\n          {fakeUsers.map((user) => (\n            <MenuItem key={user.id} value={user.id}>\n              {user.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      {fakeDescriptions\n        .filter((description) => description.userId === currentUser.id)\n        .map((description) => (\n          <Card key={description.id} variant=\"outlined\" style={{ marginBottom: '10px' }}>\n            <CardContent>\n              <Typography variant=\"h6\">Timestamp: {description.timestamp}</Typography>\n              <Typography variant=\"body2\">Created by: {currentUser.name}</Typography>\n              {isEditing && selectedDescriptionId === description.id ? (\n                <TextField\n                  multiline\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Edit Description\"\n                  value={editedDescription}\n                  onChange={(e) => setEditedDescription(e.target.value)}\n                />\n              ) : (\n                <Typography variant=\"body1\">{description.description}</Typography>\n              )}\n              <div style={{ marginTop: '10px' }}>\n                {isEditing && selectedDescriptionId === description.id ? (\n                  <DialogActions>\n                    <Button onClick={handleSaveClick} color=\"primary\">\n                      Save\n                    </Button>\n                  </DialogActions>\n                ) : (\n                  <Button\n                    onClick={() => handleEditClick(description.id, description.description)}\n                    color=\"primary\"\n                  >\n                    Edit\n                  </Button>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n    </div>\n  );\n};\n\nexport default DescriptionList;\n\n\n\n\n// import {Grid } from \"@mui/material\";\n// import {SceneCards} from \"./\";\n// import sceneinfo from \"../data/sceneinfo\";\n\n\n// const Scene = (props) => {\n//   return (\n//     <Grid item xs={12} md={12}>\n//         {props.descriptions.map((item, idx) => (\n//             <SceneCards\n//             key = {idx}\n//             sceneNum = {idx+1}\n//             timeFrame = {item.time_stamp}\n//             screenText = \"Currently there is no on screen text, \"\n//             description = {item.descriptions}\n\n//             />\n//         ))}\n//     </Grid>\n//   )\n// }\n\n// export default Scene;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}