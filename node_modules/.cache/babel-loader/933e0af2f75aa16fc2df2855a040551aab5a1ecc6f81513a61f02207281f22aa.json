{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Stack, Typography, Grid, Button } from \"@mui/material\";\nimport { Sidebar, Comment, Player, AskAI, Navbar, TextToSpeech, DisplayDescriptions, ChatGPT } from \"./\";\nimport Comments from \"../data/comments\";\nimport { useLocation, Link } from \"react-router-dom\";\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPage = () => {\n  _s();\n  const [isLoading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [played, setPlayed] = useState();\n  const [desc, setDesc] = useState();\n  const [pauseVideo, setPauseVideo] = useState(false);\n  const location = useLocation();\n  const {\n    video_id\n  } = location.state;\n\n  // const [video, setVideo] = useState([]);\n  // const apiUrl = \"http://127.0.0.1:8000/api/video/\";\n  // const token = Cookies.get(\"jwtToken\");\n\n  // const params = { id: video_id, jwt: token };\n  // const url = \"http://127.0.0.1:8000/descriptions/\";\n  // const parameters = { video_id: video_id, jwt: token };\n\n  // useEffect(() => {\n  //   axios.get(apiUrl, { params: params })\n  //     .then((response) => {\n  //       setVideo(response.data.video);\n  //       console.log(\"Received video data\", response.data.video);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n\n  //   axios.get(url, { params: parameters })\n  //     .then((response) => {\n  //       console.log(\"Received description data\", response.data.video);\n  //       setDesc(\n  //         response.data.descriptions.map((item) => {\n  //           return JSON.parse(item);\n  //         })\n  //       );\n  //       setLoading(false);\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"Not receiving data\", err);\n  //     });\n  // }, []);\n\n  // if (isLoading) {\n  //   return <div className=\"App\">Loading...</div>;\n  // }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleCallback = progressData => {\n    setPlayed(progressData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        flexDirection: {\n          sx: \"column\",\n          md: \"row\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: {\n            sx: \"auto\",\n            md: \"100vh\"\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {\n          selectedCategory: selectedCategory,\n          setSelectedCategory: setSelectedCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        p: 3,\n        sx: {\n          overflowY: \"auto\",\n          height: \"90vh\",\n          flex: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(VideoPlayer, {\n            path: video.video_path,\n            title: video.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            p: 2,\n            sx: {\n              backgroundColor: \"primary.main\",\n              borderRadius: \"5px\",\n              paddingBottom: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: \"primary.dark\"\n              },\n              children: \"InfoBot Q&A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                overflow: \"scroll\",\n                height: {\n                  md: \"55vh\"\n                }\n              },\n              children: Comments.map(item => /*#__PURE__*/_jsxDEV(Comment, {\n                username: item.user,\n                question: item.question,\n                answer: item.answer,\n                timeStamp: item.timestamp\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), open && /*#__PURE__*/_jsxDEV(AskAI, {\n            videoID: video_id,\n            timeStamp: played,\n            parentCallback: handleClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            p: 2,\n            sx: {\n              backgroundColor: \"primary.main\",\n              borderRadius: \"5px\",\n              margin: \"20px 0\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: \"primary.dark\"\n              },\n              children: \"InfoBot Q&A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                backgroundColor: \"secondary.main\",\n                color: \"white\",\n                width: \"100%\",\n                marginTop: \"10px\"\n              },\n              className: \"category-btn\",\n              onClick: handleClickOpen,\n              children: [\"Ask infobot at \", played]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/EditDescriptionPage\",\n              state: {\n                video_id: video_id,\n                video_path: video.video_path\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  backgroundColor: \"secondary.main\",\n                  color: \"white\",\n                  width: \"100%\",\n                  marginTop: \"10px\"\n                },\n                className: \"category-btn\",\n                children: \"Add description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                backgroundColor: \"secondary.main\",\n                color: \"white\",\n                width: \"100%\",\n                marginTop: \"10px\"\n              },\n              className: \"category-btn\",\n              children: \"Generate AI description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPage, \"g75juRc1ES81vgoTXmoQQL7MJNY=\", false, function () {\n  return [useLocation];\n});\n_c = VideoPage;\nexport default VideoPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import { Box, Stack, Typography, Grid, Button, Dialog } from \"@mui/material\";\n// import {\n//   Sidebar,\n//   Comment,\n//   Player,\n//   AskAI,\n//   Navbar,\n//   TextToSpeech,\n//   DisplayDescriptions,\n//   ChatGPT,\n// } from \"./\";\n// import Comments from \"../data/comments\";\n// import { useLocation, Link } from \"react-router-dom\";\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n// import { getDescriptions } from \"../utils/functions.js\";\n// import VideoPlayer from \"./VideoPlayer\";\n\n// const VideoPage = () => {\n//   const [isLoading, setLoading] = useState(true);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n//   const [open, setOpen] = React.useState(false);\n//   const [played, setPlayed] = useState();\n//   const [desc, setDesc] = useState();\n//   // If we want to pause the video when the description is played it will need to be handled here\n//   const [pauseVideo, setPauseVideo] = useState(false);\n//   // using use location to get the props data along with the link\n//   const location = useLocation();\n//   const { video_id } = location.state;\n\n//   const [video, setVideo] = useState([]);\n//   const apiUrl = \"http://127.0.0.1:8000/api/video/\";\n//   const token = Cookies.get(\"jwtToken\");\n\n//   const params = {\n//     id: video_id,\n//     jwt: token,\n//   };\n//   const url = \"http://127.0.0.1:8000/descriptions/\";;\n//   const parameters = {\n//     video_id: video_id,\n//     jwt: token,\n//   };\n\n//   useEffect(() => {\n//     axios\n//       .get(apiUrl, {\n//         params: params,\n//       })\n//       .then((response) => {\n//         setVideo(response.data.video);\n//         console.log(\"This is what I am recieving\", response.data.video);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n\n//     axios\n//       .get(url, {\n//         params: parameters,\n//       })\n//       .then((response) => {\n//         console.log(\"This is what I am recieving\", response.data.video);\n//         setDesc(\n//           response.data.descriptions.map((item) => {\n//             return JSON.parse(item);\n//           })\n//         );\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         console.log(\"Not recieving data\", err);\n//       });\n//   }, []);\n\n//   if (isLoading) {\n//     return <div className=\"App\">Loading...</div>;\n//   }\n\n//   // console.log(\"This is the video\", video.video_path);\n//   console.log(\"This is what I am recieving in display description\", desc);\n\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n\n//   // this function just retrives the time the video is played\n//   const handleCallback = (progressData) => {\n//     setPlayed(progressData);\n//   };\n\n//   return (\n//     // The box is the sidebar\n//     <div>\n//       <Navbar />\n//       <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//         <Box sx={{ height: { sx: \"auto\", md: \"100vh\" } }}>\n//           <Sidebar\n//             selectedCategory={selectedCategory}\n//             setSelectedCategory={setSelectedCategory}\n//           />\n//         </Box>\n\n//         {/* This container consists of the video player, the video information for now is hardcoded*/}\n//         <Grid\n//           container\n//           spacing={2}\n//           p={3}\n//           sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}\n//         >\n//           <Grid item xs={12} md={8}>\n//           <VideoPlayer path={video.video_path} title={video.title}/>\n//           </Grid>\n\n//           {/* This grid represent the comments asked info, showing this next to the video */}\n//           <Grid item xs={6} md={4}>\n//             <Box\n//               p={2}\n//               sx={{\n//                 backgroundColor: \"primary.main\",\n//                 borderRadius: \"5px\",\n//                 paddingBottom: \"20px\",\n//               }}\n//             >\n//               <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                 InfoBot Q&A\n//               </Typography>\n//               <hr />\n//               <Box sx={{ overflow: \"scroll\", height: { md: \"55vh\" } }}>\n//                 {Comments.map((item) => (\n//                   <Comment\n//                     id={item.id}\n//                     username={item.user}\n//                     question={item.question}\n//                     answer={item.answer}\n//                     timeStamp={item.timestamp}\n//                   />\n//                 ))}\n//               </Box>\n//             </Box>\n\n//             {open && (\n//               <AskAI\n//                 videoID={video_id}\n//                 timeStamp={played}\n//                 parentCallback={handleClose}\n//               />\n//             )}\n\n//             <Box\n//               p={2}\n//               sx={{\n//                 backgroundColor: \"primary.main\",\n//                 borderRadius: \"5px\",\n//                 margin: \"20px 0\",\n//               }}\n//             >\n//               <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                 InfoBot Q&A\n//               </Typography>\n//               <hr />\n//               <Button\n//                 sx={{\n//                   backgroundColor: \"secondary.main\",\n//                   color: \"white\",\n//                   width: \"100%\",\n//                   marginTop: \"10px\",\n//                 }}\n//                 className=\"category-btn\"\n//                 onClick={handleClickOpen}\n//               >\n//                 Ask infobot at {played}\n//               </Button>\n//               <Link\n//                 to=\"/EditDescriptionPage\"\n//                 state={{ video_id: video_id, video_path: video.video_path }}\n//               >\n//                 <Button\n//                   sx={{\n//                     backgroundColor: \"secondary.main\",\n//                     color: \"white\",\n//                     width: \"100%\",\n//                     marginTop: \"10px\",\n//                   }}\n//                   className=\"category-btn\"\n//                 >\n//                   Add description\n//                 </Button>\n//               </Link>\n//               <Button\n//                 sx={{\n//                   backgroundColor: \"secondary.main\",\n//                   color: \"white\",\n//                   width: \"100%\",\n//                   marginTop: \"10px\",\n//                 }}\n//                 className=\"category-btn\"\n//               >\n//                 Generate AI description\n//               </Button>\n//             </Box>\n//           </Grid>\n//         </Grid>\n//       </Stack>\n//     </div>\n//   );\n// };\n\n// export default VideoPage;\nvar _c;\n$RefreshReg$(_c, \"VideoPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Stack","Typography","Grid","Button","Sidebar","Comment","Player","AskAI","Navbar","TextToSpeech","DisplayDescriptions","ChatGPT","Comments","useLocation","Link","jsxDEV","_jsxDEV","VideoPage","_s","isLoading","setLoading","selectedCategory","setSelectedCategory","open","setOpen","played","setPlayed","desc","setDesc","pauseVideo","setPauseVideo","location","video_id","state","handleClickOpen","handleClose","handleCallback","progressData","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexDirection","md","height","container","spacing","p","overflowY","flex","item","xs","VideoPlayer","path","video","video_path","title","backgroundColor","borderRadius","paddingBottom","variant","color","overflow","map","username","user","question","answer","timeStamp","timestamp","id","videoID","parentCallback","margin","width","marginTop","className","onClick","to","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Stack,\n  Typography,\n  Grid,\n  Button,\n} from \"@mui/material\";\nimport { Sidebar, Comment, Player, AskAI, Navbar, TextToSpeech, DisplayDescriptions, ChatGPT } from \"./\";\nimport Comments from \"../data/comments\";\nimport { useLocation, Link } from \"react-router-dom\";\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n\nconst VideoPage = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [played, setPlayed] = useState();\n  const [desc, setDesc] = useState();\n  const [pauseVideo, setPauseVideo] = useState(false);\n  \n  const location = useLocation();\n  const { video_id } = location.state;\n\n  // const [video, setVideo] = useState([]);\n  // const apiUrl = \"http://127.0.0.1:8000/api/video/\";\n  // const token = Cookies.get(\"jwtToken\");\n\n  // const params = { id: video_id, jwt: token };\n  // const url = \"http://127.0.0.1:8000/descriptions/\";\n  // const parameters = { video_id: video_id, jwt: token };\n\n  // useEffect(() => {\n  //   axios.get(apiUrl, { params: params })\n  //     .then((response) => {\n  //       setVideo(response.data.video);\n  //       console.log(\"Received video data\", response.data.video);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n\n  //   axios.get(url, { params: parameters })\n  //     .then((response) => {\n  //       console.log(\"Received description data\", response.data.video);\n  //       setDesc(\n  //         response.data.descriptions.map((item) => {\n  //           return JSON.parse(item);\n  //         })\n  //       );\n  //       setLoading(false);\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"Not receiving data\", err);\n  //     });\n  // }, []);\n\n  // if (isLoading) {\n  //   return <div className=\"App\">Loading...</div>;\n  // }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCallback = (progressData) => {\n    setPlayed(progressData);\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n        <Box sx={{ height: { sx: \"auto\", md: \"100vh\" } }}>\n          <Sidebar selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} />\n        </Box>\n\n        <Grid container spacing={2} p={3} sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}>\n          <Grid item xs={12} md={8}>\n            <VideoPlayer path={video.video_path} title={video.title} />\n          </Grid>\n\n          <Grid item xs={6} md={4}>\n            <Box p={2} sx={{ backgroundColor: \"primary.main\", borderRadius: \"5px\", paddingBottom: \"20px\" }}>\n              <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>InfoBot Q&A</Typography>\n              <hr />\n              <Box sx={{ overflow: \"scroll\", height: { md: \"55vh\" } }}>\n                {Comments.map((item) => (\n                  <Comment key={item.id} username={item.user} question={item.question} answer={item.answer} timeStamp={item.timestamp} />\n                ))}\n              </Box>\n            </Box>\n\n            {open && <AskAI videoID={video_id} timeStamp={played} parentCallback={handleClose} />}\n\n            <Box p={2} sx={{ backgroundColor: \"primary.main\", borderRadius: \"5px\", margin: \"20px 0\" }}>\n              <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>InfoBot Q&A</Typography>\n              <hr />\n              <Button sx={{ backgroundColor: \"secondary.main\", color: \"white\", width: \"100%\", marginTop: \"10px\" }} className=\"category-btn\" onClick={handleClickOpen}>Ask infobot at {played}</Button>\n              <Link to=\"/EditDescriptionPage\" state={{ video_id: video_id, video_path: video.video_path }}>\n                <Button sx={{ backgroundColor: \"secondary.main\", color: \"white\", width: \"100%\", marginTop: \"10px\" }} className=\"category-btn\">Add description</Button>\n              </Link>\n              <Button sx={{ backgroundColor: \"secondary.main\", color: \"white\", width: \"100%\", marginTop: \"10px\" }} className=\"category-btn\">Generate AI description</Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default VideoPage;\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { Box, Stack, Typography, Grid, Button, Dialog } from \"@mui/material\";\n// import {\n//   Sidebar,\n//   Comment,\n//   Player,\n//   AskAI,\n//   Navbar,\n//   TextToSpeech,\n//   DisplayDescriptions,\n//   ChatGPT,\n// } from \"./\";\n// import Comments from \"../data/comments\";\n// import { useLocation, Link } from \"react-router-dom\";\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n// import { getDescriptions } from \"../utils/functions.js\";\n// import VideoPlayer from \"./VideoPlayer\";\n\n// const VideoPage = () => {\n//   const [isLoading, setLoading] = useState(true);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n//   const [open, setOpen] = React.useState(false);\n//   const [played, setPlayed] = useState();\n//   const [desc, setDesc] = useState();\n//   // If we want to pause the video when the description is played it will need to be handled here\n//   const [pauseVideo, setPauseVideo] = useState(false);\n//   // using use location to get the props data along with the link\n//   const location = useLocation();\n//   const { video_id } = location.state;\n\n//   const [video, setVideo] = useState([]);\n//   const apiUrl = \"http://127.0.0.1:8000/api/video/\";\n//   const token = Cookies.get(\"jwtToken\");\n\n//   const params = {\n//     id: video_id,\n//     jwt: token,\n//   };\n//   const url = \"http://127.0.0.1:8000/descriptions/\";;\n//   const parameters = {\n//     video_id: video_id,\n//     jwt: token,\n//   };\n\n//   useEffect(() => {\n//     axios\n//       .get(apiUrl, {\n//         params: params,\n//       })\n//       .then((response) => {\n//         setVideo(response.data.video);\n//         console.log(\"This is what I am recieving\", response.data.video);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n\n//     axios\n//       .get(url, {\n//         params: parameters,\n//       })\n//       .then((response) => {\n//         console.log(\"This is what I am recieving\", response.data.video);\n//         setDesc(\n//           response.data.descriptions.map((item) => {\n//             return JSON.parse(item);\n//           })\n//         );\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         console.log(\"Not recieving data\", err);\n//       });\n//   }, []);\n\n\n\n//   if (isLoading) {\n//     return <div className=\"App\">Loading...</div>;\n//   }\n\n//   // console.log(\"This is the video\", video.video_path);\n//   console.log(\"This is what I am recieving in display description\", desc);\n\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n\n//   // this function just retrives the time the video is played\n//   const handleCallback = (progressData) => {\n//     setPlayed(progressData);\n//   };\n\n//   return (\n//     // The box is the sidebar\n//     <div>\n//       <Navbar />\n//       <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//         <Box sx={{ height: { sx: \"auto\", md: \"100vh\" } }}>\n//           <Sidebar\n//             selectedCategory={selectedCategory}\n//             setSelectedCategory={setSelectedCategory}\n//           />\n//         </Box>\n\n//         {/* This container consists of the video player, the video information for now is hardcoded*/}\n//         <Grid\n//           container\n//           spacing={2}\n//           p={3}\n//           sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}\n//         >\n//           <Grid item xs={12} md={8}>\n//           <VideoPlayer path={video.video_path} title={video.title}/>\n//           </Grid>\n\n//           {/* This grid represent the comments asked info, showing this next to the video */}\n//           <Grid item xs={6} md={4}>\n//             <Box\n//               p={2}\n//               sx={{\n//                 backgroundColor: \"primary.main\",\n//                 borderRadius: \"5px\",\n//                 paddingBottom: \"20px\",\n//               }}\n//             >\n//               <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                 InfoBot Q&A\n//               </Typography>\n//               <hr />\n//               <Box sx={{ overflow: \"scroll\", height: { md: \"55vh\" } }}>\n//                 {Comments.map((item) => (\n//                   <Comment\n//                     id={item.id}\n//                     username={item.user}\n//                     question={item.question}\n//                     answer={item.answer}\n//                     timeStamp={item.timestamp}\n//                   />\n//                 ))}\n//               </Box>\n//             </Box>\n\n//             {open && (\n//               <AskAI\n//                 videoID={video_id}\n//                 timeStamp={played}\n//                 parentCallback={handleClose}\n//               />\n//             )}\n\n//             <Box\n//               p={2}\n//               sx={{\n//                 backgroundColor: \"primary.main\",\n//                 borderRadius: \"5px\",\n//                 margin: \"20px 0\",\n//               }}\n//             >\n//               <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                 InfoBot Q&A\n//               </Typography>\n//               <hr />\n//               <Button\n//                 sx={{\n//                   backgroundColor: \"secondary.main\",\n//                   color: \"white\",\n//                   width: \"100%\",\n//                   marginTop: \"10px\",\n//                 }}\n//                 className=\"category-btn\"\n//                 onClick={handleClickOpen}\n//               >\n//                 Ask infobot at {played}\n//               </Button>\n//               <Link\n//                 to=\"/EditDescriptionPage\"\n//                 state={{ video_id: video_id, video_path: video.video_path }}\n//               >\n//                 <Button\n//                   sx={{\n//                     backgroundColor: \"secondary.main\",\n//                     color: \"white\",\n//                     width: \"100%\",\n//                     marginTop: \"10px\",\n//                   }}\n//                   className=\"category-btn\"\n//                 >\n//                   Add description\n//                 </Button>\n//               </Link>\n//               <Button\n//                 sx={{\n//                   backgroundColor: \"secondary.main\",\n//                   color: \"white\",\n//                   width: \"100%\",\n//                   marginTop: \"10px\",\n//                 }}\n//                 className=\"category-btn\"\n//               >\n//                 Generate AI description\n//               </Button>\n//             </Box>\n//           </Grid>\n//         </Grid>\n//       </Stack>\n//     </div>\n//   );\n// };\n\n// export default VideoPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}