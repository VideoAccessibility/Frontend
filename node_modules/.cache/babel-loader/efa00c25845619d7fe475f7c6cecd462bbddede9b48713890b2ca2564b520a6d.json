{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Videos.jsx\";\nimport React from \"react\";\nimport { Stack, Box } from \"@mui/material\";\nimport { VideoCard } from \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ensureVideoUrlFormat(url) {\n  // Check if the URL already starts with \"videos/\"\n  if (!url.startsWith(\"videos/\")) {\n    // If not, prepend \"videos/\" to the URL\n    url = \"videos/\" + url;\n  }\n  return url;\n}\nfunction transformPath(path) {\n  if (path) {\n    // Replace the file extension with \".png\"\n    return \"http://127.0.0.1:8000/\" + path.replace(/\\.mp4$/, '.png');\n  } else {\n    // Handle the case where path is null or undefined\n    return \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/A_black_image.jpg/640px-A_black_image.jpg\";\n  }\n}\nconst Videos = props => {\n  console.log(\"these are the props\", props.videos);\n  // Reverse the array to display videos in a Last In, First Out (LIFO) order\n  const reversedVideos = [...props.videos].reverse();\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    gap: 2,\n    children: reversedVideos.map((item, idx) => /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(VideoCard, {\n        id: item.id,\n        path: ensureVideoUrlFormat(item.video_path),\n        channelTitle: item.title,\n        title: item.title,\n        image: transformPath(item.video_path)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","Stack","Box","VideoCard","jsxDEV","_jsxDEV","ensureVideoUrlFormat","url","startsWith","transformPath","path","replace","Videos","props","console","log","videos","reversedVideos","reverse","direction","flexWrap","justifyContent","alignItems","gap","children","map","item","idx","id","video_path","channelTitle","title","image","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Videos.jsx"],"sourcesContent":["import React from \"react\";\nimport { Stack, Box } from \"@mui/material\";\nimport { VideoCard } from \"./\";\n\n\nfunction ensureVideoUrlFormat(url) {\n  // Check if the URL already starts with \"videos/\"\n  if (!url.startsWith(\"videos/\")) {\n      // If not, prepend \"videos/\" to the URL\n      url = \"videos/\" + url;\n  }\n  return url;\n}\n\nfunction transformPath(path) {\n  if (path) {\n    // Replace the file extension with \".png\"\n    return \"http://127.0.0.1:8000/\" + path.replace(/\\.mp4$/, '.png');\n  } else {\n    // Handle the case where path is null or undefined\n    return \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/A_black_image.jpg/640px-A_black_image.jpg\";\n  }\n}\n\nconst Videos = (props) => {\n  console.log(\"these are the props\", props.videos);\n  // Reverse the array to display videos in a Last In, First Out (LIFO) order\n  const reversedVideos = [...props.videos].reverse();\n\n  return (\n    <Stack\n      direction={\"row\"}\n      flexWrap=\"wrap\"\n      justifyContent=\"start\"\n      alignItems=\"start\"\n      gap={2}\n    >\n      {reversedVideos.map((item, idx) => (\n        <Box key={idx}>\n          {\n            <VideoCard\n              id={item.id}\n              path={ensureVideoUrlFormat(item.video_path)}\n              channelTitle={item.title}\n              title={item.title}\n              image={transformPath(item.video_path)}\n            />\n          }\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nexport default Videos;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,GAAG,QAAQ,eAAe;AAC1C,SAASC,SAAS,QAAQ,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/B,SAASC,oBAAoBA,CAACC,GAAG,EAAE;EACjC;EACA,IAAI,CAACA,GAAG,CAACC,UAAU,CAAC,SAAS,CAAC,EAAE;IAC5B;IACAD,GAAG,GAAG,SAAS,GAAGA,GAAG;EACzB;EACA,OAAOA,GAAG;AACZ;AAEA,SAASE,aAAaA,CAACC,IAAI,EAAE;EAC3B,IAAIA,IAAI,EAAE;IACR;IACA,OAAO,wBAAwB,GAAGA,IAAI,CAACC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC;EAClE,CAAC,MAAM;IACL;IACA,OAAO,qGAAqG;EAC9G;AACF;AAEA,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACxBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,KAAK,CAACG,MAAM,CAAC;EAChD;EACA,MAAMC,cAAc,GAAG,CAAC,GAAGJ,KAAK,CAACG,MAAM,CAAC,CAACE,OAAO,CAAC,CAAC;EAElD,oBACEb,OAAA,CAACJ,KAAK;IACJkB,SAAS,EAAE,KAAM;IACjBC,QAAQ,EAAC,MAAM;IACfC,cAAc,EAAC,OAAO;IACtBC,UAAU,EAAC,OAAO;IAClBC,GAAG,EAAE,CAAE;IAAAC,QAAA,EAENP,cAAc,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBAC5BtB,OAAA,CAACH,GAAG;MAAAsB,QAAA,eAEAnB,OAAA,CAACF,SAAS;QACRyB,EAAE,EAAEF,IAAI,CAACE,EAAG;QACZlB,IAAI,EAAEJ,oBAAoB,CAACoB,IAAI,CAACG,UAAU,CAAE;QAC5CC,YAAY,EAAEJ,IAAI,CAACK,KAAM;QACzBA,KAAK,EAAEL,IAAI,CAACK,KAAM;QAClBC,KAAK,EAAEvB,aAAa,CAACiB,IAAI,CAACG,UAAU;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IAAC,GARIT,GAAG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUR,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ,CAAC;AAACC,EAAA,GA5BIzB,MAAM;AA8BZ,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}