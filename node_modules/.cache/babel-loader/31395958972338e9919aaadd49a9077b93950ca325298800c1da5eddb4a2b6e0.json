{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/TextToSpeech.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextToSpeech = ({\n  text,\n  isPlayed,\n  onStart,\n  onEnd\n}) => {\n  _s();\n  const [synth, setSynth] = useState(window.speechSynthesis);\n  const [utterance, setUtterance] = useState(new SpeechSynthesisUtterance(text));\n  const [isPaused, setIsPaused] = useState(false);\n  useEffect(() => {\n    utterance.text = text;\n    utterance.onstart = () => {\n      setIsPaused(false);\n      if (onStart) {\n        onStart();\n      }\n    };\n    utterance.onend = () => {\n      setIsPaused(true);\n      if (onEnd) {\n        onEnd();\n      }\n    };\n    if (isPlayed && !isPaused) {\n      synth.speak(utterance);\n    } else if (!isPlayed && !synth.paused) {\n      synth.pause();\n    }\n    return () => {\n      synth.cancel();\n    };\n  }, [synth, utterance, text, isPlayed, isPaused, onStart, onEnd]);\n  const handlePauseResume = () => {\n    if (isPaused) {\n      synth.resume();\n    } else {\n      synth.pause();\n    }\n  };\n  const handleStop = () => {\n    synth.cancel();\n    setIsPaused(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        backgroundColor: \"secondary.main\",\n        color: \"white\",\n        margin: \"10px\"\n      },\n      className: \"category-btn\",\n      onClick: handlePauseResume,\n      children: isPaused ? \"Resume\" : \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        backgroundColor: \"secondary.main\",\n        color: \"white\",\n        margin: \"10px\"\n      },\n      className: \"category-btn\",\n      onClick: handleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(TextToSpeech, \"rH1iVUcQU1xU/LHIlRykBRTpPpk=\");\n_c = TextToSpeech;\nexport default TextToSpeech;\n\n// import React, { useState, useEffect } from \"react\";\n// import {Button} from \"@mui/material\";\n\n// const TextToSpeech = ({ text, isPlayed, onStart, onEnd }) => {\n//   const [isPaused, setIsPaused] = useState(false);\n//   const [utterance, setUtterance] = useState(null);\n//   const [voice, setVoice] = useState(null);\n//   const [pitch, setPitch] = useState(1);\n//   const [rate, setRate] = useState(1);\n//   const [volume, setVolume] = useState(1);\n\n//   useEffect(() => {\n//     const synth = window.speechSynthesis;\n//     const u = new SpeechSynthesisUtterance(text);\n//     const voices = synth.getVoices();\n\n//     setUtterance(u);\n//     setVoice(voices[0]);\n\n//     return () => {\n//       synth.cancel();\n//     };\n//   }, [text]);\n\n//   const handlePlay = () => {\n//     const synth = window.speechSynthesis;\n\n//     if (isPlayed && !isPaused) {\n//       utterance.voice = voice;\n//       utterance.pitch = pitch;\n//       utterance.rate = rate;\n//       utterance.volume = volume;\n//       synth.speak(utterance);\n\n//       if (onStart) {\n//         onStart();\n//       }\n//     }\n\n//     setIsPaused(false);\n//   };\n\n//   const handlePause = () => {\n//     const synth = window.speechSynthesis;\n//     synth.pause();\n//     setIsPaused(true);\n//   };\n\n//   const handleStop = () => {\n//     const synth = window.speechSynthesis;\n\n//     if (isPlayed && !synth.paused) {\n//       synth.cancel();\n\n//       if (onEnd) {\n//         onEnd();\n//       }\n//     }\n\n//     setIsPaused(false);\n//   };\n\n//   // const handlePlay = () => {\n//   //   const synth = window.speechSynthesis;\n\n//   //   if (isPaused) {\n//   //     synth.resume();\n//   //   } else {\n//   //     utterance.voice = voice;\n//   //     utterance.pitch = pitch;\n//   //     utterance.rate = rate;\n//   //     utterance.volume = volume;\n//   //     synth.speak(utterance);\n//   //   }\n\n//   //   setIsPaused(false);\n//   // };\n\n//   // const handlePause = () => {\n//   //   const synth = window.speechSynthesis;\n\n//   //   synth.pause();\n\n//   //   setIsPaused(true);\n//   // };\n\n//   // const handleStop = () => {\n//   //   const synth = window.speechSynthesis;\n\n//   //   synth.cancel();\n\n//   //   setIsPaused(false);\n//   // };\n\n//   const handleVoiceChange = (event) => {\n//     const voices = window.speechSynthesis.getVoices();\n//     setVoice(voices.find((v) => v.name === event.target.value));\n//   };\n\n//   const handleRateChange = (event) => {\n//     setRate(parseFloat(event.target.value));\n//   };\n\n//   const handleVolumeChange = (event) => {\n//     setVolume(parseFloat(event.target.value));\n//   };\n\n//   return (\n//     <div>\n//       <label>\n//         Voice:\n//         <select value={voice?.name} onChange={handleVoiceChange}>\n//           {window.speechSynthesis.getVoices().map((voice) => (\n//             <option key={voice.name} value={voice.name}>\n//               {voice.name}\n//             </option>\n//           ))}\n//         </select>\n//       </label>\n\n//       <br />\n\n//       <label>\n//         Speed:\n//         <input\n//           type=\"range\"\n//           min=\"0.5\"\n//           max=\"2\"\n//           step=\"0.1\"\n//           value={rate}\n//           onChange={handleRateChange}\n//         />\n//       </label>\n//       <br />\n//       <label>\n//         Volume:\n//         <input\n//           type=\"range\"\n//           min=\"0\"\n//           max=\"1\"\n//           step=\"0.1\"\n//           value={volume}\n//           onChange={handleVolumeChange}\n//         />\n//       </label>\n\n//       <br />\n\n//       <Button sx= {{backgroundColor: \"secondary.main\", color : \"white\", margin:\"10px\"}} className=\"category-btn\" onClick={handlePlay}>{isPaused ? \"Resume\" : \"Play\"}</Button>\n//       <Button sx= {{backgroundColor: \"secondary.main\", color : \"white\", margin:\"10px\"}} className=\"category-btn\" onClick={handlePause}>Pause</Button>\n//       <Button sx= {{backgroundColor: \"secondary.main\", color : \"white\",  margin:\"10px\"}} className=\"category-btn\" onClick={handleStop}>Stop</Button>\n//     </div>\n//   );\n// };\n\n// export default TextToSpeech;\nvar _c;\n$RefreshReg$(_c, \"TextToSpeech\");","map":{"version":3,"names":["React","useState","useEffect","Button","jsxDEV","_jsxDEV","TextToSpeech","text","isPlayed","onStart","onEnd","_s","synth","setSynth","window","speechSynthesis","utterance","setUtterance","SpeechSynthesisUtterance","isPaused","setIsPaused","onstart","onend","speak","paused","pause","cancel","handlePauseResume","resume","handleStop","children","sx","backgroundColor","color","margin","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/TextToSpeech.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button } from \"@mui/material\";\n\nconst TextToSpeech = ({ text, isPlayed, onStart, onEnd }) => {\n  const [synth, setSynth] = useState(window.speechSynthesis);\n  const [utterance, setUtterance] = useState(new SpeechSynthesisUtterance(text));\n  const [isPaused, setIsPaused] = useState(false);\n\n  useEffect(() => {\n    utterance.text = text;\n\n    utterance.onstart = () => {\n      setIsPaused(false);\n      if (onStart) {\n        onStart();\n      }\n    };\n\n    utterance.onend = () => {\n      setIsPaused(true);\n      if (onEnd) {\n        onEnd();\n      }\n    };\n\n    if (isPlayed && !isPaused) {\n      synth.speak(utterance);\n    } else if (!isPlayed && !synth.paused) {\n      synth.pause();\n    }\n\n    return () => {\n      synth.cancel();\n    };\n  }, [synth, utterance, text, isPlayed, isPaused, onStart, onEnd]);\n\n  const handlePauseResume = () => {\n    if (isPaused) {\n      synth.resume();\n    } else {\n      synth.pause();\n    }\n  };\n\n  const handleStop = () => {\n    synth.cancel();\n    setIsPaused(false);\n  };\n\n  return (\n    <div>\n      <Button\n        sx={{ backgroundColor: \"secondary.main\", color: \"white\", margin: \"10px\" }}\n        className=\"category-btn\"\n        onClick={handlePauseResume}\n      >\n        {isPaused ? \"Resume\" : \"Pause\"}\n      </Button>\n      <Button\n        sx={{ backgroundColor: \"secondary.main\", color: \"white\", margin: \"10px\" }}\n        className=\"category-btn\"\n        onClick={handleStop}\n      >\n        Stop\n      </Button>\n    </div>\n  );\n};\n\nexport default TextToSpeech;\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import {Button} from \"@mui/material\";\n\n// const TextToSpeech = ({ text, isPlayed, onStart, onEnd }) => {\n//   const [isPaused, setIsPaused] = useState(false);\n//   const [utterance, setUtterance] = useState(null);\n//   const [voice, setVoice] = useState(null);\n//   const [pitch, setPitch] = useState(1);\n//   const [rate, setRate] = useState(1);\n//   const [volume, setVolume] = useState(1);\n\n//   useEffect(() => {\n//     const synth = window.speechSynthesis;\n//     const u = new SpeechSynthesisUtterance(text);\n//     const voices = synth.getVoices();\n\n//     setUtterance(u);\n//     setVoice(voices[0]);\n\n//     return () => {\n//       synth.cancel();\n//     };\n//   }, [text]);\n\n\n//   const handlePlay = () => {\n//     const synth = window.speechSynthesis;\n\n//     if (isPlayed && !isPaused) {\n//       utterance.voice = voice;\n//       utterance.pitch = pitch;\n//       utterance.rate = rate;\n//       utterance.volume = volume;\n//       synth.speak(utterance);\n\n//       if (onStart) {\n//         onStart();\n//       }\n//     }\n\n//     setIsPaused(false);\n//   };\n\n//   const handlePause = () => {\n//     const synth = window.speechSynthesis;\n//     synth.pause();\n//     setIsPaused(true);\n//   };\n\n//   const handleStop = () => {\n//     const synth = window.speechSynthesis;\n\n//     if (isPlayed && !synth.paused) {\n//       synth.cancel();\n\n//       if (onEnd) {\n//         onEnd();\n//       }\n//     }\n\n//     setIsPaused(false);\n//   };\n\n//   // const handlePlay = () => {\n//   //   const synth = window.speechSynthesis;\n\n//   //   if (isPaused) {\n//   //     synth.resume();\n//   //   } else {\n//   //     utterance.voice = voice;\n//   //     utterance.pitch = pitch;\n//   //     utterance.rate = rate;\n//   //     utterance.volume = volume;\n//   //     synth.speak(utterance);\n//   //   }\n\n//   //   setIsPaused(false);\n//   // };\n\n//   // const handlePause = () => {\n//   //   const synth = window.speechSynthesis;\n\n//   //   synth.pause();\n\n//   //   setIsPaused(true);\n//   // };\n\n//   // const handleStop = () => {\n//   //   const synth = window.speechSynthesis;\n\n//   //   synth.cancel();\n\n//   //   setIsPaused(false);\n//   // };\n\n//   const handleVoiceChange = (event) => {\n//     const voices = window.speechSynthesis.getVoices();\n//     setVoice(voices.find((v) => v.name === event.target.value));\n//   };\n\n//   const handleRateChange = (event) => {\n//     setRate(parseFloat(event.target.value));\n//   };\n\n//   const handleVolumeChange = (event) => {\n//     setVolume(parseFloat(event.target.value));\n//   };\n\n//   return (\n//     <div>\n//       <label>\n//         Voice:\n//         <select value={voice?.name} onChange={handleVoiceChange}>\n//           {window.speechSynthesis.getVoices().map((voice) => (\n//             <option key={voice.name} value={voice.name}>\n//               {voice.name}\n//             </option>\n//           ))}\n//         </select>\n//       </label>\n\n//       <br />\n\n//       <label>\n//         Speed:\n//         <input\n//           type=\"range\"\n//           min=\"0.5\"\n//           max=\"2\"\n//           step=\"0.1\"\n//           value={rate}\n//           onChange={handleRateChange}\n//         />\n//       </label>\n//       <br />\n//       <label>\n//         Volume:\n//         <input\n//           type=\"range\"\n//           min=\"0\"\n//           max=\"1\"\n//           step=\"0.1\"\n//           value={volume}\n//           onChange={handleVolumeChange}\n//         />\n//       </label>\n\n//       <br />\n\n//       <Button sx= {{backgroundColor: \"secondary.main\", color : \"white\", margin:\"10px\"}} className=\"category-btn\" onClick={handlePlay}>{isPaused ? \"Resume\" : \"Play\"}</Button>\n//       <Button sx= {{backgroundColor: \"secondary.main\", color : \"white\", margin:\"10px\"}} className=\"category-btn\" onClick={handlePause}>Pause</Button>\n//       <Button sx= {{backgroundColor: \"secondary.main\", color : \"white\",  margin:\"10px\"}} className=\"category-btn\" onClick={handleStop}>Stop</Button>\n//     </div>\n//   );\n// };\n\n// export default TextToSpeech;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}