{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/ChatGPT.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { TextToSpeech } from \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatGPT = props => {\n  _s();\n  const videoRef = useRef(null);\n  const video = require('./' + props.path);\n  const [videoDescriptions, setVideoDescriptions] = useState([{\n    timestamp: 0,\n    description: \"Description for start of video\"\n  }, {\n    timestamp: 5,\n    description: \"Description at 5 seconds\"\n  }, {\n    timestamp: 10,\n    description: \"Description at 10 seconds\"\n  }\n  // Add more descriptions with timestamps as needed\n  ]);\n\n  const [currentDescriptionIndex, setCurrentDescriptionIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    const video = document.getElementById('video');\n    const handleTimeUpdate = () => {\n      const currentTime = Math.floor(video.currentTime);\n      const index = videoDescriptions.findIndex(description => description.timestamp === currentTime);\n      if (index !== -1 && index !== currentDescriptionIndex) {\n        setCurrentDescriptionIndex(index);\n        video.pause();\n      }\n    };\n    video.addEventListener('timeupdate', handleTimeUpdate);\n    return () => {\n      video.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, [currentDescriptionIndex, videoDescriptions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"video\",\n      controls: true,\n      width: \"640\",\n      height: \"360\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: video,\n        ref: videoRef,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Video Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: videoDescriptions[currentDescriptionIndex].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextToSpeech, {\n        text: videoDescriptions[currentDescriptionIndex].description,\n        videoRef: videoRef,\n        onStart: () => console.log('Speech started'),\n        onEnd: () => setIsPlaying(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isPlaying && /*#__PURE__*/_jsxDEV(TextToSpeech, {\n        text: videoDescriptions[currentDescriptionIndex].description,\n        voice: \"Google UK English Female\",\n        rate: \"0.9\",\n        pitch: \"1\",\n        onStart: () => console.log('Speech started'),\n        onEnd: () => setIsPlaying(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatGPT, \"cn4pMBa50i9h2Z6ph+E/ScNYKe0=\");\n_c = ChatGPT;\nexport default ChatGPT;\nvar _c;\n$RefreshReg$(_c, \"ChatGPT\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TextToSpeech","jsxDEV","_jsxDEV","ChatGPT","props","_s","videoRef","video","require","path","videoDescriptions","setVideoDescriptions","timestamp","description","currentDescriptionIndex","setCurrentDescriptionIndex","isPlaying","setIsPlaying","document","getElementById","handleTimeUpdate","currentTime","Math","floor","index","findIndex","pause","addEventListener","removeEventListener","children","id","controls","width","height","src","ref","type","fileName","_jsxFileName","lineNumber","columnNumber","text","onStart","console","log","onEnd","voice","rate","pitch","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/ChatGPT.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { TextToSpeech } from \"./\";\n\nconst ChatGPT = (props) => {\n    const videoRef = useRef(null);\n  const video = require('./' + props.path);\n  const [videoDescriptions, setVideoDescriptions] = useState([\n    { timestamp: 0, description: \"Description for start of video\" },\n    { timestamp: 5, description: \"Description at 5 seconds\" },\n    { timestamp: 10, description: \"Description at 10 seconds\" },\n    // Add more descriptions with timestamps as needed\n  ]);\n\n  const [currentDescriptionIndex, setCurrentDescriptionIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    const video = document.getElementById('video');\n\n    const handleTimeUpdate = () => {\n      const currentTime = Math.floor(video.currentTime);\n      const index = videoDescriptions.findIndex(description => description.timestamp === currentTime);\n\n      if (index !== -1 && index !== currentDescriptionIndex) {\n        setCurrentDescriptionIndex(index);\n        video.pause();\n      }\n    };\n\n    video.addEventListener('timeupdate', handleTimeUpdate);\n\n    return () => {\n      video.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, [currentDescriptionIndex, videoDescriptions]);\n\n  return (\n    <div>\n      <video id=\"video\" controls width=\"640\" height=\"360\">\n        <source src={video} ref={videoRef} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n\n      <div>\n        <h2>Video Description</h2>\n        <p>{videoDescriptions[currentDescriptionIndex].description}</p>\n        <TextToSpeech\n            text={videoDescriptions[currentDescriptionIndex].description}\n            videoRef={videoRef}\n            onStart={() => console.log('Speech started')}\n            onEnd={() => setIsPlaying(false)}\n          />\n      </div>\n\n      <div>\n        {isPlaying && (\n\n          <TextToSpeech\n            text={videoDescriptions[currentDescriptionIndex].description}\n            voice=\"Google UK English Female\"\n            rate=\"0.9\"\n            pitch=\"1\"\n            onStart={() => console.log('Speech started')}\n            onEnd={() => setIsPlaying(false)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatGPT;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}