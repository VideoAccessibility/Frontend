{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AddDescriptions.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { Box, Stack, Typography, Grid, TextField, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Chip } from \"@mui/material\";\nimport { Sidebar, Player, Navbar, Notes } from \"./\";\nimport formatTime from \"../utils/functions\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddDescriptions = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState();\n  const [endTime, setEndTime] = useState(\"\");\n  const [played, setPlayed] = useState(0);\n  const [frames, setFrames] = useState([]);\n  const [description, setDescription] = useState(\"\");\n  const [selectedFrameIndex, setSelectedFrameIndex] = useState(null);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const location = useLocation();\n  const {\n    video_id,\n    video_path\n  } = location.state;\n  const handleCallback = progressData => {\n    console.log(\"this is played\", progressData);\n    setPlayed(progressData);\n  };\n  const handleAddFrame = () => {\n    if (played && description) {\n      console.log(\"This is played\", played);\n      const newFrame = {\n        time: played,\n        description: description\n      };\n      setFrames([...frames, newFrame]);\n      setDescription(\"\");\n      // setPlayed(\"\");\n    }\n\n    console.log(\"this is my frames\", frames);\n  };\n  const handleRemoveFrame = index => {\n    const updatedFrames = [...frames];\n    updatedFrames.splice(index, 1);\n    setFrames(updatedFrames);\n  };\n  const handleEditFrame = index => {\n    setSelectedFrameIndex(index);\n    setDescription(frames[index].description);\n    setPlayed(frames[index].time);\n    setEditDialogOpen(true);\n  };\n  const handleSaveEdit = () => {\n    if (played && description) {\n      const updatedFrames = [...frames];\n      updatedFrames[selectedFrameIndex].description = description;\n      updatedFrames[selectedFrameIndex].time = played;\n      setFrames(updatedFrames);\n      setEditDialogOpen(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        flexDirection: {\n          sx: \"column\",\n          md: \"row\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: {\n            sx: \"auto\",\n            md: \"100vh\"\n          },\n          paddingRight: {\n            sx: 0,\n            md: 2\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {\n          selectedCategory: selectedCategory,\n          setSelectedCategory: setSelectedCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        p: 3,\n        sx: {\n          overflowY: \"auto\",\n          height: \"90vh\",\n          flex: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Player, {\n            path: video_path,\n            parentCallback: handleCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Notes, {\n          videoId: video_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            p: 2,\n            sx: {\n              backgroundColor: \"primary.main\",\n              borderRadius: \"5px\",\n              paddingBottom: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: \"primary.dark\"\n              },\n              children: [\"Add description at \", formatTime(played)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              value: description,\n              onChange: e => setDescription(e.target.value),\n              variant: \"outlined\",\n              fullWidth: true,\n              placeholder: \"Enter description\",\n              sx: {\n                marginBottom: \"10px\",\n                backgroundColor: \"white\",\n                borderRadius: \"5px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                backgroundColor: \"secondary.main\",\n                color: \"white\"\n              },\n              className: \"category-btn\",\n              onClick: handleAddFrame,\n              children: \"Add Frame\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), frames.map((frame, index) => /*#__PURE__*/_jsxDEV(Box, {\n            p: 2,\n            sx: {\n              backgroundColor: \"primary.main\",\n              borderRadius: \"5px\",\n              margin: \"20px 0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              rowSpacing: 2,\n              columnSpacing: {\n                xs: 1,\n                sm: 2,\n                md: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: \"primary.dark\"\n                  },\n                  children: [\"Scene \", index]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: formatTime(frame.time),\n                  sx: {\n                    backgroundColor: \"secondary.light\",\n                    color: \"white\",\n                    marginBottom: \"20px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"delete\",\n                    onClick: () => handleRemoveFrame(index),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      sx: {\n                        color: \"#EF6262\"\n                      },\n                      \"aria-label\": \"delete scene\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"edit\",\n                    onClick: () => handleEditFrame(index),\n                    sx: {\n                      marginLeft: \"20px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                      sx: {\n                        color: \"#EF6262\"\n                      },\n                      \"aria-label\": \"edit scene\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 3,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  sx: {\n                    color: \"primary.dark\"\n                  },\n                  children: \"On screen text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 9,\n                md: 10,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  p: 1.5,\n                  borderRadius: \"5px\",\n                  sx: {\n                    backgroundColor: \"white\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    sx: {\n                      color: \"primary.dark\"\n                    },\n                    children: \"Currently, no screen text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 3,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  sx: {\n                    color: \"primary.dark\"\n                  },\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 9,\n                md: 10,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  p: 1.5,\n                  borderRadius: \"5px\",\n                  sx: {\n                    backgroundColor: \"white\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    sx: {\n                      color: \"#1D5B79\"\n                    },\n                    children: frame.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Dialog, {\n            open: editDialogOpen,\n            onClose: () => setEditDialogOpen(false),\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              children: [\"Edit Description at timestamp \", played]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                value: description,\n                onChange: e => setDescription(e.target.value),\n                variant: \"outlined\",\n                fullWidth: true,\n                placeholder: \"Enter description\",\n                style: {\n                  marginBottom: \"10px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                value: played,\n                onChange: e => setPlayed(e.target.value),\n                variant: \"outlined\",\n                fullWidth: true,\n                placeholder: \"Enter timestamp\",\n                style: {\n                  marginBottom: \"10px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setEditDialogOpen(false),\n                sx: {\n                  backgroundColor: \"secondary.main\",\n                  color: \"white\"\n                },\n                className: \"category-btn\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleSaveEdit,\n                sx: {\n                  backgroundColor: \"secondary.main\",\n                  color: \"white\"\n                },\n                className: \"category-btn\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AddDescriptions, \"OcgYb9oUhoQ5T1U0wphhWUnQYMA=\", false, function () {\n  return [useLocation];\n});\n_c = AddDescriptions;\nexport default AddDescriptions;\n\n// import React, { useState } from \"react\";\n// import DeleteIcon from \"@mui/icons-material/Delete\";\n// import EditIcon from \"@mui/icons-material/Edit\";\n// import {\n//   Box,\n//   Stack,\n//   Typography,\n//   Grid,\n//   TextField,\n//   Button,\n//   IconButton,\n//   Dialog,\n//   DialogTitle,\n//   DialogContent,\n//   DialogActions,\n//   Chip,\n// } from \"@mui/material\";\n// import { Sidebar, Player, Navbar, Notes } from \"./\";\n// import formatTime from \"../utils/functions\";\n// import { useLocation, Link } from \"react-router-dom\";\n\n// const AddDescriptions = () => {\n//   const [selectedCategory, setSelectedCategory] = useState();\n//   const [played, setPlayed] = useState(0);\n//   const [frames, setFrames] = useState([]);\n//   const [description, setDescription] = useState(\"\");\n//   const [selectedFrameIndex, setSelectedFrameIndex] = useState(null);\n//   const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n//   const location = useLocation();\n//   const { video_id, video_path } = location.state;\n\n//   const handleCallback = (progressData) => {\n//     console.log(\"this is played\", progressData)\n//     setPlayed(progressData);\n//   };\n\n//   const handleAddFrame = () => {\n//     if (played && description) {\n//       console.log(\"This is played\", played)\n//       const newFrame = { time: played, description: description };\n//       setFrames([...frames, newFrame]);\n//       setDescription(\"\");\n//       // setPlayed(\"\");\n//     }\n//     console.log(\"this is my frames\", frames)\n//   };\n\n//   const handleRemoveFrame = (index) => {\n//     const updatedFrames = [...frames];\n//     updatedFrames.splice(index, 1);\n//     setFrames(updatedFrames);\n//   };\n\n//   const handleEditFrame = (index) => {\n//     setSelectedFrameIndex(index);\n//     setDescription(frames[index].description);\n//     setPlayed(frames[index].time);\n//     setEditDialogOpen(true);\n//   };\n\n//   const handleSaveEdit = () => {\n//     if (played && description) {\n//       const updatedFrames = [...frames];\n//       updatedFrames[selectedFrameIndex].description = description;\n//       updatedFrames[selectedFrameIndex].time = played;\n//       setFrames(updatedFrames);\n//       setEditDialogOpen(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//         <Box\n//           sx={{\n//             height: { sx: \"auto\", md: \"100vh\" },\n//             paddingRight: { sx: 0, md: 2 },\n//           }}\n//         >\n//           <Sidebar\n//             selectedCategory={selectedCategory}\n//             setSelectedCategory={setSelectedCategory}\n//           />\n//         </Box>\n\n//         <Grid\n//           container\n//           spacing={2}\n//           p={3}\n//           sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}\n//         >\n//           <Grid item xs={12} md={8}>\n//             <Player path={video_path} parentCallback={handleCallback} />\n//           </Grid>\n\n//           <Notes videoId={19} />\n\n//           <Grid item xs={12} md={8}>\n//             <Box\n//               p={2}\n//               sx={{\n//                 backgroundColor: \"primary.main\",\n//                 borderRadius: \"5px\",\n//                 paddingBottom: \"20px\",\n//               }}\n//             >\n//               <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                 Add description at {formatTime(played)}\n//               </Typography>\n//               <hr />\n//               <TextField\n//                 value={description}\n//                 onChange={(e) => setDescription(e.target.value)}\n//                 variant=\"outlined\"\n//                 fullWidth\n//                 placeholder=\"Enter description\"\n//                 sx={{\n//                   marginBottom: \"10px\",\n//                   backgroundColor: \"white\",\n//                   borderRadius: \"5px\",\n//                 }}\n//               />\n//               <Button\n//                 sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                 className=\"category-btn\"\n//                 onClick={handleAddFrame}\n//               >\n//                 Add Frame\n//               </Button>\n//             </Box>\n\n//             {frames.map((frame, index) => (\n//               <Box\n//                 p={2}\n//                 sx={{\n//                   backgroundColor: \"primary.main\",\n//                   borderRadius: \"5px\",\n//                   margin: \"20px 0\",\n//                 }}\n//               >\n//                 <Grid\n//                   container\n//                   rowSpacing={2}\n//                   columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n//                 >\n//                   {/* Displays Scene number */}\n//                   <Grid item xs={2}>\n//                     <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                       Scene {index}\n//                     </Typography>\n//                   </Grid>\n//                   {/* Displays time stamp */}\n//                   <Grid item xs={2}>\n//                     <Chip\n//                       label={formatTime(frame.time)}\n//                       sx={{\n//                         backgroundColor: \"secondary.light\",\n//                         color: \"white\",\n//                         marginBottom: \"20px\",\n//                       }}\n//                     />\n//                   </Grid>\n//                   <Grid item xs={8}>\n//                     <Box display=\"flex\" justifyContent=\"flex-end\">\n//                       <IconButton\n//                         edge=\"end\"\n//                         aria-label=\"delete\"\n//                         onClick={() => handleRemoveFrame(index)}\n//                       >\n//                         <DeleteIcon\n//                           sx={{\n//                             color: \"#EF6262\",\n//                           }}\n//                           aria-label=\"delete scene\"\n//                         />\n//                       </IconButton>\n//                       <IconButton\n//                         edge=\"end\"\n//                         aria-label=\"edit\"\n//                         onClick={() => handleEditFrame(index)}\n//                         sx={{marginLeft:\"20px\"}}\n//                       >\n//                         <EditIcon\n//                           sx={{\n//                             color: \"#EF6262\",\n//                           }}\n//                           aria-label=\"edit scene\"\n//                         />\n//                       </IconButton>\n//                     </Box>\n//                   </Grid>\n\n//                   <Grid item xs={3} md={2}>\n//                     <Typography\n//                       variant=\"subtitle1\"\n//                       sx={{ color: \"primary.dark\" }}\n//                     >\n//                       On screen text\n//                     </Typography>\n//                   </Grid>\n//                   <Grid item xs={9} md={10}>\n//                     <Box\n//                       p={1.5}\n//                       borderRadius=\"5px\"\n//                       sx={{ backgroundColor: \"white\" }}\n//                     >\n//                       <Typography\n//                         variant=\"body1\"\n//                         sx={{ color: \"primary.dark\" }}\n//                       >\n//                         Currently, no screen text\n//                       </Typography>\n//                     </Box>\n//                   </Grid>\n\n//                   <Grid item xs={3} md={2}>\n//                     <Typography\n//                       variant=\"subtitle1\"\n//                       sx={{ color: \"primary.dark\" }}\n//                     >\n//                       Description\n//                     </Typography>\n//                   </Grid>\n//                   <Grid item xs={9} md={10}>\n//                     <Box\n//                       p={1.5}\n//                       borderRadius=\"5px\"\n//                       sx={{ backgroundColor: \"white\" }}\n//                     >\n//                       <Typography variant=\"body1\" sx={{ color: \"#1D5B79\" }}>\n//                         {frame.description}\n//                       </Typography>\n//                     </Box>\n//                   </Grid>\n//                 </Grid>\n//               </Box>\n//             ))}\n\n//             <Dialog\n//               open={editDialogOpen}\n//               onClose={() => setEditDialogOpen(false)}\n//               fullWidth\n//             >\n//               <DialogTitle>Edit Description at timestamp {played}</DialogTitle>\n//               <DialogContent>\n//                 <TextField\n//                   value={description}\n//                   onChange={(e) => setDescription(e.target.value)}\n//                   variant=\"outlined\"\n//                   fullWidth\n//                   placeholder=\"Enter description\"\n//                   style={{ marginBottom: \"10px\" }}\n//                 />\n//                 <TextField\n//                   value={played}\n//                   onChange={(e) => setPlayed(e.target.value)}\n//                   variant=\"outlined\"\n//                   fullWidth\n//                   placeholder=\"Enter timestamp\"\n//                   style={{ marginBottom: \"10px\" }}\n//                 />\n//               </DialogContent>\n//               <DialogActions>\n//                 <Button\n//                   onClick={() => setEditDialogOpen(false)}\n//                   sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                   className=\"category-btn\"\n//                 >\n//                   Cancel\n//                 </Button>\n//                 <Button\n//                   onClick={handleSaveEdit}\n//                   sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                   className=\"category-btn\"\n//                 >\n//                   Save\n//                 </Button>\n//               </DialogActions>\n//             </Dialog>\n//           </Grid>\n//         </Grid>\n//       </Stack>\n//     </div>\n//   );\n// };\n\n// export default AddDescriptions;\nvar _c;\n$RefreshReg$(_c, \"AddDescriptions\");","map":{"version":3,"names":["React","useState","DeleteIcon","EditIcon","Box","Stack","Typography","Grid","TextField","Button","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Chip","Sidebar","Player","Navbar","Notes","formatTime","useLocation","Link","jsxDEV","_jsxDEV","AddDescriptions","_s","selectedCategory","setSelectedCategory","endTime","setEndTime","played","setPlayed","frames","setFrames","description","setDescription","selectedFrameIndex","setSelectedFrameIndex","editDialogOpen","setEditDialogOpen","location","video_id","video_path","state","handleCallback","progressData","console","log","handleAddFrame","newFrame","time","handleRemoveFrame","index","updatedFrames","splice","handleEditFrame","handleSaveEdit","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexDirection","md","height","paddingRight","container","spacing","p","overflowY","flex","item","xs","path","parentCallback","videoId","backgroundColor","borderRadius","paddingBottom","variant","color","value","onChange","e","target","fullWidth","placeholder","marginBottom","className","onClick","map","frame","margin","rowSpacing","columnSpacing","sm","label","display","justifyContent","edge","marginLeft","open","onClose","style","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AddDescriptions.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport {\n  Box,\n  Stack,\n  Typography,\n  Grid,\n  TextField,\n  Button,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Chip,\n} from \"@mui/material\";\nimport { Sidebar, Player, Navbar, Notes } from \"./\";\nimport formatTime from \"../utils/functions\";\nimport { useLocation, Link } from \"react-router-dom\";\n\nconst AddDescriptions = () => {\n  const [selectedCategory, setSelectedCategory] = useState();\n  const [endTime, setEndTime] = useState(\"\");\n  const [played, setPlayed] = useState(0);\n  const [frames, setFrames] = useState([]);\n  const [description, setDescription] = useState(\"\");\n  const [selectedFrameIndex, setSelectedFrameIndex] = useState(null);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n  const location = useLocation();\n  const { video_id, video_path } = location.state;\n\n  const handleCallback = (progressData) => {\n    console.log(\"this is played\", progressData)\n    setPlayed(progressData);\n  };\n\n  const handleAddFrame = () => {\n    if (played && description) {\n      console.log(\"This is played\", played)\n      const newFrame = { time: played, description: description };\n      setFrames([...frames, newFrame]);\n      setDescription(\"\");\n      // setPlayed(\"\");\n    }\n    console.log(\"this is my frames\", frames)\n  };\n\n  const handleRemoveFrame = (index) => {\n    const updatedFrames = [...frames];\n    updatedFrames.splice(index, 1);\n    setFrames(updatedFrames);\n  };\n\n  const handleEditFrame = (index) => {\n    setSelectedFrameIndex(index);\n    setDescription(frames[index].description);\n    setPlayed(frames[index].time);\n    setEditDialogOpen(true);\n  };\n\n  const handleSaveEdit = () => {\n    if (played && description) {\n      const updatedFrames = [...frames];\n      updatedFrames[selectedFrameIndex].description = description;\n      updatedFrames[selectedFrameIndex].time = played;\n      setFrames(updatedFrames);\n      setEditDialogOpen(false);\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n        <Box\n          sx={{\n            height: { sx: \"auto\", md: \"100vh\" },\n            paddingRight: { sx: 0, md: 2 },\n          }}\n        >\n          <Sidebar\n            selectedCategory={selectedCategory}\n            setSelectedCategory={setSelectedCategory}\n          />\n        </Box>\n\n        <Grid\n          container\n          spacing={2}\n          p={3}\n          sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}\n        >\n          <Grid item xs={12} md={8}>\n            <Player path={video_path} parentCallback={handleCallback} />\n          </Grid>\n\n          <Notes videoId={video_id} />\n\n          <Grid item xs={12} md={8}>\n            <Box\n              p={2}\n              sx={{\n                backgroundColor: \"primary.main\",\n                borderRadius: \"5px\",\n                paddingBottom: \"20px\",\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n                Add description at {formatTime(played)}\n              </Typography>\n              <hr />\n              <TextField\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                variant=\"outlined\"\n                fullWidth\n                placeholder=\"Enter description\"\n                sx={{\n                  marginBottom: \"10px\",\n                  backgroundColor: \"white\",\n                  borderRadius: \"5px\",\n                }}\n              />\n              <Button\n                sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n                className=\"category-btn\"\n                onClick={handleAddFrame}\n              >\n                Add Frame\n              </Button>\n            </Box>\n\n            {frames.map((frame, index) => (\n              <Box\n                p={2}\n                sx={{\n                  backgroundColor: \"primary.main\",\n                  borderRadius: \"5px\",\n                  margin: \"20px 0\",\n                }}\n              >\n                <Grid\n                  container\n                  rowSpacing={2}\n                  columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                >\n                  {/* Displays Scene number */}\n                  <Grid item xs={2}>\n                    <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n                      Scene {index}\n                    </Typography>\n                  </Grid>\n                  {/* Displays time stamp */}\n                  <Grid item xs={2}>\n                    <Chip\n                      label={formatTime(frame.time)}\n                      sx={{\n                        backgroundColor: \"secondary.light\",\n                        color: \"white\",\n                        marginBottom: \"20px\",\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={8}>\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        onClick={() => handleRemoveFrame(index)}\n                      >\n                        <DeleteIcon\n                          sx={{\n                            color: \"#EF6262\",\n                          }}\n                          aria-label=\"delete scene\"\n                        />\n                      </IconButton>\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"edit\"\n                        onClick={() => handleEditFrame(index)}\n                        sx={{marginLeft:\"20px\"}}\n                      >\n                        <EditIcon\n                          sx={{\n                            color: \"#EF6262\",\n                          }}\n                          aria-label=\"edit scene\"\n                        />\n                      </IconButton>\n                    </Box>\n                  </Grid>\n\n                  <Grid item xs={3} md={2}>\n                    <Typography\n                      variant=\"subtitle1\"\n                      sx={{ color: \"primary.dark\" }}\n                    >\n                      On screen text\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={9} md={10}>\n                    <Box\n                      p={1.5}\n                      borderRadius=\"5px\"\n                      sx={{ backgroundColor: \"white\" }}\n                    >\n                      <Typography\n                        variant=\"body1\"\n                        sx={{ color: \"primary.dark\" }}\n                      >\n                        Currently, no screen text\n                      </Typography>\n                    </Box>\n                  </Grid>\n\n                  <Grid item xs={3} md={2}>\n                    <Typography\n                      variant=\"subtitle1\"\n                      sx={{ color: \"primary.dark\" }}\n                    >\n                      Description\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={9} md={10}>\n                    <Box\n                      p={1.5}\n                      borderRadius=\"5px\"\n                      sx={{ backgroundColor: \"white\" }}\n                    >\n                      <Typography variant=\"body1\" sx={{ color: \"#1D5B79\" }}>\n                        {frame.description}\n                      </Typography>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Box>\n            ))}\n\n            <Dialog\n              open={editDialogOpen}\n              onClose={() => setEditDialogOpen(false)}\n              fullWidth\n            >\n              <DialogTitle>Edit Description at timestamp {played}</DialogTitle>\n              <DialogContent>\n                <TextField\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                  variant=\"outlined\"\n                  fullWidth\n                  placeholder=\"Enter description\"\n                  style={{ marginBottom: \"10px\" }}\n                />\n                <TextField\n                  value={played}\n                  onChange={(e) => setPlayed(e.target.value)}\n                  variant=\"outlined\"\n                  fullWidth\n                  placeholder=\"Enter timestamp\"\n                  style={{ marginBottom: \"10px\" }}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={() => setEditDialogOpen(false)}\n                  sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n                  className=\"category-btn\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleSaveEdit}\n                  sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n                  className=\"category-btn\"\n                >\n                  Save\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Grid>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default AddDescriptions;\n\n\n// import React, { useState } from \"react\";\n// import DeleteIcon from \"@mui/icons-material/Delete\";\n// import EditIcon from \"@mui/icons-material/Edit\";\n// import {\n//   Box,\n//   Stack,\n//   Typography,\n//   Grid,\n//   TextField,\n//   Button,\n//   IconButton,\n//   Dialog,\n//   DialogTitle,\n//   DialogContent,\n//   DialogActions,\n//   Chip,\n// } from \"@mui/material\";\n// import { Sidebar, Player, Navbar, Notes } from \"./\";\n// import formatTime from \"../utils/functions\";\n// import { useLocation, Link } from \"react-router-dom\";\n\n// const AddDescriptions = () => {\n//   const [selectedCategory, setSelectedCategory] = useState();\n//   const [played, setPlayed] = useState(0);\n//   const [frames, setFrames] = useState([]);\n//   const [description, setDescription] = useState(\"\");\n//   const [selectedFrameIndex, setSelectedFrameIndex] = useState(null);\n//   const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n//   const location = useLocation();\n//   const { video_id, video_path } = location.state;\n\n//   const handleCallback = (progressData) => {\n//     console.log(\"this is played\", progressData)\n//     setPlayed(progressData);\n//   };\n\n//   const handleAddFrame = () => {\n//     if (played && description) {\n//       console.log(\"This is played\", played)\n//       const newFrame = { time: played, description: description };\n//       setFrames([...frames, newFrame]);\n//       setDescription(\"\");\n//       // setPlayed(\"\");\n//     }\n//     console.log(\"this is my frames\", frames)\n//   };\n\n//   const handleRemoveFrame = (index) => {\n//     const updatedFrames = [...frames];\n//     updatedFrames.splice(index, 1);\n//     setFrames(updatedFrames);\n//   };\n\n//   const handleEditFrame = (index) => {\n//     setSelectedFrameIndex(index);\n//     setDescription(frames[index].description);\n//     setPlayed(frames[index].time);\n//     setEditDialogOpen(true);\n//   };\n\n//   const handleSaveEdit = () => {\n//     if (played && description) {\n//       const updatedFrames = [...frames];\n//       updatedFrames[selectedFrameIndex].description = description;\n//       updatedFrames[selectedFrameIndex].time = played;\n//       setFrames(updatedFrames);\n//       setEditDialogOpen(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//         <Box\n//           sx={{\n//             height: { sx: \"auto\", md: \"100vh\" },\n//             paddingRight: { sx: 0, md: 2 },\n//           }}\n//         >\n//           <Sidebar\n//             selectedCategory={selectedCategory}\n//             setSelectedCategory={setSelectedCategory}\n//           />\n//         </Box>\n\n//         <Grid\n//           container\n//           spacing={2}\n//           p={3}\n//           sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}\n//         >\n//           <Grid item xs={12} md={8}>\n//             <Player path={video_path} parentCallback={handleCallback} />\n//           </Grid>\n\n//           <Notes videoId={19} />\n\n//           <Grid item xs={12} md={8}>\n//             <Box\n//               p={2}\n//               sx={{\n//                 backgroundColor: \"primary.main\",\n//                 borderRadius: \"5px\",\n//                 paddingBottom: \"20px\",\n//               }}\n//             >\n//               <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                 Add description at {formatTime(played)}\n//               </Typography>\n//               <hr />\n//               <TextField\n//                 value={description}\n//                 onChange={(e) => setDescription(e.target.value)}\n//                 variant=\"outlined\"\n//                 fullWidth\n//                 placeholder=\"Enter description\"\n//                 sx={{\n//                   marginBottom: \"10px\",\n//                   backgroundColor: \"white\",\n//                   borderRadius: \"5px\",\n//                 }}\n//               />\n//               <Button\n//                 sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                 className=\"category-btn\"\n//                 onClick={handleAddFrame}\n//               >\n//                 Add Frame\n//               </Button>\n//             </Box>\n\n//             {frames.map((frame, index) => (\n//               <Box\n//                 p={2}\n//                 sx={{\n//                   backgroundColor: \"primary.main\",\n//                   borderRadius: \"5px\",\n//                   margin: \"20px 0\",\n//                 }}\n//               >\n//                 <Grid\n//                   container\n//                   rowSpacing={2}\n//                   columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n//                 >\n//                   {/* Displays Scene number */}\n//                   <Grid item xs={2}>\n//                     <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                       Scene {index}\n//                     </Typography>\n//                   </Grid>\n//                   {/* Displays time stamp */}\n//                   <Grid item xs={2}>\n//                     <Chip\n//                       label={formatTime(frame.time)}\n//                       sx={{\n//                         backgroundColor: \"secondary.light\",\n//                         color: \"white\",\n//                         marginBottom: \"20px\",\n//                       }}\n//                     />\n//                   </Grid>\n//                   <Grid item xs={8}>\n//                     <Box display=\"flex\" justifyContent=\"flex-end\">\n//                       <IconButton\n//                         edge=\"end\"\n//                         aria-label=\"delete\"\n//                         onClick={() => handleRemoveFrame(index)}\n//                       >\n//                         <DeleteIcon\n//                           sx={{\n//                             color: \"#EF6262\",\n//                           }}\n//                           aria-label=\"delete scene\"\n//                         />\n//                       </IconButton>\n//                       <IconButton\n//                         edge=\"end\"\n//                         aria-label=\"edit\"\n//                         onClick={() => handleEditFrame(index)}\n//                         sx={{marginLeft:\"20px\"}}\n//                       >\n//                         <EditIcon\n//                           sx={{\n//                             color: \"#EF6262\",\n//                           }}\n//                           aria-label=\"edit scene\"\n//                         />\n//                       </IconButton>\n//                     </Box>\n//                   </Grid>\n\n//                   <Grid item xs={3} md={2}>\n//                     <Typography\n//                       variant=\"subtitle1\"\n//                       sx={{ color: \"primary.dark\" }}\n//                     >\n//                       On screen text\n//                     </Typography>\n//                   </Grid>\n//                   <Grid item xs={9} md={10}>\n//                     <Box\n//                       p={1.5}\n//                       borderRadius=\"5px\"\n//                       sx={{ backgroundColor: \"white\" }}\n//                     >\n//                       <Typography\n//                         variant=\"body1\"\n//                         sx={{ color: \"primary.dark\" }}\n//                       >\n//                         Currently, no screen text\n//                       </Typography>\n//                     </Box>\n//                   </Grid>\n\n//                   <Grid item xs={3} md={2}>\n//                     <Typography\n//                       variant=\"subtitle1\"\n//                       sx={{ color: \"primary.dark\" }}\n//                     >\n//                       Description\n//                     </Typography>\n//                   </Grid>\n//                   <Grid item xs={9} md={10}>\n//                     <Box\n//                       p={1.5}\n//                       borderRadius=\"5px\"\n//                       sx={{ backgroundColor: \"white\" }}\n//                     >\n//                       <Typography variant=\"body1\" sx={{ color: \"#1D5B79\" }}>\n//                         {frame.description}\n//                       </Typography>\n//                     </Box>\n//                   </Grid>\n//                 </Grid>\n//               </Box>\n//             ))}\n\n//             <Dialog\n//               open={editDialogOpen}\n//               onClose={() => setEditDialogOpen(false)}\n//               fullWidth\n//             >\n//               <DialogTitle>Edit Description at timestamp {played}</DialogTitle>\n//               <DialogContent>\n//                 <TextField\n//                   value={description}\n//                   onChange={(e) => setDescription(e.target.value)}\n//                   variant=\"outlined\"\n//                   fullWidth\n//                   placeholder=\"Enter description\"\n//                   style={{ marginBottom: \"10px\" }}\n//                 />\n//                 <TextField\n//                   value={played}\n//                   onChange={(e) => setPlayed(e.target.value)}\n//                   variant=\"outlined\"\n//                   fullWidth\n//                   placeholder=\"Enter timestamp\"\n//                   style={{ marginBottom: \"10px\" }}\n//                 />\n//               </DialogContent>\n//               <DialogActions>\n//                 <Button\n//                   onClick={() => setEditDialogOpen(false)}\n//                   sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                   className=\"category-btn\"\n//                 >\n//                   Cancel\n//                 </Button>\n//                 <Button\n//                   onClick={handleSaveEdit}\n//                   sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                   className=\"category-btn\"\n//                 >\n//                   Save\n//                 </Button>\n//               </DialogActions>\n//             </Dialog>\n//           </Grid>\n//         </Grid>\n//       </Stack>\n//     </div>\n//   );\n// };\n\n// export default AddDescriptions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}