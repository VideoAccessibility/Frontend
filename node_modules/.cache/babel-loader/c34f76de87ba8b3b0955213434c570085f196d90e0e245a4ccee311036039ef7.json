{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Scene.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Chip, CardContent, Typography, Button, TextField, Dialog, DialogActions, InputLabel, FormControl, MenuItem, Select, Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fakeUsers = [{\n  id: 1,\n  name: \"User 1\"\n}, {\n  id: 2,\n  name: \"User 2\"\n}\n// Add more users as needed\n];\n\nconst Scene = () => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(fakeUsers[0]);\n  const [fakeDescriptions, setFakeDescriptions] = useState([{\n    id: 1,\n    timestamp: \"00:05\",\n    userId: 1,\n    description: \"Description 1 by User 1\"\n  }, {\n    id: 2,\n    timestamp: \"00:10\",\n    userId: 1,\n    description: \"Description 1 by User 1 at 10 seconds\"\n  }, {\n    id: 3,\n    timestamp: \"00:15\",\n    userId: 1,\n    description: \"Description 1 by User 1 at 10 seconds\"\n  }, {\n    id: 4,\n    timestamp: \"01:30\",\n    userId: 2,\n    description: \"Description 2 by User 2\"\n  }\n  // Add more fake descriptions as needed\n  ]);\n\n  const [editedDescription, setEditedDescription] = useState(\"\");\n  const [selectedDescriptionId, setSelectedDescriptionId] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const url = \"http://127.0.0.1:8000/descriptions/\";\n  const parameters = {\n    video_id: 19,\n    jwt: token\n  };\n  useEffect(() => {\n    axios.get(apiUrl, {\n      params: params\n    }).then(response => {\n      setVideo(response.data.video);\n      console.log(\"Received video data\", response.data.video);\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get(url, {\n      params: parameters\n    }).then(response => {\n      console.log(\"Received description data\", response.data.descriptions);\n      setDesc(response.data.descriptions.map(item => {\n        return JSON.parse(item);\n      }));\n      setLoading(false);\n    }).catch(err => {\n      console.log(\"Not receiving data description data\", err);\n      setLoading(false);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }\n  const handleUserChange = event => {\n    const userId = event.target.value;\n    const selectedUser = fakeUsers.find(user => user.id === userId);\n    setCurrentUser(selectedUser);\n  };\n  const handleEditClick = (descriptionId, descriptionText) => {\n    setSelectedDescriptionId(descriptionId);\n    setEditedDescription(descriptionText);\n    setIsEditing(true);\n  };\n  const handleSaveClick = () => {\n    if (selectedDescriptionId !== null) {\n      const updatedDescriptions = fakeDescriptions.map(description => description.id === selectedDescriptionId ? {\n        ...description,\n        description: editedDescription\n      } : description);\n      setFakeDescriptions(updatedDescriptions);\n      setIsEditing(false);\n      setSelectedDescriptionId(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        margin: \"20px 0\",\n        width: \"300px\",\n        backgroundColor: \"primary.main\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: currentUser.id,\n        onChange: handleUserChange,\n        children: fakeUsers.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: user.id,\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), fakeDescriptions.filter(description => description.userId === currentUser.id).map(description => /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: {\n        marginBottom: \"10px\",\n        backgroundColor: \"primary.main\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Chip, {\n          label: description.timestamp,\n          sx: {\n            backgroundColor: \"secondary.light\",\n            color: \"white\",\n            marginBottom: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this), isEditing && selectedDescriptionId === description.id ? /*#__PURE__*/_jsxDEV(TextField, {\n          multiline: true,\n          fullWidth: true,\n          sx: {\n            backgroundColor: \"white\"\n          },\n          variant: \"outlined\",\n          label: \"Edit Description\",\n          value: editedDescription,\n          onChange: e => setEditedDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          p: 1.5,\n          borderRadius: \"5px\",\n          sx: {\n            backgroundColor: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: description.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          children: isEditing && selectedDescriptionId === description.id ? /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSaveClick,\n              sx: {\n                backgroundColor: \"secondary.main\",\n                color: \"white\",\n                marginTop: \"10px\"\n              },\n              className: \"category-btn\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleEditClick(description.id, description.description),\n            sx: {\n              backgroundColor: \"secondary.main\",\n              color: \"white\",\n              marginTop: \"10px\"\n            },\n            className: \"category-btn\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)\n    }, description.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Scene, \"ir56U7p++heKaJi/MNfIbDiW+Ss=\");\n_c = Scene;\nexport default Scene;\n\n// import {Grid } from \"@mui/material\";\n// import {SceneCards} from \"./\";\n// import sceneinfo from \"../data/sceneinfo\";\n\n// const Scene = (props) => {\n//   return (\n//     <Grid item xs={12} md={12}>\n//         {props.descriptions.map((item, idx) => (\n//             <SceneCards\n//             key = {idx}\n//             sceneNum = {idx+1}\n//             timeFrame = {item.time_stamp}\n//             screenText = \"Currently there is no on screen text, \"\n//             description = {item.descriptions}\n\n//             />\n//         ))}\n//     </Grid>\n//   )\n// }\n\n// export default Scene;\nvar _c;\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"names":["React","useState","useEffect","Card","Chip","CardContent","Typography","Button","TextField","Dialog","DialogActions","InputLabel","FormControl","MenuItem","Select","Box","axios","Cookies","jsxDEV","_jsxDEV","fakeUsers","id","name","Scene","_s","currentUser","setCurrentUser","fakeDescriptions","setFakeDescriptions","timestamp","userId","description","editedDescription","setEditedDescription","selectedDescriptionId","setSelectedDescriptionId","isEditing","setIsEditing","url","parameters","video_id","jwt","token","get","apiUrl","params","then","response","setVideo","data","video","console","log","catch","err","descriptions","setDesc","map","item","JSON","parse","setLoading","isLoading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleUserChange","event","target","value","selectedUser","find","user","handleEditClick","descriptionId","descriptionText","handleSaveClick","updatedDescriptions","sx","margin","width","backgroundColor","onChange","filter","variant","marginBottom","label","color","multiline","fullWidth","e","p","borderRadius","style","marginTop","onClick","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Scene.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  Chip,\n  CardContent,\n  Typography,\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Select,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst fakeUsers = [\n  { id: 1, name: \"User 1\" },\n  { id: 2, name: \"User 2\" },\n  // Add more users as needed\n];\n\nconst Scene = () => {\n  const [currentUser, setCurrentUser] = useState(fakeUsers[0]);\n  const [fakeDescriptions, setFakeDescriptions] = useState([\n    {\n      id: 1,\n      timestamp: \"00:05\",\n      userId: 1,\n      description: \"Description 1 by User 1\",\n    },\n    {\n      id: 2,\n      timestamp: \"00:10\",\n      userId: 1,\n      description: \"Description 1 by User 1 at 10 seconds\",\n    },\n    {\n      id: 3,\n      timestamp: \"00:15\",\n      userId: 1,\n      description: \"Description 1 by User 1 at 10 seconds\",\n    },\n    {\n      id: 4,\n      timestamp: \"01:30\",\n      userId: 2,\n      description: \"Description 2 by User 2\",\n    },\n    // Add more fake descriptions as needed\n  ]);\n  const [editedDescription, setEditedDescription] = useState(\"\");\n  const [selectedDescriptionId, setSelectedDescriptionId] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n\n\n  const url = \"http://127.0.0.1:8000/descriptions/\";\n  const parameters = { video_id: 19, jwt: token };\n\n  useEffect(() => {\n    axios.get(apiUrl, { params: params })\n      .then((response) => {\n        setVideo(response.data.video);\n        console.log(\"Received video data\", response.data.video);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    axios.get(url, { params: parameters })\n      .then((response) => {\n        console.log(\"Received description data\", response.data.descriptions);\n        setDesc(\n          response.data.descriptions.map((item) => {\n            return JSON.parse(item);\n          })\n        );\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(\"Not receiving data description data\", err);\n        setLoading(false);\n      });\n      \n  }, []);\n\n  if (isLoading) {\n    return <div className=\"App\">Loading...</div>;\n  }\n\n  const handleUserChange = (event) => {\n    const userId = event.target.value;\n    const selectedUser = fakeUsers.find((user) => user.id === userId);\n    setCurrentUser(selectedUser);\n  };\n\n  const handleEditClick = (descriptionId, descriptionText) => {\n    setSelectedDescriptionId(descriptionId);\n    setEditedDescription(descriptionText);\n    setIsEditing(true);\n  };\n\n  const handleSaveClick = () => {\n    if (selectedDescriptionId !== null) {\n      const updatedDescriptions = fakeDescriptions.map((description) =>\n        description.id === selectedDescriptionId\n          ? { ...description, description: editedDescription }\n          : description\n      );\n      setFakeDescriptions(updatedDescriptions);\n      setIsEditing(false);\n      setSelectedDescriptionId(null);\n    }\n  };\n\n  return (\n    <div>\n      <FormControl\n        sx={{\n          margin: \"20px 0\",\n          width: \"300px\",\n          backgroundColor: \"primary.main\",\n        }}\n      >\n        <InputLabel>User</InputLabel>\n        <Select value={currentUser.id} onChange={handleUserChange}>\n          {fakeUsers.map((user) => (\n            <MenuItem key={user.id} value={user.id}>\n              {user.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      {fakeDescriptions\n        .filter((description) => description.userId === currentUser.id)\n        .map((description) => (\n          <Card\n            key={description.id}\n            variant=\"outlined\"\n            sx={{ marginBottom: \"10px\", backgroundColor: \"primary.main\" }}\n          >\n            <CardContent>\n              <Chip\n                label={description.timestamp}\n                sx={{\n                  backgroundColor: \"secondary.light\",\n                  color: \"white\",\n                  marginBottom: \"20px\",\n                }}\n              />\n              {isEditing && selectedDescriptionId === description.id ? (\n                <TextField\n                  multiline\n                  fullWidth\n                  sx={{\n                    backgroundColor: \"white\",\n                  }}\n                  variant=\"outlined\"\n                  label=\"Edit Description\"\n                  value={editedDescription}\n                  onChange={(e) => setEditedDescription(e.target.value)}\n                />\n              ) : (\n                <Box p={1.5}  borderRadius=\"5px\" sx={{backgroundColor : \"white\"}}>\n                <Typography variant=\"body1\">\n                  {description.description}\n                </Typography>\n                </Box>\n              )}\n              <div style={{ marginTop: \"10px\" }}>\n                {isEditing && selectedDescriptionId === description.id ? (\n                  <DialogActions>\n                    <Button\n                      onClick={handleSaveClick}\n                      sx={{\n                        backgroundColor: \"secondary.main\",\n                        color: \"white\",\n                        marginTop: \"10px\",\n                      }}\n                      className=\"category-btn\"\n                    >\n                      Save\n                    </Button>\n                  </DialogActions>\n                ) : (\n                  <Button\n                    onClick={() =>\n                      handleEditClick(description.id, description.description)\n                    }\n                    sx={{\n                      backgroundColor: \"secondary.main\",\n                      color: \"white\",\n                      marginTop: \"10px\",\n                    }}\n                    className=\"category-btn\"\n                  >\n                    Edit\n                  </Button>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n    </div>\n  );\n};\n\nexport default Scene;\n\n// import {Grid } from \"@mui/material\";\n// import {SceneCards} from \"./\";\n// import sceneinfo from \"../data/sceneinfo\";\n\n// const Scene = (props) => {\n//   return (\n//     <Grid item xs={12} md={12}>\n//         {props.descriptions.map((item, idx) => (\n//             <SceneCards\n//             key = {idx}\n//             sceneNum = {idx+1}\n//             timeFrame = {item.time_stamp}\n//             screenText = \"Currently there is no on screen text, \"\n//             description = {item.descriptions}\n\n//             />\n//         ))}\n//     </Grid>\n//   )\n// }\n\n// export default Scene;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}