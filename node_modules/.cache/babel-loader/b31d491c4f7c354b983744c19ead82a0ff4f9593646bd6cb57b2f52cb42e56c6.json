{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/ChatGPT.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Speech from 'react-speech-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatGPT = props => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const videoRef = useRef(null);\n  const handleSpeechEnd = () => {\n    setIsPlaying(false);\n    videoRef.current.play();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      controls: true,\n      width: \"640\",\n      height: \"360\",\n      onPlay: () => setIsPlaying(true),\n      onPause: () => setIsPlaying(false),\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"your_video_url.mp4\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Video Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), isPlaying && /*#__PURE__*/_jsxDEV(Speech, {\n      text: \"Your text to be spoken\",\n      voice: \"Google UK English Female\",\n      rate: \"0.9\",\n      pitch: \"1\",\n      onStart: () => console.log('Speech started'),\n      onEnd: handleSpeechEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n_s(ChatGPT, \"vnxKdSPA0nuJkEd4F4tBCiZQjj0=\");\n_c = ChatGPT;\nexport default ChatGPT;\nvar _c;\n$RefreshReg$(_c, \"ChatGPT\");","map":{"version":3,"names":["React","useState","useRef","Speech","jsxDEV","_jsxDEV","ChatGPT","props","_s","isPlaying","setIsPlaying","videoRef","handleSpeechEnd","current","play","children","ref","controls","width","height","onPlay","onPause","src","type","fileName","_jsxFileName","lineNumber","columnNumber","text","voice","rate","pitch","onStart","console","log","onEnd","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/ChatGPT.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Speech from 'react-speech-kit';\n\nconst ChatGPT = (props) => {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const videoRef = useRef(null);\n  \n    const handleSpeechEnd = () => {\n      setIsPlaying(false);\n      videoRef.current.play();\n    };\n  \n    return (\n      <div>\n        <video\n          ref={videoRef}\n          controls\n          width=\"640\"\n          height=\"360\"\n          onPlay={() => setIsPlaying(true)}\n          onPause={() => setIsPlaying(false)}\n        >\n          <source src=\"your_video_url.mp4\" type=\"video/mp4\" />\n          Your browser does not support the video tag.\n        </video>\n        \n        <div>\n          <h2>Video Description</h2>\n          <p>\n            {/* Your video description */}\n          </p>\n        </div>\n  \n        {isPlaying && (\n          <Speech\n            text=\"Your text to be spoken\"\n            voice=\"Google UK English Female\"\n            rate=\"0.9\"\n            pitch=\"1\"\n            onStart={() => console.log('Speech started')}\n            onEnd={handleSpeechEnd}\n          />\n        )}\n      </div>\n    );\n}\n\nexport default ChatGPT"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMU,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5BF,YAAY,CAAC,KAAK,CAAC;IACnBC,QAAQ,CAACE,OAAO,CAACC,IAAI,CAAC,CAAC;EACzB,CAAC;EAED,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MACEW,GAAG,EAAEL,QAAS;MACdM,QAAQ;MACRC,KAAK,EAAC,KAAK;MACXC,MAAM,EAAC,KAAK;MACZC,MAAM,EAAEA,CAAA,KAAMV,YAAY,CAAC,IAAI,CAAE;MACjCW,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAAC,KAAK,CAAE;MAAAK,QAAA,gBAEnCV,OAAA;QAAQiB,GAAG,EAAC,oBAAoB;QAACC,IAAI,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gDAEtD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAERtB,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAI;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BtB,OAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAELlB,SAAS,iBACRJ,OAAA,CAACF,MAAM;MACLyB,IAAI,EAAC,wBAAwB;MAC7BC,KAAK,EAAC,0BAA0B;MAChCC,IAAI,EAAC,KAAK;MACVC,KAAK,EAAC,GAAG;MACTC,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAE;MAC7CC,KAAK,EAAEvB;IAAgB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ,CAAC;AAAAnB,EAAA,CA1CKF,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AA4Cb,eAAeA,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}