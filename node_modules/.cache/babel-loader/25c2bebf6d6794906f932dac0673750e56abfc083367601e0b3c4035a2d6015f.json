{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/EditDescriptions.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Stack, Typography, Grid, TextField, Button } from \"@mui/material\";\nimport { Sidebar, Player, Scene, Navbar, Notes, Frame } from \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditDescriptions = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState();\n  const [yesFrame, setYesFrame] = useState(false);\n  const [played, setPlayed] = useState();\n  const [videoDescriptions, setVideoDescriptions] = useState([]);\n\n  // this function just retrives the time the video is played\n  const handleCallback = progressData => {\n    setPlayed(progressData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"EditDescriptions\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(EditDescriptions, \"zLkl/5P8seY7/PgH991XQCiCALc=\");\n_c = EditDescriptions;\nexport default EditDescriptions;\nvar _c;\n$RefreshReg$(_c, \"EditDescriptions\");","map":{"version":3,"names":["React","useState","useEffect","Box","Stack","Typography","Grid","TextField","Button","Sidebar","Player","Scene","Navbar","Notes","Frame","jsxDEV","_jsxDEV","EditDescriptions","_s","selectedCategory","setSelectedCategory","yesFrame","setYesFrame","played","setPlayed","videoDescriptions","setVideoDescriptions","handleCallback","progressData","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/EditDescriptions.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, Stack, Typography, Grid, TextField, Button } from \"@mui/material\";\nimport { Sidebar, Player, Scene, Navbar, Notes , Frame} from \"./\";\n\nconst EditDescriptions = () => {\n    const [selectedCategory, setSelectedCategory] = useState();\n    const [yesFrame, setYesFrame] = useState(false);\n    const [played, setPlayed] = useState();\n    const [videoDescriptions, setVideoDescriptions] = useState([]);\n\n    // this function just retrives the time the video is played\n  const handleCallback = (progressData) => {\n    setPlayed(progressData);\n  };\n\n  return (\n    <div>EditDescriptions</div>\n  )\n}\n\nexport default EditDescriptions"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,KAAK,EAAEC,UAAU,EAAEC,IAAI,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAC/E,SAASC,OAAO,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAGC,KAAK,QAAO,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,CAAC;EAC1D,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,CAAC;EACtC,MAAM,CAACwB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;;EAE9D;EACF,MAAM0B,cAAc,GAAIC,YAAY,IAAK;IACvCJ,SAAS,CAACI,YAAY,CAAC;EACzB,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,EAAK;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE/B,CAAC;AAAAf,EAAA,CAdKD,gBAAgB;AAAAiB,EAAA,GAAhBjB,gBAAgB;AAgBtB,eAAeA,gBAAgB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}