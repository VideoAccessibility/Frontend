{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AskAI.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport { ButtonGroup, DialogTitle, DialogContentText, Typography } from \"@mui/material\";\nimport KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AskAI = () => {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Ask InfoBot at (add the frame)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(KeyboardVoiceIcon, {\n        sx: {\n          fontSize: \"70px\",\n          backgroundColor: \"#1D5B79\",\n          color: listening ? \"#EF6262\" : \"white\",\n          ml: \"5px\",\n          borderRadius: \"100%\",\n          padding: \"20px\",\n          margin: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Ask Infobot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-textarea\",\n          label: \"Multiline Placeholder\",\n          placeholder: \"Your question will be visible here\",\n          multiline: true,\n          value: transcript,\n          fullWidth: true,\n          sx: {\n            margin: \"20px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          \"aria-label\": \"Buttons to control speech recognition\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              backgroundColor: \"secondary.main\",\n              color: \"white\"\n            },\n            className: \"category-btn\",\n            onClick: SpeechRecognition.startListening,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              backgroundColor: \"secondary.main\",\n              color: \"white\"\n            },\n            className: \"category-btn\",\n            onClick: SpeechRecognition.stopListening,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              backgroundColor: \"secondary.main\",\n              color: \"white\"\n            },\n            className: \"category-btn\",\n            onClick: resetTranscript,\n            children: \"Reset Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AskAI, \"LslqQkpS/eB13HNkawEIHfDSh9Q=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = AskAI;\nexport default AskAI;\n\n// // This is the the alert box that opens when a user wants to ask a questions regarding a scene of a video\n// import React from 'react';\n// import Swal from 'sweetalert2';\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n// import {Button,  DialogContent, DialogContentText, DialogActions} from \"@mui/material\";\n// import KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';\n\n// const AskAI = (props) => {\n//   (async () => {\n\n//     const { value: text } = await Swal.fire({\n//       input: 'textarea',\n//       inputLabel: 'Type in your question regarding the frame',\n//       inputPlaceholder: 'Type your question here...',\n//       icon: 'question',\n//       inputAttributes: {\n//         'aria-label': 'Type the question you want to ask about the frame here'\n//       },\n//       showCancelButton: false,\n//       confirmButtonText: 'Submit Question',\n//       cancelButtonText: 'Cancel',\n//     })\n\n//     if (text) {\n//       // Swal.fire(text)\n//       const token = Cookies.get(\"jwtToken\");\n//       // Define the API endpoint where you want to send the POST request\n//       const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n//       console.log(\"This is my props id\", props.videoID)\n//       const postData = {\n//         \"id\": props.videoID,\n//         \"question\":text,\n//         \"currentTime\": props.timeStamp,\n//         \"jwt\":token\n//       };\n\n//       axios\n//         .post(apiUrl, postData)\n//         .then((response) => {\n//           // Handle the successful response\n//           console.log(\"Response:\", response.data);\n\n//         })\n//         .catch((error) => {\n//           // Handle errors, if any\n//           console.error(\"Error:\", error);\n//         });\n//     }\n\n//     })()\n//   return (\n//     <div>\n//      { props.parentCallback()}\n//         {/* <DialogContent>\n//         <KeyboardVoiceIcon\n//             sx={{ fontSize: \"70px\", backgroundColor:\"#1D5B79\", color: \"#EF6262\", ml: \"5px\", borderRadius:\"100%\" , padding:\"20px\", margin: \"20px\"}}\n//         />\n//           <DialogContentText id=\"alert-dialog-description\" justifyContent={\"center\"}>\n//             Ask your questions regarding the frame here\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//         </DialogActions> */}\n//     </div>\n//   );\n// }\n\n// export default AskAI\nvar _c;\n$RefreshReg$(_c, \"AskAI\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","Button","TextField","Dialog","DialogActions","DialogContent","ButtonGroup","DialogTitle","DialogContentText","Typography","KeyboardVoiceIcon","jsxDEV","_jsxDEV","AskAI","_s","open","setOpen","useState","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","handleClickOpen","handleClose","Fragment","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","sx","fontSize","backgroundColor","color","ml","borderRadius","padding","margin","id","label","placeholder","multiline","value","fullWidth","className","startListening","stopListening","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AskAI.jsx"],"sourcesContent":["import * as React from \"react\";\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport { ButtonGroup, DialogTitle, DialogContentText, Typography } from \"@mui/material\";\nimport KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';\n\nconst AskAI = () => {\n  const [open, setOpen] = React.useState(false);\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n  } = useSpeechRecognition();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n    \n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Ask InfoBot at (add the frame)\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n      <KeyboardVoiceIcon\n            sx={{ fontSize: \"70px\", backgroundColor:\"#1D5B79\", color: listening ? \"#EF6262\" : \"white\", ml: \"5px\", borderRadius:\"100%\" , padding:\"20px\", margin: \"20px\"}}\n        />\n        <DialogTitle>Ask Infobot</DialogTitle>\n        <DialogContent>\n          <TextField\n          id=\"outlined-textarea\"\n          label=\"Multiline Placeholder\"\n          placeholder=\"Your question will be visible here\"\n          multiline\n          value={transcript}\n          fullWidth\n          sx = {{margin: \"20px 0\"}}\n        />\n          <ButtonGroup\n            aria-label=\"Buttons to control speech recognition\">\n            <Button sx={{\n                      backgroundColor: \"secondary.main\",\n                      color: \"white\",\n                    }}\n                    className=\"category-btn\"onClick={SpeechRecognition.startListening}>Start</Button>\n            <Button sx={{\n                      backgroundColor: \"secondary.main\",\n                      color: \"white\",\n                    }}\n                    className=\"category-btn\"onClick={SpeechRecognition.stopListening}>Stop</Button>\n            <Button sx={{\n                      backgroundColor: \"secondary.main\",\n                      color: \"white\",\n                    }}\n                    className=\"category-btn\"onClick={resetTranscript}>Reset Question</Button>\n          </ButtonGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleClose}>Subscribe</Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default AskAI;\n\n// // This is the the alert box that opens when a user wants to ask a questions regarding a scene of a video\n// import React from 'react';\n// import Swal from 'sweetalert2';\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n// import {Button,  DialogContent, DialogContentText, DialogActions} from \"@mui/material\";\n// import KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';\n\n// const AskAI = (props) => {\n//   (async () => {\n\n//     const { value: text } = await Swal.fire({\n//       input: 'textarea',\n//       inputLabel: 'Type in your question regarding the frame',\n//       inputPlaceholder: 'Type your question here...',\n//       icon: 'question',\n//       inputAttributes: {\n//         'aria-label': 'Type the question you want to ask about the frame here'\n//       },\n//       showCancelButton: false,\n//       confirmButtonText: 'Submit Question',\n//       cancelButtonText: 'Cancel',\n//     })\n\n//     if (text) {\n//       // Swal.fire(text)\n//       const token = Cookies.get(\"jwtToken\");\n//       // Define the API endpoint where you want to send the POST request\n//       const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n//       console.log(\"This is my props id\", props.videoID)\n//       const postData = {\n//         \"id\": props.videoID,\n//         \"question\":text,\n//         \"currentTime\": props.timeStamp,\n//         \"jwt\":token\n//       };\n\n//       axios\n//         .post(apiUrl, postData)\n//         .then((response) => {\n//           // Handle the successful response\n//           console.log(\"Response:\", response.data);\n\n//         })\n//         .catch((error) => {\n//           // Handle errors, if any\n//           console.error(\"Error:\", error);\n//         });\n//     }\n\n//     })()\n//   return (\n//     <div>\n//      { props.parentCallback()}\n//         {/* <DialogContent>\n//         <KeyboardVoiceIcon\n//             sx={{ fontSize: \"70px\", backgroundColor:\"#1D5B79\", color: \"#EF6262\", ml: \"5px\", borderRadius:\"100%\" , padding:\"20px\", margin: \"20px\"}}\n//         />\n//           <DialogContentText id=\"alert-dialog-description\" justifyContent={\"center\"}>\n//             Ask your questions regarding the frame here\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//         </DialogActions> */}\n//     </div>\n//   );\n// }\n\n// export default AskAI\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}