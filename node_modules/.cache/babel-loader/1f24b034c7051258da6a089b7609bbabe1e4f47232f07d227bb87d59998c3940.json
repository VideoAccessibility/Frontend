{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AskAI.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AskAI = () => {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Ask InfoBot at (add the frame)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Ask Infobot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"To use the speech function, click on the start speaking button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          label: \"Your Question\",\n          variant: \"outlined\",\n          value: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: SpeechRecognition.startListening,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: SpeechRecognition.stopListening,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetTranscript,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AskAI, \"3SVZEIAX9nh/XIRkTbSdmFLtI9E=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = AskAI;\nexport default AskAI;\n\n// // This is the the alert box that opens when a user wants to ask a questions regarding a scene of a video\n// import React from 'react';\n// import Swal from 'sweetalert2';\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n// import {Button,  DialogContent, DialogContentText, DialogActions} from \"@mui/material\";\n// import KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';\n\n// const AskAI = (props) => {\n//   (async () => {\n\n//     const { value: text } = await Swal.fire({\n//       input: 'textarea',\n//       inputLabel: 'Type in your question regarding the frame',\n//       inputPlaceholder: 'Type your question here...',\n//       icon: 'question',\n//       inputAttributes: {\n//         'aria-label': 'Type the question you want to ask about the frame here'\n//       },\n//       showCancelButton: false,\n//       confirmButtonText: 'Submit Question',\n//       cancelButtonText: 'Cancel',\n//     })\n\n//     if (text) {\n//       // Swal.fire(text)\n//       const token = Cookies.get(\"jwtToken\");\n//       // Define the API endpoint where you want to send the POST request\n//       const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n//       console.log(\"This is my props id\", props.videoID)\n//       const postData = {\n//         \"id\": props.videoID,\n//         \"question\":text,\n//         \"currentTime\": props.timeStamp,\n//         \"jwt\":token\n//       };\n\n//       axios\n//         .post(apiUrl, postData)\n//         .then((response) => {\n//           // Handle the successful response\n//           console.log(\"Response:\", response.data);\n\n//         })\n//         .catch((error) => {\n//           // Handle errors, if any\n//           console.error(\"Error:\", error);\n//         });\n//     }\n\n//     })()\n//   return (\n//     <div>\n//      { props.parentCallback()}\n//         {/* <DialogContent>\n//         <KeyboardVoiceIcon\n//             sx={{ fontSize: \"70px\", backgroundColor:\"#1D5B79\", color: \"#EF6262\", ml: \"5px\", borderRadius:\"100%\" , padding:\"20px\", margin: \"20px\"}}\n//         />\n//           <DialogContentText id=\"alert-dialog-description\" justifyContent={\"center\"}>\n//             Ask your questions regarding the frame here\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//         </DialogActions> */}\n//     </div>\n//   );\n// }\n\n// export default AskAI\nvar _c;\n$RefreshReg$(_c, \"AskAI\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","jsxDEV","_jsxDEV","AskAI","_s","open","setOpen","useState","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","handleClickOpen","handleClose","Fragment","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","fullWidth","multiline","label","value","startListening","stopListening","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AskAI.jsx"],"sourcesContent":["import * as React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n\nconst AskAI = () => {\n  const [open, setOpen] = React.useState(false);\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Ask InfoBot at (add the frame)\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Ask Infobot</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To use the speech function, click on the start speaking button\n          </DialogContentText>\n          <TextField\n          fullWidth\n          multiline\n          label=\"Your Question\"\n          variant=\"outlined\"\n          value={transcript}\n          />\n          <button onClick={SpeechRecognition.startListening}>Start</button>\n          <button onClick={SpeechRecognition.stopListening}>Stop</button>\n          <button onClick={resetTranscript}>Reset</button>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleClose}>Subscribe</Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default AskAI\n\n// // This is the the alert box that opens when a user wants to ask a questions regarding a scene of a video\n// import React from 'react';\n// import Swal from 'sweetalert2';\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n// import {Button,  DialogContent, DialogContentText, DialogActions} from \"@mui/material\";\n// import KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';\n\n// const AskAI = (props) => {\n//   (async () => {\n\n//     const { value: text } = await Swal.fire({\n//       input: 'textarea',\n//       inputLabel: 'Type in your question regarding the frame',\n//       inputPlaceholder: 'Type your question here...',\n//       icon: 'question',\n//       inputAttributes: {\n//         'aria-label': 'Type the question you want to ask about the frame here'\n//       },\n//       showCancelButton: false,\n//       confirmButtonText: 'Submit Question',\n//       cancelButtonText: 'Cancel',\n//     })\n    \n//     if (text) {\n//       // Swal.fire(text)\n//       const token = Cookies.get(\"jwtToken\");\n//       // Define the API endpoint where you want to send the POST request\n//       const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n//       console.log(\"This is my props id\", props.videoID)\n//       const postData = {\n//         \"id\": props.videoID,\n//         \"question\":text,\n//         \"currentTime\": props.timeStamp,\n//         \"jwt\":token\n//       };\n  \n//       axios\n//         .post(apiUrl, postData)\n//         .then((response) => {\n//           // Handle the successful response\n//           console.log(\"Response:\", response.data);\n\n//         })\n//         .catch((error) => {\n//           // Handle errors, if any\n//           console.error(\"Error:\", error);\n//         });\n//     }\n    \n//     })()\n//   return (\n//     <div>\n//      { props.parentCallback()}\n//         {/* <DialogContent>\n//         <KeyboardVoiceIcon\n//             sx={{ fontSize: \"70px\", backgroundColor:\"#1D5B79\", color: \"#EF6262\", ml: \"5px\", borderRadius:\"100%\" , padding:\"20px\", margin: \"20px\"}}\n//         />\n//           <DialogContentText id=\"alert-dialog-description\" justifyContent={\"center\"}>\n//             Ask your questions regarding the frame here\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//         </DialogActions> */}\n//     </div>\n//   );\n// }\n\n// export default AskAI"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}