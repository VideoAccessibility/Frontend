{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AskAI.jsx\",\n  _s = $RefreshSig$();\n// This is the the alert box that opens when a user wants to ask a questions regarding a scene of a video\nimport React from 'react';\nimport Swal from 'sweetalert2';\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AskAI = props => {\n  _s();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  (async () => {\n    if (!browserSupportsSpeechRecognition) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Browser doesn't support speech recognition.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this);\n    }\n    const {\n      value: text\n    } = await Swal.fire({\n      input: 'textarea',\n      inputLabel: 'Type in your question regarding the frame',\n      inputPlaceholder: 'Type your question here...',\n      icon: 'question',\n      inputAttributes: {\n        'aria-label': 'Type the question you want to ask about the frame here'\n      },\n      showCancelButton: false,\n      confirmButtonText: 'Submit Question',\n      cancelButtonText: 'Cancel'\n    });\n    if (text) {\n      // Swal.fire(text)\n      const token = Cookies.get(\"jwtToken\");\n      // Define the API endpoint where you want to send the POST request\n      const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n      console.log(\"This is my props id\", props.videoID);\n      const postData = {\n        \"id\": props.videoID,\n        \"question\": text,\n        \"currentTime\": props.timeStamp,\n        \"jwt\": token\n      };\n      axios.post(apiUrl, postData).then(response => {\n        // Handle the successful response\n        console.log(\"Response:\", response.data);\n      }).catch(error => {\n        // Handle errors, if any\n        console.error(\"Error:\", error);\n      });\n    }\n  })();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.parentCallback()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AskAI, \"9TY55m6jT7atq/3XCFZzGXIUmHE=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = AskAI;\nexport default AskAI;\nvar _c;\n$RefreshReg$(_c, \"AskAI\");","map":{"version":3,"names":["React","Swal","axios","Cookies","SpeechRecognition","useSpeechRecognition","KeyboardVoiceIcon","jsxDEV","_jsxDEV","AskAI","props","_s","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","value","text","fire","input","inputLabel","inputPlaceholder","icon","inputAttributes","showCancelButton","confirmButtonText","cancelButtonText","token","get","apiUrl","console","log","videoID","postData","timeStamp","post","then","response","data","catch","error","parentCallback","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AskAI.jsx"],"sourcesContent":["// This is the the alert box that opens when a user wants to ask a questions regarding a scene of a video\nimport React from 'react';\nimport Swal from 'sweetalert2';\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';\n\nconst AskAI = (props) => {\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  \n  (async () => {\n  \n    if (!browserSupportsSpeechRecognition) {\n      return <span>Browser doesn't support speech recognition.</span>;\n    }\n\n    const { value: text } = await Swal.fire({\n      input: 'textarea',\n      inputLabel: 'Type in your question regarding the frame',\n      inputPlaceholder: 'Type your question here...',\n      icon: 'question',\n      inputAttributes: {\n        'aria-label': 'Type the question you want to ask about the frame here'\n      },\n      showCancelButton: false,\n      confirmButtonText: 'Submit Question',\n      cancelButtonText: 'Cancel',\n    })\n    \n    if (text) {\n      // Swal.fire(text)\n      const token = Cookies.get(\"jwtToken\");\n      // Define the API endpoint where you want to send the POST request\n      const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n      console.log(\"This is my props id\", props.videoID)\n      const postData = {\n        \"id\": props.videoID,\n        \"question\":text,\n        \"currentTime\": props.timeStamp,\n        \"jwt\":token\n      };\n  \n      axios\n        .post(apiUrl, postData)\n        .then((response) => {\n          // Handle the successful response\n          console.log(\"Response:\", response.data);\n\n        })\n        .catch((error) => {\n          // Handle errors, if any\n          console.error(\"Error:\", error);\n        });\n    }\n    \n    })()\n  return (\n    <div>\n     { props.parentCallback()}\n        {/* <DialogContent>\n        <KeyboardVoiceIcon\n            sx={{ fontSize: \"70px\", backgroundColor:\"#1D5B79\", color: \"#EF6262\", ml: \"5px\", borderRadius:\"100%\" , padding:\"20px\", margin: \"20px\"}}\n        />\n          <DialogContentText id=\"alert-dialog-description\" justifyContent={\"center\"}>\n            Ask your questions regarding the frame here\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n        </DialogActions> */}\n    </div>\n  );\n}\n\nexport default AskAI"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAClF,OAAOC,iBAAiB,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAM;IACJC,UAAU;IACVC,SAAS;IACTC,eAAe;IACfC;EACF,CAAC,GAAGV,oBAAoB,CAAC,CAAC;EAE1B,CAAC,YAAY;IAEX,IAAI,CAACU,gCAAgC,EAAE;MACrC,oBAAOP,OAAA;QAAAQ,QAAA,EAAM;MAA2C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACjE;IAEA,MAAM;MAAEC,KAAK,EAAEC;IAAK,CAAC,GAAG,MAAMrB,IAAI,CAACsB,IAAI,CAAC;MACtCC,KAAK,EAAE,UAAU;MACjBC,UAAU,EAAE,2CAA2C;MACvDC,gBAAgB,EAAE,4BAA4B;MAC9CC,IAAI,EAAE,UAAU;MAChBC,eAAe,EAAE;QACf,YAAY,EAAE;MAChB,CAAC;MACDC,gBAAgB,EAAE,KAAK;MACvBC,iBAAiB,EAAE,iBAAiB;MACpCC,gBAAgB,EAAE;IACpB,CAAC,CAAC;IAEF,IAAIT,IAAI,EAAE;MACR;MACA,MAAMU,KAAK,GAAG7B,OAAO,CAAC8B,GAAG,CAAC,UAAU,CAAC;MACrC;MACA,MAAMC,MAAM,GAAG,yCAAyC;MACxDC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE1B,KAAK,CAAC2B,OAAO,CAAC;MACjD,MAAMC,QAAQ,GAAG;QACf,IAAI,EAAE5B,KAAK,CAAC2B,OAAO;QACnB,UAAU,EAACf,IAAI;QACf,aAAa,EAAEZ,KAAK,CAAC6B,SAAS;QAC9B,KAAK,EAACP;MACR,CAAC;MAED9B,KAAK,CACFsC,IAAI,CAACN,MAAM,EAAEI,QAAQ,CAAC,CACtBG,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACAP,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEM,QAAQ,CAACC,IAAI,CAAC;MAEzC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChB;QACAV,OAAO,CAACU,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC,CAAC,CAAC;IACN;EAEA,CAAC,EAAE,CAAC;EACN,oBACErC,OAAA;IAAAQ,QAAA,EACGN,KAAK,CAACoC,cAAc,CAAC;EAAC;IAAA7B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAWpB,CAAC;AAEV,CAAC;AAAAT,EAAA,CArEKF,KAAK;EAAA,QAMLJ,oBAAoB;AAAA;AAAA0C,EAAA,GANpBtC,KAAK;AAuEX,eAAeA,KAAK;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}