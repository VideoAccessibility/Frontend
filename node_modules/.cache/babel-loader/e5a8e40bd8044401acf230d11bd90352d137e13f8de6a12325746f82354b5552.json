{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AskAI.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport { ButtonGroup, DialogTitle, DialogContentText, CircularProgress } from \"@mui/material\";\nimport KeyboardVoiceIcon from \"@mui/icons-material/KeyboardVoice\";\nimport formatTime from \"../utils/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AskAI = props => {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [response, setResponse] = React.useState(\"\");\n  const [startOrStop, setStartOrStop] = React.useState(\"Stop\");\n  useEffect(() => {\n    const handleKeyPress = event => {\n      // Check if the pressed key is \"Q\" and if the dialog is not already open\n      if (event.key === \"Q\" && !open) {\n        handleClickOpen();\n      }\n    };\n\n    // Add event listener when the component mounts\n    document.addEventListener(\"keydown\", handleKeyPress);\n\n    // Remove event listener when the component unmounts\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, []);\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  const handleClickOpen = () => {\n    SpeechRecognition.startListening({\n      continuous: true\n    });\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    SpeechRecognition.stopListening();\n    setResponse(\"\");\n    resetTranscript();\n    setStartOrStop(\"Stop\");\n  };\n  const handleAnotherQuestion = () => {\n    setResponse(\"\");\n    resetTranscript();\n  };\n  const handleReset = () => {\n    resetTranscript();\n    SpeechRecognition.startListening({\n      continuous: true\n    });\n  };\n  const handleStartStop = () => {\n    if (startOrStop === \"Stop\") {\n      SpeechRecognition.stopListening();\n      setStartOrStop(\"Start\");\n    } else {\n      SpeechRecognition.startListening();\n      setStartOrStop(\"Stop\");\n    }\n  };\n  const handleQuestion = () => {\n    setLoading(true);\n    const token = Cookies.get(\"jwtToken\");\n    // Define the API endpoint where you want to send the POST request\n    const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n    console.log(\"This is my props id\", props.videoID);\n    const postData = {\n      id: props.videoID,\n      question: transcript,\n      currentTime: props.timeStamp,\n      jwt: token\n    };\n    axios.post(apiUrl, postData).then(response => {\n      // Handle the successful response\n      console.log(\"Response:\", response.data);\n      setResponse(response.data.answer);\n      setLoading(false);\n    }).catch(error => {\n      // Handle errors, if any\n      console.error(\"Error:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        backgroundColor: \"secondary.main\",\n        color: \"white\",\n        width: \"100%\",\n        marginTop: \"10px\"\n      },\n      className: \"category-btn\",\n      onClick: handleClickOpen,\n      children: [\"Ask InfoBot at \", formatTime(props.timeStamp)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), (loading || response) && /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      fullWidth: true,\n      sx: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyboardVoiceIcon, {\n        sx: {\n          fontSize: \"70px\",\n          backgroundColor: \"#1D5B79\",\n          color: listening ? \"#EF6262\" : \"white\",\n          ml: \"5px\",\n          borderRadius: \"100%\",\n          padding: \"20px\",\n          margin: \"20px auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: !response ? \"Retrieving Response\" : \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), response && /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            backgroundColor: \"secondary.main\",\n            color: \"white\"\n          },\n          className: \"category-btn\",\n          onClick: handleAnotherQuestion,\n          children: \"Ask another question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            backgroundColor: \"secondary.main\",\n            color: \"white\"\n          },\n          className: \"category-btn\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), !loading && !response && /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      sx: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyboardVoiceIcon, {\n        sx: {\n          fontSize: \"70px\",\n          backgroundColor: \"#1D5B79\",\n          color: listening ? \"#EF6262\" : \"white\",\n          ml: \"5px\",\n          borderRadius: \"100%\",\n          padding: \"20px\",\n          margin: \"20px auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Ask Your Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-textarea\",\n          label: \"Your Question\",\n          placeholder: \"Your question will be visible here\",\n          multiline: true,\n          value: transcript,\n          fullWidth: true,\n          disabled: true,\n          sx: {\n            margin: \"20px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          \"aria-label\": \"Buttons to control speech recognition\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              backgroundColor: \"secondary.main\",\n              color: \"white\"\n            },\n            className: \"category-btn\",\n            onClick: handleStartStop,\n            children: startOrStop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              backgroundColor: \"secondary.main\",\n              color: \"white\"\n            },\n            className: \"category-btn\",\n            onClick: handleReset,\n            children: \"Reset Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            backgroundColor: \"secondary.main\",\n            color: \"white\"\n          },\n          className: \"category-btn\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            backgroundColor: \"secondary.main\",\n            color: \"white\"\n          },\n          onClick: handleQuestion,\n          children: \"Submit Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(AskAI, \"2/dNd0ApIX/4qC9hMbCskewZox8=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = AskAI;\nexport default AskAI;\n\n// // This is the the alert box that opens when a user wants to ask a questions regarding a scene of a video\n// import React from 'react';\n// import Swal from 'sweetalert2';\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n// import {Button,  DialogContent, DialogContentText, DialogActions} from \"@mui/material\";\n// import KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';\n\n// const AskAI = (props) => {\n//   (async () => {\n\n//     const { value: text } = await Swal.fire({\n//       input: 'textarea',\n//       inputLabel: 'Type in your question regarding the frame',\n//       inputPlaceholder: 'Type your question here...',\n//       icon: 'question',\n//       inputAttributes: {\n//         'aria-label': 'Type the question you want to ask about the frame here'\n//       },\n//       showCancelButton: false,\n//       confirmButtonText: 'Submit Question',\n//       cancelButtonText: 'Cancel',\n//     })\n\n//     if (text) {\n//       // Swal.fire(text)\n//       const token = Cookies.get(\"jwtToken\");\n//       // Define the API endpoint where you want to send the POST request\n//       const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n//       console.log(\"This is my props id\", props.videoID)\n//       const postData = {\n//         \"id\": props.videoID,\n//         \"question\":text,\n//         \"currentTime\": props.timeStamp,\n//         \"jwt\":token\n//       };\n\n//       axios\n//         .post(apiUrl, postData)\n//         .then((response) => {\n//           // Handle the successful response\n//           console.log(\"Response:\", response.data);\n\n//         })\n//         .catch((error) => {\n//           // Handle errors, if any\n//           console.error(\"Error:\", error);\n//         });\n//     }\n\n//     })()\n//   return (\n//     <div>\n//      { props.parentCallback()}\n//         {/* <DialogContent>\n//         <KeyboardVoiceIcon\n//             sx={{ fontSize: \"70px\", backgroundColor:\"#1D5B79\", color: \"#EF6262\", ml: \"5px\", borderRadius:\"100%\" , padding:\"20px\", margin: \"20px\"}}\n//         />\n//           <DialogContentText id=\"alert-dialog-description\" justifyContent={\"center\"}>\n//             Ask your questions regarding the frame here\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//         </DialogActions> */}\n//     </div>\n//   );\n// }\n\n// export default AskAI\nvar _c;\n$RefreshReg$(_c, \"AskAI\");","map":{"version":3,"names":["React","useState","useEffect","SpeechRecognition","useSpeechRecognition","axios","Cookies","Button","TextField","Dialog","DialogActions","DialogContent","ButtonGroup","DialogTitle","DialogContentText","CircularProgress","KeyboardVoiceIcon","formatTime","jsxDEV","_jsxDEV","AskAI","props","_s","open","setOpen","loading","setLoading","response","setResponse","startOrStop","setStartOrStop","handleKeyPress","event","key","handleClickOpen","document","addEventListener","removeEventListener","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","startListening","continuous","handleClose","stopListening","handleAnotherQuestion","handleReset","handleStartStop","handleQuestion","token","get","apiUrl","console","log","videoID","postData","id","question","currentTime","timeStamp","jwt","post","then","data","answer","catch","error","Fragment","children","sx","backgroundColor","color","width","marginTop","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","fullWidth","textAlign","fontSize","ml","borderRadius","padding","margin","label","placeholder","multiline","value","disabled","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AskAI.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport {\n  ButtonGroup,\n  DialogTitle,\n  DialogContentText,\n  CircularProgress,\n} from \"@mui/material\";\nimport KeyboardVoiceIcon from \"@mui/icons-material/KeyboardVoice\";\nimport formatTime from \"../utils/functions\";\n\nconst AskAI = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [response, setResponse] = React.useState(\"\");\n  const [startOrStop, setStartOrStop] = React.useState(\"Stop\");\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      // Check if the pressed key is \"Q\" and if the dialog is not already open\n      if (event.key === \"Q\" && !open) {\n        handleClickOpen();\n      }\n    };\n\n    // Add event listener when the component mounts\n    document.addEventListener(\"keydown\", handleKeyPress);\n\n    // Remove event listener when the component unmounts\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, []);\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n  } = useSpeechRecognition();\n\n  const handleClickOpen = () => {\n    SpeechRecognition.startListening({continuous:true});\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    SpeechRecognition.stopListening()\n    setResponse(\"\")\n    resetTranscript();\n    setStartOrStop(\"Stop\")\n  };\n\n  const handleAnotherQuestion = () => {\n    setResponse(\"\")\n    resetTranscript();\n  }\n\n  const handleReset = () => {\n    resetTranscript();\n    SpeechRecognition.startListening({continuous:true});\n  }\n\n  const handleStartStop = () => {\n    if (startOrStop === \"Stop\"){\n      SpeechRecognition.stopListening()\n      setStartOrStop(\"Start\")\n    }\n    else{\n      SpeechRecognition.startListening()\n      setStartOrStop(\"Stop\")\n    }\n\n  }\n\n  const handleQuestion = () => {\n    setLoading(true);\n    const token = Cookies.get(\"jwtToken\");\n    // Define the API endpoint where you want to send the POST request\n    const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n    console.log(\"This is my props id\", props.videoID);\n    const postData = {\n      id: props.videoID,\n      question: transcript,\n      currentTime: props.timeStamp,\n      jwt: token,\n    };\n\n    axios\n      .post(apiUrl, postData)\n      .then((response) => {\n        // Handle the successful response\n        console.log(\"Response:\", response.data);\n        setResponse(response.data.answer);\n        setLoading(false);\n      })\n      .catch((error) => {\n        // Handle errors, if any\n        console.error(\"Error:\", error);\n      });\n  };\n\n  return (\n    <React.Fragment>\n      <Button\n        sx={{\n          backgroundColor: \"secondary.main\",\n          color: \"white\",\n          width: \"100%\",\n          marginTop: \"10px\",\n        }}\n        className=\"category-btn\"\n        onClick={handleClickOpen}\n      >\n        Ask InfoBot at {formatTime(props.timeStamp)}\n      </Button>\n      {(loading || response) && (\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          fullWidth\n          sx={{ textAlign: \"center\" }}\n        >\n          <KeyboardVoiceIcon\n            sx={{\n              fontSize: \"70px\",\n              backgroundColor: \"#1D5B79\",\n              color: listening ? \"#EF6262\" : \"white\",\n              ml: \"5px\",\n              borderRadius: \"100%\",\n              padding: \"20px\",\n              margin: \"20px auto\",\n            }}\n          />\n          <DialogTitle>\n            {!response ? \"Retrieving Response\" : \"Response\"}\n          </DialogTitle>\n          <DialogContent>\n            {loading && <CircularProgress />}\n            {response && <DialogContentText>{response}</DialogContentText>}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              sx={{\n                backgroundColor: \"secondary.main\",\n                color: \"white\",\n              }}\n              className=\"category-btn\"\n              onClick={handleAnotherQuestion}\n            >\n              Ask another question\n            </Button>\n            <Button\n              sx={{\n                backgroundColor: \"secondary.main\",\n                color: \"white\",\n              }}\n              className=\"category-btn\"\n              onClick={handleClose}\n            >\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n\n      {!loading && !response && (\n        <Dialog open={open} onClose={handleClose} sx={{ textAlign: \"center\" }}>\n          <KeyboardVoiceIcon\n            sx={{\n              fontSize: \"70px\",\n              backgroundColor: \"#1D5B79\",\n              color: listening ? \"#EF6262\" : \"white\",\n              ml: \"5px\",\n              borderRadius: \"100%\",\n              padding: \"20px\",\n              margin: \"20px auto\",\n            }}\n          />\n          <DialogTitle>Ask Your Question</DialogTitle>\n          <DialogContent>\n            <TextField\n              id=\"outlined-textarea\"\n              label=\"Your Question\"\n              placeholder=\"Your question will be visible here\"\n              multiline\n              value={transcript}\n              fullWidth\n              disabled\n              sx={{ margin: \"20px 0\" }}\n            />\n            <ButtonGroup aria-label=\"Buttons to control speech recognition\">\n              <Button\n                sx={{\n                  backgroundColor: \"secondary.main\",\n                  color: \"white\",\n                }}\n                className=\"category-btn\"\n                onClick={handleStartStop}\n              >\n                {startOrStop}\n              </Button>\n              <Button\n                sx={{\n                  backgroundColor: \"secondary.main\",\n                  color: \"white\",\n                }}\n                className=\"category-btn\"\n                onClick={handleReset}\n              >\n                Reset Question\n              </Button>\n            </ButtonGroup>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              sx={{\n                backgroundColor: \"secondary.main\",\n                color: \"white\",\n              }}\n              className=\"category-btn\"\n              onClick={handleClose}\n            >\n              Cancel\n            </Button>\n            <Button\n              sx={{\n                backgroundColor: \"secondary.main\",\n                color: \"white\",\n              }}\n              onClick={handleQuestion}\n            >\n              Submit Question\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default AskAI;\n\n// // This is the the alert box that opens when a user wants to ask a questions regarding a scene of a video\n// import React from 'react';\n// import Swal from 'sweetalert2';\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n// import {Button,  DialogContent, DialogContentText, DialogActions} from \"@mui/material\";\n// import KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';\n\n// const AskAI = (props) => {\n//   (async () => {\n\n//     const { value: text } = await Swal.fire({\n//       input: 'textarea',\n//       inputLabel: 'Type in your question regarding the frame',\n//       inputPlaceholder: 'Type your question here...',\n//       icon: 'question',\n//       inputAttributes: {\n//         'aria-label': 'Type the question you want to ask about the frame here'\n//       },\n//       showCancelButton: false,\n//       confirmButtonText: 'Submit Question',\n//       cancelButtonText: 'Cancel',\n//     })\n\n//     if (text) {\n//       // Swal.fire(text)\n//       const token = Cookies.get(\"jwtToken\");\n//       // Define the API endpoint where you want to send the POST request\n//       const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n//       console.log(\"This is my props id\", props.videoID)\n//       const postData = {\n//         \"id\": props.videoID,\n//         \"question\":text,\n//         \"currentTime\": props.timeStamp,\n//         \"jwt\":token\n//       };\n\n//       axios\n//         .post(apiUrl, postData)\n//         .then((response) => {\n//           // Handle the successful response\n//           console.log(\"Response:\", response.data);\n\n//         })\n//         .catch((error) => {\n//           // Handle errors, if any\n//           console.error(\"Error:\", error);\n//         });\n//     }\n\n//     })()\n//   return (\n//     <div>\n//      { props.parentCallback()}\n//         {/* <DialogContent>\n//         <KeyboardVoiceIcon\n//             sx={{ fontSize: \"70px\", backgroundColor:\"#1D5B79\", color: \"#EF6262\", ml: \"5px\", borderRadius:\"100%\" , padding:\"20px\", margin: \"20px\"}}\n//         />\n//           <DialogContentText id=\"alert-dialog-description\" justifyContent={\"center\"}>\n//             Ask your questions regarding the frame here\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//         </DialogActions> */}\n//     </div>\n//   );\n// }\n\n// export default AskAI\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,IACtBC,oBAAoB,QACf,0BAA0B;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SACEC,WAAW,EACXC,WAAW,EACXC,iBAAiB,EACjBC,gBAAgB,QACX,eAAe;AACtB,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,UAAU,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxB,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG9B,KAAK,CAACC,QAAQ,CAAC,MAAM,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd,MAAM6B,cAAc,GAAIC,KAAK,IAAK;MAChC;MACA,IAAIA,KAAK,CAACC,GAAG,KAAK,GAAG,IAAI,CAACV,IAAI,EAAE;QAC9BW,eAAe,CAAC,CAAC;MACnB;IACF,CAAC;;IAED;IACAC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEL,cAAc,CAAC;;IAEpD;IACA,OAAO,MAAM;MACXI,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEN,cAAc,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IACJO,UAAU;IACVC,SAAS;IACTC,eAAe;IACfC;EACF,CAAC,GAAGrC,oBAAoB,CAAC,CAAC;EAE1B,MAAM8B,eAAe,GAAGA,CAAA,KAAM;IAC5B/B,iBAAiB,CAACuC,cAAc,CAAC;MAACC,UAAU,EAAC;IAAI,CAAC,CAAC;IACnDnB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMoB,WAAW,GAAGA,CAAA,KAAM;IACxBpB,OAAO,CAAC,KAAK,CAAC;IACdrB,iBAAiB,CAAC0C,aAAa,CAAC,CAAC;IACjCjB,WAAW,CAAC,EAAE,CAAC;IACfY,eAAe,CAAC,CAAC;IACjBV,cAAc,CAAC,MAAM,CAAC;EACxB,CAAC;EAED,MAAMgB,qBAAqB,GAAGA,CAAA,KAAM;IAClClB,WAAW,CAAC,EAAE,CAAC;IACfY,eAAe,CAAC,CAAC;EACnB,CAAC;EAED,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBP,eAAe,CAAC,CAAC;IACjBrC,iBAAiB,CAACuC,cAAc,CAAC;MAACC,UAAU,EAAC;IAAI,CAAC,CAAC;EACrD,CAAC;EAED,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAInB,WAAW,KAAK,MAAM,EAAC;MACzB1B,iBAAiB,CAAC0C,aAAa,CAAC,CAAC;MACjCf,cAAc,CAAC,OAAO,CAAC;IACzB,CAAC,MACG;MACF3B,iBAAiB,CAACuC,cAAc,CAAC,CAAC;MAClCZ,cAAc,CAAC,MAAM,CAAC;IACxB;EAEF,CAAC;EAED,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IAC3BvB,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMwB,KAAK,GAAG5C,OAAO,CAAC6C,GAAG,CAAC,UAAU,CAAC;IACrC;IACA,MAAMC,MAAM,GAAG,yCAAyC;IACxDC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEjC,KAAK,CAACkC,OAAO,CAAC;IACjD,MAAMC,QAAQ,GAAG;MACfC,EAAE,EAAEpC,KAAK,CAACkC,OAAO;MACjBG,QAAQ,EAAEpB,UAAU;MACpBqB,WAAW,EAAEtC,KAAK,CAACuC,SAAS;MAC5BC,GAAG,EAAEX;IACP,CAAC;IAED7C,KAAK,CACFyD,IAAI,CAACV,MAAM,EAAEI,QAAQ,CAAC,CACtBO,IAAI,CAAEpC,QAAQ,IAAK;MAClB;MACA0B,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE3B,QAAQ,CAACqC,IAAI,CAAC;MACvCpC,WAAW,CAACD,QAAQ,CAACqC,IAAI,CAACC,MAAM,CAAC;MACjCvC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDwC,KAAK,CAAEC,KAAK,IAAK;MAChB;MACAd,OAAO,CAACc,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAED,oBACEhD,OAAA,CAACnB,KAAK,CAACoE,QAAQ;IAAAC,QAAA,gBACblD,OAAA,CAACZ,MAAM;MACL+D,EAAE,EAAE;QACFC,eAAe,EAAE,gBAAgB;QACjCC,KAAK,EAAE,OAAO;QACdC,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE;MACb,CAAE;MACFC,SAAS,EAAC,cAAc;MACxBC,OAAO,EAAE1C,eAAgB;MAAAmC,QAAA,GAC1B,iBACgB,EAACpD,UAAU,CAACI,KAAK,CAACuC,SAAS,CAAC;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACR,CAACvD,OAAO,IAAIE,QAAQ,kBACnBR,OAAA,CAACV,MAAM;MACLc,IAAI,EAAEA,IAAK;MACX0D,OAAO,EAAErC,WAAY;MACrBsC,SAAS;MACTZ,EAAE,EAAE;QAAEa,SAAS,EAAE;MAAS,CAAE;MAAAd,QAAA,gBAE5BlD,OAAA,CAACH,iBAAiB;QAChBsD,EAAE,EAAE;UACFc,QAAQ,EAAE,MAAM;UAChBb,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAEjC,SAAS,GAAG,SAAS,GAAG,OAAO;UACtC8C,EAAE,EAAE,KAAK;UACTC,YAAY,EAAE,MAAM;UACpBC,OAAO,EAAE,MAAM;UACfC,MAAM,EAAE;QACV;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF7D,OAAA,CAACN,WAAW;QAAAwD,QAAA,EACT,CAAC1C,QAAQ,GAAG,qBAAqB,GAAG;MAAU;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACd7D,OAAA,CAACR,aAAa;QAAA0D,QAAA,GACX5C,OAAO,iBAAIN,OAAA,CAACJ,gBAAgB;UAAA8D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC/BrD,QAAQ,iBAAIR,OAAA,CAACL,iBAAiB;UAAAuD,QAAA,EAAE1C;QAAQ;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eAChB7D,OAAA,CAACT,aAAa;QAAA2D,QAAA,gBACZlD,OAAA,CAACZ,MAAM;UACL+D,EAAE,EAAE;YACFC,eAAe,EAAE,gBAAgB;YACjCC,KAAK,EAAE;UACT,CAAE;UACFG,SAAS,EAAC,cAAc;UACxBC,OAAO,EAAE9B,qBAAsB;UAAAuB,QAAA,EAChC;QAED;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT7D,OAAA,CAACZ,MAAM;UACL+D,EAAE,EAAE;YACFC,eAAe,EAAE,gBAAgB;YACjCC,KAAK,EAAE;UACT,CAAE;UACFG,SAAS,EAAC,cAAc;UACxBC,OAAO,EAAEhC,WAAY;UAAAyB,QAAA,EACtB;QAED;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACT,EAEA,CAACvD,OAAO,IAAI,CAACE,QAAQ,iBACpBR,OAAA,CAACV,MAAM;MAACc,IAAI,EAAEA,IAAK;MAAC0D,OAAO,EAAErC,WAAY;MAAC0B,EAAE,EAAE;QAAEa,SAAS,EAAE;MAAS,CAAE;MAAAd,QAAA,gBACpElD,OAAA,CAACH,iBAAiB;QAChBsD,EAAE,EAAE;UACFc,QAAQ,EAAE,MAAM;UAChBb,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAEjC,SAAS,GAAG,SAAS,GAAG,OAAO;UACtC8C,EAAE,EAAE,KAAK;UACTC,YAAY,EAAE,MAAM;UACpBC,OAAO,EAAE,MAAM;UACfC,MAAM,EAAE;QACV;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF7D,OAAA,CAACN,WAAW;QAAAwD,QAAA,EAAC;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC5C7D,OAAA,CAACR,aAAa;QAAA0D,QAAA,gBACZlD,OAAA,CAACX,SAAS;UACRiD,EAAE,EAAC,mBAAmB;UACtBgC,KAAK,EAAC,eAAe;UACrBC,WAAW,EAAC,oCAAoC;UAChDC,SAAS;UACTC,KAAK,EAAEtD,UAAW;UAClB4C,SAAS;UACTW,QAAQ;UACRvB,EAAE,EAAE;YAAEkB,MAAM,EAAE;UAAS;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eACF7D,OAAA,CAACP,WAAW;UAAC,cAAW,uCAAuC;UAAAyD,QAAA,gBAC7DlD,OAAA,CAACZ,MAAM;YACL+D,EAAE,EAAE;cACFC,eAAe,EAAE,gBAAgB;cACjCC,KAAK,EAAE;YACT,CAAE;YACFG,SAAS,EAAC,cAAc;YACxBC,OAAO,EAAE5B,eAAgB;YAAAqB,QAAA,EAExBxC;UAAW;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACT7D,OAAA,CAACZ,MAAM;YACL+D,EAAE,EAAE;cACFC,eAAe,EAAE,gBAAgB;cACjCC,KAAK,EAAE;YACT,CAAE;YACFG,SAAS,EAAC,cAAc;YACxBC,OAAO,EAAE7B,WAAY;YAAAsB,QAAA,EACtB;UAED;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAChB7D,OAAA,CAACT,aAAa;QAAA2D,QAAA,gBACZlD,OAAA,CAACZ,MAAM;UACL+D,EAAE,EAAE;YACFC,eAAe,EAAE,gBAAgB;YACjCC,KAAK,EAAE;UACT,CAAE;UACFG,SAAS,EAAC,cAAc;UACxBC,OAAO,EAAEhC,WAAY;UAAAyB,QAAA,EACtB;QAED;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT7D,OAAA,CAACZ,MAAM;UACL+D,EAAE,EAAE;YACFC,eAAe,EAAE,gBAAgB;YACjCC,KAAK,EAAE;UACT,CAAE;UACFI,OAAO,EAAE3B,cAAe;UAAAoB,QAAA,EACzB;QAED;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAErB,CAAC;AAAC1D,EAAA,CArOIF,KAAK;EAAA,QA4BLhB,oBAAoB;AAAA;AAAA0F,EAAA,GA5BpB1E,KAAK;AAuOX,eAAeA,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}