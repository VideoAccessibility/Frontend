{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, Box, Chip } from \"@mui/material\";\nimport { TextToSpeech } from \".\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = props => {\n  _s();\n  const video = require(\"./\" + props.path);\n  const defaultDescription = {\n    descriptions: \"No description playing\",\n    time_stamp: \"--\"\n  };\n  const [videoDescriptions, setVideoDescriptions] = useState([defaultDescription]);\n  const [currentDescriptionIndex, setCurrentDescriptionIndex] = useState(0);\n  const [isSpeechPlaying, setIsSpeechPlaying] = useState(false);\n  useEffect(() => {\n    // Concatenate the default description with the new descriptions from props\n    const updatedDescriptions = [defaultDescription, ...(props.descrip || [])];\n    setVideoDescriptions(updatedDescriptions);\n  }, [props.descrip]);\n  useEffect(() => {\n    const videoElement = document.getElementById(\"video\");\n    const handleTimeUpdate = () => {\n      // Ensure videoDescriptions is not empty before accessing properties\n      if (videoDescriptions.length > 0) {\n        const currentTime = Math.floor(videoElement.currentTime);\n        props.parentCallback(Math.floor(currentTime));\n        const index = videoDescriptions.findIndex(description => parseInt(description.time_stamp) === currentTime);\n        if (index !== -1 && index !== currentDescriptionIndex) {\n          setCurrentDescriptionIndex(index);\n          videoElement.pause();\n        }\n      }\n    };\n    videoElement.addEventListener(\"timeupdate\", handleTimeUpdate);\n    return () => {\n      videoElement.removeEventListener(\"timeupdate\", handleTimeUpdate);\n    };\n  }, [currentDescriptionIndex, videoDescriptions, props.parentCallback]);\n  const handleCallback = () => {\n    const videoElement = document.getElementById(\"video\");\n    videoElement.play();\n  };\n\n  // Ensure videoDescriptions[currentDescriptionIndex] is defined before accessing its properties\n  const currentDescription = videoDescriptions[currentDescriptionIndex] || defaultDescription;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"video\",\n      controls: true,\n      width: \"100%\",\n      height: \"500px\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: video,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"primary.dark\",\n        paddingTop: 2,\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 2,\n        sx: {\n          backgroundColor: \"#1D5B79\",\n          borderRadius: \"5px\",\n          marginBottom: \"32px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          p: 1.5,\n          borderRadius: \"5px\",\n          sx: {\n            backgroundColor: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: currentDescription.time_stamp,\n            sx: {\n              backgroundColor: \"secondary.light\",\n              color: \"white\",\n              marginBottom: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              color: \"#1D5B79\"\n            },\n            children: [currentDescription.descriptions, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), currentDescriptionIndex !== 0 && /*#__PURE__*/_jsxDEV(TextToSpeech, {\n              text: currentDescription.descriptions,\n              isPlayed: isSpeechPlaying,\n              parentCallback: handleCallback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"Gy7PHnazGWC2F2jQpy6ujDSfea4=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { Typography, Box, Grid, Chip } from \"@mui/material\";\n// import ReactPlayer from \"react-player\";\n// import { TextToSpeech } from \".\";\n\n// const VideoPlayer = (props) => {\n//   const video = require(\"./\" + props.path);\n//   const desc_objects = {\n//     descriptions: \"No description playing\",\n//     time_stamp: \"--\"\n//   }\n//   console.log(\"these are my desc in videoPlayer\", props.descrip);\n//   const newArr = [\n//     desc_objects,\n//     ...props.descrip,\n//   ];\n//   console.log(\"these are my descriptions in new arr\", newArr);\n//   const [videoDescriptions, setVideoDescriptions] = useState(newArr);\n\n//   const [currentDescriptionIndex, setCurrentDescriptionIndex] = useState(0);\n//   const [isSpeechPlaying, setIsSpeechPlaying] = useState(false);\n\n//   useEffect(() => {\n//     const video = document.getElementById(\"video\");\n\n//     const handleTimeUpdate = () => {\n//       const currentTime = Math.floor(video.currentTime);\n//       props.parentCallback(Math.floor(currentTime));\n//       const index = videoDescriptions.findIndex(\n//         (description) => parseInt(description.time_stamp) === currentTime\n//       );\n//       // console.log(\"0--->\", videoDescriptions[0].time_stamp ,currentTime, parseInt(videoDescriptions[0].time_stamp) === currentTime)\n\n//       if (index !== -1 && index !== currentDescriptionIndex) {\n//         setCurrentDescriptionIndex(index);\n//         video.pause();\n//       }\n//     };\n\n//     video.addEventListener(\"timeupdate\", handleTimeUpdate);\n\n//     return () => {\n//       video.removeEventListener(\"timeupdate\", handleTimeUpdate);\n//     };\n//   }, [currentDescriptionIndex, videoDescriptions]);\n\n//   const handleCallback = () => {\n//     const video = document.getElementById(\"video\");\n//     video.play();\n//   };\n\n//   return (\n//     <div>\n//       <video id=\"video\" controls width=\"100%\" height=\"500px\">\n//         <source src={video} type=\"video/mp4\" />\n//         Your browser does not support the video tag.\n//       </video>\n\n//       <div>\n//         <Typography variant=\"h6\" color={\"primary.dark\"} paddingTop={2}>\n//           {props.title}\n//         </Typography>\n//         <hr />\n//         <Box\n//           p={2}\n//           sx={{\n//             backgroundColor: \"#1D5B79\",\n//             borderRadius: \"5px\",\n//             marginBottom: \"32px\",\n//           }}\n//         >\n//           <Box p={1.5} borderRadius=\"5px\" sx={{ backgroundColor: \"white\" }}>\n\n//                 <Chip\n//                   label={videoDescriptions[currentDescriptionIndex].time_stamp}\n//                   sx={{\n//                     backgroundColor: \"secondary.light\",\n//                     color: \"white\",\n//                     marginBottom: \"20px\",\n//                   }}\n//                 />\n//             <Typography variant=\"body1\" sx={{ color: \"#1D5B79\" }}>\n//             {console.log(\"I am returning just before the desc\", videoDescriptions)}\n//               {videoDescriptions[currentDescriptionIndex].descriptions}\n//               <hr />\n//               {currentDescriptionIndex !== 0 && <TextToSpeech\n//                 text={videoDescriptions[currentDescriptionIndex].descriptions}\n//                 isPlayed={isSpeechPlaying}\n//                 parentCallback={handleCallback}\n//               />}\n//             </Typography>\n//           </Box>\n//         </Box>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Box","Chip","TextToSpeech","jsxDEV","_jsxDEV","VideoPlayer","props","_s","video","require","path","defaultDescription","descriptions","time_stamp","videoDescriptions","setVideoDescriptions","currentDescriptionIndex","setCurrentDescriptionIndex","isSpeechPlaying","setIsSpeechPlaying","updatedDescriptions","descrip","videoElement","document","getElementById","handleTimeUpdate","length","currentTime","Math","floor","parentCallback","index","findIndex","description","parseInt","pause","addEventListener","removeEventListener","handleCallback","play","currentDescription","children","id","controls","width","height","src","type","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","paddingTop","title","p","sx","backgroundColor","borderRadius","marginBottom","label","text","isPlayed","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoPlayer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography, Box, Chip } from \"@mui/material\";\nimport { TextToSpeech } from \".\";\n\nconst VideoPlayer = (props) => {\n  const video = require(\"./\" + props.path);\n  const defaultDescription = {\n    descriptions: \"No description playing\",\n    time_stamp: \"--\"\n  };\n\n  const [videoDescriptions, setVideoDescriptions] = useState([defaultDescription]);\n  const [currentDescriptionIndex, setCurrentDescriptionIndex] = useState(0);\n  const [isSpeechPlaying, setIsSpeechPlaying] = useState(false);\n  \n  useEffect(() => {\n    // Concatenate the default description with the new descriptions from props\n    const updatedDescriptions = [defaultDescription, ...(props.descrip || [])];\n    setVideoDescriptions(updatedDescriptions);\n  }, [props.descrip]);\n\n  useEffect(() => {\n    const videoElement = document.getElementById(\"video\");\n\n    const handleTimeUpdate = () => {\n      // Ensure videoDescriptions is not empty before accessing properties\n      if (videoDescriptions.length > 0) {\n        const currentTime = Math.floor(videoElement.currentTime);\n        props.parentCallback(Math.floor(currentTime));\n        const index = videoDescriptions.findIndex(\n          (description) => parseInt(description.time_stamp) === currentTime\n        );\n\n        if (index !== -1 && index !== currentDescriptionIndex) {\n          setCurrentDescriptionIndex(index);\n          videoElement.pause();\n        }\n      }\n    };\n\n    videoElement.addEventListener(\"timeupdate\", handleTimeUpdate);\n\n    return () => {\n      videoElement.removeEventListener(\"timeupdate\", handleTimeUpdate);\n    };\n  }, [currentDescriptionIndex, videoDescriptions, props.parentCallback]);\n\n  const handleCallback = () => {\n    const videoElement = document.getElementById(\"video\");\n    videoElement.play();\n  };\n\n  // Ensure videoDescriptions[currentDescriptionIndex] is defined before accessing its properties\n  const currentDescription = videoDescriptions[currentDescriptionIndex] || defaultDescription;\n\n  return (\n    <div>\n      <video id=\"video\" controls width=\"100%\" height=\"500px\">\n        <source src={video} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n\n      <div>\n        <Typography variant=\"h6\" color={\"primary.dark\"} paddingTop={2}>\n          {props.title}\n        </Typography>\n        <hr />\n        <Box\n          p={2}\n          sx={{\n            backgroundColor: \"#1D5B79\",\n            borderRadius: \"5px\",\n            marginBottom: \"32px\",\n          }}\n        >\n          <Box p={1.5} borderRadius=\"5px\" sx={{ backgroundColor: \"white\" }}>\n            <Chip\n              label={currentDescription.time_stamp}\n              sx={{\n                backgroundColor: \"secondary.light\",\n                color: \"white\",\n                marginBottom: \"20px\",\n              }}\n            />\n            <Typography variant=\"body1\" sx={{ color: \"#1D5B79\" }}>\n              {currentDescription.descriptions}\n              <hr />\n              {currentDescriptionIndex !== 0 && (\n                <TextToSpeech\n                  text={currentDescription.descriptions}\n                  isPlayed={isSpeechPlaying}\n                  parentCallback={handleCallback}\n                />\n              )}\n            </Typography>\n          </Box>\n        </Box>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n\n\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { Typography, Box, Grid, Chip } from \"@mui/material\";\n// import ReactPlayer from \"react-player\";\n// import { TextToSpeech } from \".\";\n\n// const VideoPlayer = (props) => {\n//   const video = require(\"./\" + props.path);\n//   const desc_objects = {\n//     descriptions: \"No description playing\",\n//     time_stamp: \"--\"\n//   }\n//   console.log(\"these are my desc in videoPlayer\", props.descrip);\n//   const newArr = [\n//     desc_objects,\n//     ...props.descrip,\n//   ];\n//   console.log(\"these are my descriptions in new arr\", newArr);\n//   const [videoDescriptions, setVideoDescriptions] = useState(newArr);\n\n//   const [currentDescriptionIndex, setCurrentDescriptionIndex] = useState(0);\n//   const [isSpeechPlaying, setIsSpeechPlaying] = useState(false);\n\n//   useEffect(() => {\n//     const video = document.getElementById(\"video\");\n\n//     const handleTimeUpdate = () => {\n//       const currentTime = Math.floor(video.currentTime);\n//       props.parentCallback(Math.floor(currentTime));\n//       const index = videoDescriptions.findIndex(\n//         (description) => parseInt(description.time_stamp) === currentTime\n//       );\n//       // console.log(\"0--->\", videoDescriptions[0].time_stamp ,currentTime, parseInt(videoDescriptions[0].time_stamp) === currentTime)\n\n//       if (index !== -1 && index !== currentDescriptionIndex) {\n//         setCurrentDescriptionIndex(index);\n//         video.pause();\n//       }\n//     };\n\n//     video.addEventListener(\"timeupdate\", handleTimeUpdate);\n\n//     return () => {\n//       video.removeEventListener(\"timeupdate\", handleTimeUpdate);\n//     };\n//   }, [currentDescriptionIndex, videoDescriptions]);\n\n//   const handleCallback = () => {\n//     const video = document.getElementById(\"video\");\n//     video.play();\n//   };\n\n//   return (\n//     <div>\n//       <video id=\"video\" controls width=\"100%\" height=\"500px\">\n//         <source src={video} type=\"video/mp4\" />\n//         Your browser does not support the video tag.\n//       </video>\n\n//       <div>\n//         <Typography variant=\"h6\" color={\"primary.dark\"} paddingTop={2}>\n//           {props.title}\n//         </Typography>\n//         <hr />\n//         <Box\n//           p={2}\n//           sx={{\n//             backgroundColor: \"#1D5B79\",\n//             borderRadius: \"5px\",\n//             marginBottom: \"32px\",\n//           }}\n//         >\n//           <Box p={1.5} borderRadius=\"5px\" sx={{ backgroundColor: \"white\" }}>\n\n//                 <Chip\n//                   label={videoDescriptions[currentDescriptionIndex].time_stamp}\n//                   sx={{\n//                     backgroundColor: \"secondary.light\",\n//                     color: \"white\",\n//                     marginBottom: \"20px\",\n//                   }}\n//                 />\n//             <Typography variant=\"body1\" sx={{ color: \"#1D5B79\" }}>\n//             {console.log(\"I am returning just before the desc\", videoDescriptions)}\n//               {videoDescriptions[currentDescriptionIndex].descriptions}\n//               <hr />\n//               {currentDescriptionIndex !== 0 && <TextToSpeech\n//                 text={videoDescriptions[currentDescriptionIndex].descriptions}\n//                 isPlayed={isSpeechPlaying}\n//                 parentCallback={handleCallback}\n//               />}\n//             </Typography>\n//           </Box>\n//         </Box>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default VideoPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}