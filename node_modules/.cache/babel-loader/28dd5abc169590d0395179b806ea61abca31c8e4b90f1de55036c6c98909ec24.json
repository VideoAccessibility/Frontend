{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/UploadVideo.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { Sidebar, Navbar, RedirectHome } from \"./\";\n// import {\n//   Box,\n//   Stack,\n//   Typography,\n//   Button,\n//   CircularProgress,\n//   FormControl,\n//   RadioGroup,\n//   FormControlLabel,\n//   Radio,\n//   TextField,\n//   Alert, \n//   AlertTitle,\n//   Snackbar\n// } from \"@mui/material\";\n// import FileUploadIcon from \"@mui/icons-material/FileUpload\";\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n\n// const UploadVideo = () => {\n//   const [selectedCategory, setSelectedCategory] = useState(\"Upload\");\n//   const [loading, setLoading] = React.useState(false);\n//   const [heading, setHeading] = React.useState(\n//     \"Drag and drop a file you want to upload\"\n//   );\n//   const [smallHeading, setSmallHeading] = React.useState(\n//     \"Once uploaded and described, your video will be visible on homepage\"\n//   );\n//   const [visibility, setVisibility] = useState(\"private\");\n//   const [selectedFile, setSelectedFile] = useState();\n//   const [videoTitle, setVideoTitle] = useState(\"\");\n//   const [alertOpen, setAlertOpen] = useState(false);\n\n//   const handleVisibilityChange = (event) => {\n//     setVisibility(event.target.value);\n//   };\n\n//   const handleTitleChange = (event) => {\n//     setVideoTitle(event.target.value);\n//   };\n\n//   const handleAlertClose = () => {\n//     setAlertOpen(false);\n//     // Assuming you have a function to handle redirects to the sign-in page\n//     // handleRedirectToSignIn(); // You need to implement this function\n//   };\n\n//   const handleFileUpload = (e) => {\n//     if (!e.target.files) {\n//       return;\n//     }\n//     setSelectedFile(e.target.files[0]);\n//     const token = Cookies.get(\"jwtToken\");\n\n//     if (!token) {\n//       // User is not logged in, display Material-UI Alert\n//       setAlertOpen(true);\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"jwt\", token);\n//     formData.append(\"file\", e.target.files[0]);\n//     formData.append(\"title\", videoTitle);\n//     formData.append(\"public_or_private\", visibility);\n\n//     console.log(\"This is my form data\", visibility);\n\n//     // Define the API endpoint where you want to send the POST request\n//     const apiUrl = \"http://127.0.0.1:8000/api/upload/\";\n\n//     axios\n//       .post(apiUrl, formData, {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\", // Use ‘multipart/form-data’ for file uploads\n//         },\n//       })\n//       .then((response) => {\n//         // Handle the successful response\n//         console.log(\"Response:\", response.data);\n//         setHeading(\"Your file is being loaded, do not refresh page the page\");\n//         setSmallHeading(\n//           \"You will be redirected to the video page when the video is described\"\n//         );\n//         setLoading(true);\n//       })\n//       .catch((error) => {\n//         // Handle errors, if any\n//         console.error(\"Error:\", error);\n//         setHeading(\"Error in uploading your file, please try again\");\n//         setSmallHeading(\"Make sure, you are uploading an mp4 file\");\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <Snackbar\n//         open={alertOpen}\n//         autoHideDuration={6000}\n//         onClose={handleAlertClose}\n//         anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//       >\n//         <Alert severity=\"error\" onClose={handleAlertClose}>\n//           <AlertTitle>Authentication Error</AlertTitle>\n//           You need to be logged in to upload a video.\n//         </Alert>\n//       </Snackbar>\n//       <Navbar />\n//       {/*  The box is the sidebar */}\n//       <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//         <Box\n//           sx={{\n//             height: { sx: \"auto\", md: \"100vh\" },\n//             paddingRight: { sx: 0, md: 2 },\n//           }}\n//         >\n//           <Sidebar\n//             selectedCategory={selectedCategory}\n//             setSelectedCategory={setSelectedCategory}\n//           />\n//         </Box>\n\n//         <Stack\n//           spacing={2}\n//           paddingTop={15}\n//           width={\"80%\"}\n//           alignItems={\"center\"}\n//           backgroundColor={\"pink\"}\n//         >\n//           <Typography\n//             variant=\"h4\"\n//             fontWeight=\"bold\"\n//             color=\"primary.dark\"\n//           >\n//             {heading}\n//           </Typography>\n//           <Typography variant=\"caption\" fontWeight=\"bold\" color=\"primary.dark\">\n//             {smallHeading}\n//           </Typography>\n//           <Typography\n//             variant=\"caption\"\n//             fontWeight=\"bold\"\n//             color=\"secondary.main\"\n//           >\n//             Choose whether you would like the video to be public or private. The\n//             video is private by default.\n//           </Typography>\n//           {!loading && (\n//             <Box\n//               sx={{\n//                 textAlign: \"center\",\n//                 width: \"50%\",\n//               }}\n//             >\n//               <FormControl component=\"fieldset\">\n//                 <RadioGroup\n//                   row\n//                   aria-label=\"visibility\"\n//                   name=\"visibility\"\n//                   value={visibility}\n//                   onChange={handleVisibilityChange}\n//                 >\n//                   <FormControlLabel\n//                     value=\"private\"\n//                     control={<Radio />}\n//                     label=\"Private\"\n//                   />\n//                   <FormControlLabel\n//                     value=\"public\"\n//                     control={<Radio />}\n//                     label=\"Public\"\n//                   />\n//                 </RadioGroup>\n//               </FormControl>\n//               <br />\n//               <TextField\n//                 label=\"Video Title\"\n//                 variant=\"outlined\"\n//                 margin=\"normal\"\n//                 value={videoTitle}\n//                 fullWidth\n//                 onChange={handleTitleChange}\n//               />\n//               <br />\n//               <Button\n//                 sx={{\n//                   backgroundColor: \"secondary.main\",\n//                   color: \"white\",\n//                   marginTop: \"20px\",\n//                 }}\n//                 className=\"category-btn\"\n//                 component=\"label\"\n//                 startIcon={<FileUploadIcon />}\n//                 disabled={loading}\n//               >\n//                 Upload Video File\n//                 <input\n//                   type=\"file\"\n//                   accept=\".mp4\"\n//                   hidden\n//                   onChange={handleFileUpload}\n//                 />\n//               </Button>\n//               <RedirectHome/>\n//             </Box>\n//           )}\n\n//           {loading && <CircularProgress />}\n//         </Stack>\n\n//         {/* This is for if the user wants to upload a youtube link */}\n//       </Stack>\n//     </div>\n//   );\n// };\n\n// export default UploadVideo;\n\nimport React, { useState } from \"react\";\nimport { Sidebar, Navbar, RedirectHome } from \"./\";\nimport { Box, Stack, Typography, Button, CircularProgress, FormControl, RadioGroup, FormControlLabel, Radio, TextField, Alert, AlertTitle, Snackbar } from \"@mui/material\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadVideo = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(\"Upload\");\n  const [loading, setLoading] = React.useState(false);\n  const [heading, setHeading] = React.useState(\"Drag and drop a file you want to upload\");\n  const [smallHeading, setSmallHeading] = React.useState(\"Once uploaded and described, your video will be visible on homepage\");\n  const [visibility, setVisibility] = useState(\"private\");\n  const [selectedFile, setSelectedFile] = useState();\n  const [videoTitle, setVideoTitle] = useState(\"\");\n  const [alertOpen, setAlertOpen] = useState(false);\n  const handleVisibilityChange = event => {\n    setVisibility(event.target.value);\n  };\n  const handleTitleChange = event => {\n    setVideoTitle(event.target.value);\n  };\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n  };\n  const handleFileUpload = e => {\n    if (!e.target.files) {\n      return;\n    }\n    setSelectedFile(e.target.files[0]);\n    const token = Cookies.get(\"jwtToken\");\n    if (!token) {\n      setAlertOpen(true);\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"jwt\", token);\n    formData.append(\"file\", e.target.files[0]);\n    formData.append(\"title\", videoTitle);\n    formData.append(\"public_or_private\", visibility);\n    const apiUrl = \"http://127.0.0.1:8000/api/upload/\";\n    axios.post(apiUrl, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {\n      setHeading(\"Your file is being loaded, do not refresh page the page\");\n      setSmallHeading(\"You will be redirected to the video page when the video is described\");\n      setLoading(true);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      setHeading(\"Error in uploading your file, please try again\");\n      setSmallHeading(\"Make sure you are uploading an mp4 file\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alertOpen,\n      autoHideDuration: 6000,\n      onClose: handleAlertClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: handleAlertClose,\n        children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n          children: \"Authentication Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), \"You need to be logged in to upload a video.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        paddingTop: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        selectedCategory: selectedCategory,\n        setSelectedCategory: setSelectedCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: {\n          xs: \"100%\",\n          md: \"80%\"\n        },\n        bgcolor: \"pink\",\n        p: 3,\n        borderRadius: 4,\n        boxShadow: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          fontWeight: \"bold\",\n          color: \"primary.dark\",\n          children: heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          fontWeight: \"bold\",\n          color: \"primary.dark\",\n          children: smallHeading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          fontWeight: \"bold\",\n          color: \"secondary.main\",\n          children: \"Choose whether you would like the video to be public or private. The video is private by default.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), !loading && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: \"center\",\n            width: \"100%\",\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              row: true,\n              \"aria-label\": \"visibility\",\n              name: \"visibility\",\n              value: visibility,\n              onChange: handleVisibilityChange,\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"private\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 30\n                }, this),\n                label: \"Private\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"public\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 30\n                }, this),\n                label: \"Public\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Video Title\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            value: videoTitle,\n            fullWidth: true,\n            onChange: handleTitleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              backgroundColor: \"secondary.main\",\n              color: \"white\",\n              mt: 2\n            },\n            className: \"category-btn\",\n            component: \"label\",\n            startIcon: /*#__PURE__*/_jsxDEV(FileUploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 28\n            }, this),\n            disabled: loading,\n            children: [\"Upload Video File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".mp4\",\n              hidden: true,\n              onChange: handleFileUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RedirectHome, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n          sx: {\n            mt: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadVideo, \"dlfXqoKxzuzhv8igQFT4M8068xc=\");\n_c = UploadVideo;\nexport default UploadVideo;\nvar _c;\n$RefreshReg$(_c, \"UploadVideo\");","map":{"version":3,"names":["React","useState","Sidebar","Navbar","RedirectHome","Box","Stack","Typography","Button","CircularProgress","FormControl","RadioGroup","FormControlLabel","Radio","TextField","Alert","AlertTitle","Snackbar","FileUploadIcon","axios","Cookies","jsxDEV","_jsxDEV","UploadVideo","_s","selectedCategory","setSelectedCategory","loading","setLoading","heading","setHeading","smallHeading","setSmallHeading","visibility","setVisibility","selectedFile","setSelectedFile","videoTitle","setVideoTitle","alertOpen","setAlertOpen","handleVisibilityChange","event","target","value","handleTitleChange","handleAlertClose","handleFileUpload","e","files","token","get","formData","FormData","append","apiUrl","post","headers","then","response","catch","error","console","children","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexDirection","alignItems","paddingTop","width","xs","md","bgcolor","p","borderRadius","boxShadow","variant","fontWeight","color","textAlign","mt","component","row","name","onChange","control","label","margin","fullWidth","backgroundColor","className","startIcon","disabled","type","accept","hidden","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/UploadVideo.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { Sidebar, Navbar, RedirectHome } from \"./\";\n// import {\n//   Box,\n//   Stack,\n//   Typography,\n//   Button,\n//   CircularProgress,\n//   FormControl,\n//   RadioGroup,\n//   FormControlLabel,\n//   Radio,\n//   TextField,\n//   Alert, \n//   AlertTitle,\n//   Snackbar\n// } from \"@mui/material\";\n// import FileUploadIcon from \"@mui/icons-material/FileUpload\";\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n\n// const UploadVideo = () => {\n//   const [selectedCategory, setSelectedCategory] = useState(\"Upload\");\n//   const [loading, setLoading] = React.useState(false);\n//   const [heading, setHeading] = React.useState(\n//     \"Drag and drop a file you want to upload\"\n//   );\n//   const [smallHeading, setSmallHeading] = React.useState(\n//     \"Once uploaded and described, your video will be visible on homepage\"\n//   );\n//   const [visibility, setVisibility] = useState(\"private\");\n//   const [selectedFile, setSelectedFile] = useState();\n//   const [videoTitle, setVideoTitle] = useState(\"\");\n//   const [alertOpen, setAlertOpen] = useState(false);\n\n//   const handleVisibilityChange = (event) => {\n//     setVisibility(event.target.value);\n//   };\n\n//   const handleTitleChange = (event) => {\n//     setVideoTitle(event.target.value);\n//   };\n\n//   const handleAlertClose = () => {\n//     setAlertOpen(false);\n//     // Assuming you have a function to handle redirects to the sign-in page\n//     // handleRedirectToSignIn(); // You need to implement this function\n//   };\n\n//   const handleFileUpload = (e) => {\n//     if (!e.target.files) {\n//       return;\n//     }\n//     setSelectedFile(e.target.files[0]);\n//     const token = Cookies.get(\"jwtToken\");\n\n//     if (!token) {\n//       // User is not logged in, display Material-UI Alert\n//       setAlertOpen(true);\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"jwt\", token);\n//     formData.append(\"file\", e.target.files[0]);\n//     formData.append(\"title\", videoTitle);\n//     formData.append(\"public_or_private\", visibility);\n\n//     console.log(\"This is my form data\", visibility);\n\n//     // Define the API endpoint where you want to send the POST request\n//     const apiUrl = \"http://127.0.0.1:8000/api/upload/\";\n\n//     axios\n//       .post(apiUrl, formData, {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\", // Use ‘multipart/form-data’ for file uploads\n//         },\n//       })\n//       .then((response) => {\n//         // Handle the successful response\n//         console.log(\"Response:\", response.data);\n//         setHeading(\"Your file is being loaded, do not refresh page the page\");\n//         setSmallHeading(\n//           \"You will be redirected to the video page when the video is described\"\n//         );\n//         setLoading(true);\n//       })\n//       .catch((error) => {\n//         // Handle errors, if any\n//         console.error(\"Error:\", error);\n//         setHeading(\"Error in uploading your file, please try again\");\n//         setSmallHeading(\"Make sure, you are uploading an mp4 file\");\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <Snackbar\n//         open={alertOpen}\n//         autoHideDuration={6000}\n//         onClose={handleAlertClose}\n//         anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n//       >\n//         <Alert severity=\"error\" onClose={handleAlertClose}>\n//           <AlertTitle>Authentication Error</AlertTitle>\n//           You need to be logged in to upload a video.\n//         </Alert>\n//       </Snackbar>\n//       <Navbar />\n//       {/*  The box is the sidebar */}\n//       <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//         <Box\n//           sx={{\n//             height: { sx: \"auto\", md: \"100vh\" },\n//             paddingRight: { sx: 0, md: 2 },\n//           }}\n//         >\n//           <Sidebar\n//             selectedCategory={selectedCategory}\n//             setSelectedCategory={setSelectedCategory}\n//           />\n//         </Box>\n\n//         <Stack\n//           spacing={2}\n//           paddingTop={15}\n//           width={\"80%\"}\n//           alignItems={\"center\"}\n//           backgroundColor={\"pink\"}\n//         >\n//           <Typography\n//             variant=\"h4\"\n//             fontWeight=\"bold\"\n//             color=\"primary.dark\"\n//           >\n//             {heading}\n//           </Typography>\n//           <Typography variant=\"caption\" fontWeight=\"bold\" color=\"primary.dark\">\n//             {smallHeading}\n//           </Typography>\n//           <Typography\n//             variant=\"caption\"\n//             fontWeight=\"bold\"\n//             color=\"secondary.main\"\n//           >\n//             Choose whether you would like the video to be public or private. The\n//             video is private by default.\n//           </Typography>\n//           {!loading && (\n//             <Box\n//               sx={{\n//                 textAlign: \"center\",\n//                 width: \"50%\",\n//               }}\n//             >\n//               <FormControl component=\"fieldset\">\n//                 <RadioGroup\n//                   row\n//                   aria-label=\"visibility\"\n//                   name=\"visibility\"\n//                   value={visibility}\n//                   onChange={handleVisibilityChange}\n//                 >\n//                   <FormControlLabel\n//                     value=\"private\"\n//                     control={<Radio />}\n//                     label=\"Private\"\n//                   />\n//                   <FormControlLabel\n//                     value=\"public\"\n//                     control={<Radio />}\n//                     label=\"Public\"\n//                   />\n//                 </RadioGroup>\n//               </FormControl>\n//               <br />\n//               <TextField\n//                 label=\"Video Title\"\n//                 variant=\"outlined\"\n//                 margin=\"normal\"\n//                 value={videoTitle}\n//                 fullWidth\n//                 onChange={handleTitleChange}\n//               />\n//               <br />\n//               <Button\n//                 sx={{\n//                   backgroundColor: \"secondary.main\",\n//                   color: \"white\",\n//                   marginTop: \"20px\",\n//                 }}\n//                 className=\"category-btn\"\n//                 component=\"label\"\n//                 startIcon={<FileUploadIcon />}\n//                 disabled={loading}\n//               >\n//                 Upload Video File\n//                 <input\n//                   type=\"file\"\n//                   accept=\".mp4\"\n//                   hidden\n//                   onChange={handleFileUpload}\n//                 />\n//               </Button>\n//               <RedirectHome/>\n//             </Box>\n//           )}\n\n//           {loading && <CircularProgress />}\n//         </Stack>\n\n//         {/* This is for if the user wants to upload a youtube link */}\n//       </Stack>\n//     </div>\n//   );\n// };\n\n// export default UploadVideo;\n\n\nimport React, { useState } from \"react\";\nimport { Sidebar, Navbar, RedirectHome } from \"./\";\nimport {\n  Box,\n  Stack,\n  Typography,\n  Button,\n  CircularProgress,\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  TextField,\n  Alert, \n  AlertTitle,\n  Snackbar\n} from \"@mui/material\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst UploadVideo = () => {\n  const [selectedCategory, setSelectedCategory] = useState(\"Upload\");\n  const [loading, setLoading] = React.useState(false);\n  const [heading, setHeading] = React.useState(\"Drag and drop a file you want to upload\");\n  const [smallHeading, setSmallHeading] = React.useState(\"Once uploaded and described, your video will be visible on homepage\");\n  const [visibility, setVisibility] = useState(\"private\");\n  const [selectedFile, setSelectedFile] = useState();\n  const [videoTitle, setVideoTitle] = useState(\"\");\n  const [alertOpen, setAlertOpen] = useState(false);\n\n  const handleVisibilityChange = (event) => {\n    setVisibility(event.target.value);\n  };\n\n  const handleTitleChange = (event) => {\n    setVideoTitle(event.target.value);\n  };\n\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n  };\n\n  const handleFileUpload = (e) => {\n    if (!e.target.files) {\n      return;\n    }\n    setSelectedFile(e.target.files[0]);\n    const token = Cookies.get(\"jwtToken\");\n\n    if (!token) {\n      setAlertOpen(true);\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"jwt\", token);\n    formData.append(\"file\", e.target.files[0]);\n    formData.append(\"title\", videoTitle);\n    formData.append(\"public_or_private\", visibility);\n\n    const apiUrl = \"http://127.0.0.1:8000/api/upload/\";\n\n    axios\n      .post(apiUrl, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((response) => {\n        setHeading(\"Your file is being loaded, do not refresh page the page\");\n        setSmallHeading(\"You will be redirected to the video page when the video is described\");\n        setLoading(true);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        setHeading(\"Error in uploading your file, please try again\");\n        setSmallHeading(\"Make sure you are uploading an mp4 file\");\n      });\n  };\n\n  return (\n    <div>\n      <Snackbar\n        open={alertOpen}\n        autoHideDuration={6000}\n        onClose={handleAlertClose}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <Alert severity=\"error\" onClose={handleAlertClose}>\n          <AlertTitle>Authentication Error</AlertTitle>\n          You need to be logged in to upload a video.\n        </Alert>\n      </Snackbar>\n      <Navbar />\n      <Stack sx={{ flexDirection: \"column\", alignItems: \"center\", paddingTop: 3 }}>\n        <Sidebar selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} />\n        <Box\n          width={{ xs: \"100%\", md: \"80%\" }}\n          bgcolor=\"pink\"\n          p={3}\n          borderRadius={4}\n          boxShadow={3}\n        >\n          <Typography variant=\"h4\" fontWeight=\"bold\" color=\"primary.dark\">\n            {heading}\n          </Typography>\n          <Typography variant=\"caption\" fontWeight=\"bold\" color=\"primary.dark\">\n            {smallHeading}\n          </Typography>\n          <Typography variant=\"caption\" fontWeight=\"bold\" color=\"secondary.main\">\n            Choose whether you would like the video to be public or private. The video is private by default.\n          </Typography>\n          {!loading && (\n            <Box\n              sx={{\n                textAlign: \"center\",\n                width: \"100%\",\n                mt: 3,\n              }}\n            >\n              <FormControl component=\"fieldset\">\n                <RadioGroup\n                  row\n                  aria-label=\"visibility\"\n                  name=\"visibility\"\n                  value={visibility}\n                  onChange={handleVisibilityChange}\n                >\n                  <FormControlLabel\n                    value=\"private\"\n                    control={<Radio />}\n                    label=\"Private\"\n                  />\n                  <FormControlLabel\n                    value=\"public\"\n                    control={<Radio />}\n                    label=\"Public\"\n                  />\n                </RadioGroup>\n              </FormControl>\n              <TextField\n                label=\"Video Title\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                value={videoTitle}\n                fullWidth\n                onChange={handleTitleChange}\n              />\n              <Button\n                sx={{\n                  backgroundColor: \"secondary.main\",\n                  color: \"white\",\n                  mt: 2,\n                }}\n                className=\"category-btn\"\n                component=\"label\"\n                startIcon={<FileUploadIcon />}\n                disabled={loading}\n              >\n                Upload Video File\n                <input\n                  type=\"file\"\n                  accept=\".mp4\"\n                  hidden\n                  onChange={handleFileUpload}\n                />\n              </Button>\n              <RedirectHome />\n            </Box>\n          )}\n          {loading && <CircularProgress sx={{ mt: 3 }} />}\n        </Box>\n      </Stack>\n    </div>\n  );\n};\n\nexport default UploadVideo;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,EAAEC,MAAM,EAAEC,YAAY,QAAQ,IAAI;AAClD,SACEC,GAAG,EACHC,KAAK,EACLC,UAAU,EACVC,MAAM,EACNC,gBAAgB,EAChBC,WAAW,EA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}