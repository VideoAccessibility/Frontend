{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography, Card, CardContent, CardMedia, Grid } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { Tag } from './';\nimport ffmpeg from 'fluent-ffmpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCard = props => {\n  _s();\n  const [thumbnail, setThumbnail] = useState(null);\n  const [thumbnailError, setThumbnailError] = useState(false);\n  useEffect(() => {\n    // Function to extract thumbnail from the video using ffmpeg\n    ffmpeg(props.path).on('end', () => {\n      console.log('Thumbnail extracted');\n    }).on('screenshots', screenshots => {\n      // Set the extracted thumbnail as state\n      setThumbnail(screenshots[0].data);\n    }).on('error', err => {\n      console.error('Error extracting thumbnail:', err);\n      setThumbnailError(true);\n    }).screenshots({\n      count: 1,\n      size: '358x180' // Size of the thumbnail\n    });\n  }, [props.path]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: {\n        xs: '100%',\n        sm: '358px',\n        md: '270px'\n      },\n      boxShadow: 'none',\n      borderRadius: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/VideoPage\",\n      state: {\n        path: props.path,\n        video_id: props.id\n      },\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        src: thumbnailError ? '/path/to/black-image.png' : `data:image/png;base64,${thumbnail}` // Use the black image as a default if thumbnail extraction fails or path is not found\n        ,\n        alt: props.title,\n        sx: {\n          width: {\n            xs: '100%',\n            sm: '358px'\n          },\n          height: 180\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        backgroundColor: 'primary.main',\n        height: '120px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCard, \"v/o1/7N9UhrjpivntPT0vleq9os=\");\n_c = VideoCard;\nexport default VideoCard;\n\n// // This component displays all the cards\n// import React from 'react'\n// import { Link } from \"react-router-dom\"; \n// import { Typography, Card, CardContent, CardMedia, Grid} from \"@mui/material\";\n// import CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\n// import {Tag} from \"./\";\n\n// const VideoCard = (props) => (\n//   <Card \n//   sx={{ \n//     width: { xs: '100%', sm: '358px', md: \"270px\", }, \n//     boxShadow: \"none\", \n//     borderRadius: \"10px\" }}>\n//     {/* passing the video path to the video page */}\n//     <Link to=\"/VideoPage\" state={{video_id : props.id }}>\n//       <CardMedia image={props.image} \n//         sx={{ \n//           width: { xs: '100%', sm: '358px'}, \n//           height: 180 }} \n//       />\n//     </Link>\n\n//     <CardContent \n//     sx={{ \n//       backgroundColor: \"primary.main\", \n//       height: '120px' }}>\n\n//       <Link to=\"/VideoPage\" state={{ path: props.path, video_id : props.id }}>\n//         <Typography \n//         variant=\"subtitle1\" \n//         fontWeight=\"bold\" \n//         color=\"primary.dark\">\n//         {/* The slice function is  used to reduce the title length to 60*/}\n//           {props.title.slice(0, 60)}\n//         </Typography>\n\n//       </Link>\n//       <Link to=\"/VideoPage\" state={{ path: props.path, video_id : props.id }}>\n\n//         <Typography variant=\"subtitle2\" color=\"primary.dark\">\n//           {props.channelTitle}\n//           <CheckCircleIcon sx={{ fontSize: \"12px\", color: \"primary.dark\", ml: \"5px\" }} />\n//         </Typography>\n\n//         <Grid container paddingTop={1}>\n//             <Tag\n//               colour = \"secondary.main\"\n//               text = \"AI description\"\n//             />\n//         </Grid>\n\n//       </Link>\n//     </CardContent>\n//   </Card>\n// );\n\n// export default VideoCard\nvar _c;\n$RefreshReg$(_c, \"VideoCard\");","map":{"version":3,"names":["React","useState","useEffect","Link","Typography","Card","CardContent","CardMedia","Grid","CheckCircleIcon","Tag","ffmpeg","jsxDEV","_jsxDEV","VideoCard","props","_s","thumbnail","setThumbnail","thumbnailError","setThumbnailError","path","on","console","log","screenshots","data","err","error","count","size","sx","width","xs","sm","md","boxShadow","borderRadius","children","to","state","video_id","id","component","src","alt","title","height","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography, Card, CardContent, CardMedia, Grid } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { Tag } from './';\nimport ffmpeg from 'fluent-ffmpeg';\n\nconst VideoCard = (props) => {\n  const [thumbnail, setThumbnail] = useState(null);\n  const [thumbnailError, setThumbnailError] = useState(false);\n\n  useEffect(() => {\n    // Function to extract thumbnail from the video using ffmpeg\n    ffmpeg(props.path)\n      .on('end', () => {\n        console.log('Thumbnail extracted');\n      })\n      .on('screenshots', (screenshots) => {\n        // Set the extracted thumbnail as state\n        setThumbnail(screenshots[0].data);\n      })\n      .on('error', (err) => {\n        console.error('Error extracting thumbnail:', err);\n        setThumbnailError(true);\n      })\n      .screenshots({\n        count: 1,\n        size: '358x180', // Size of the thumbnail\n      });\n  }, [props.path]);\n\n  return (\n    <Card\n      sx={{\n        width: { xs: '100%', sm: '358px', md: '270px' },\n        boxShadow: 'none',\n        borderRadius: '10px',\n      }}\n    >\n      <Link to=\"/VideoPage\" state={{ path: props.path, video_id: props.id }}>\n        <CardMedia\n          component=\"img\"\n          src={thumbnailError ? '/path/to/black-image.png' : `data:image/png;base64,${thumbnail}`} // Use the black image as a default if thumbnail extraction fails or path is not found\n          alt={props.title}\n          sx={{\n            width: { xs: '100%', sm: '358px' },\n            height: 180,\n          }}\n        />\n      </Link>\n\n      <CardContent\n        sx={{\n          backgroundColor: 'primary.main',\n          height: '120px',\n        }}\n      >\n        {/* ...other card content */}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default VideoCard;\n\n\n\n// // This component displays all the cards\n// import React from 'react'\n// import { Link } from \"react-router-dom\"; \n// import { Typography, Card, CardContent, CardMedia, Grid} from \"@mui/material\";\n// import CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\n// import {Tag} from \"./\";\n\n// const VideoCard = (props) => (\n//   <Card \n//   sx={{ \n//     width: { xs: '100%', sm: '358px', md: \"270px\", }, \n//     boxShadow: \"none\", \n//     borderRadius: \"10px\" }}>\n//     {/* passing the video path to the video page */}\n//     <Link to=\"/VideoPage\" state={{video_id : props.id }}>\n//       <CardMedia image={props.image} \n//         sx={{ \n//           width: { xs: '100%', sm: '358px'}, \n//           height: 180 }} \n//       />\n//     </Link>\n\n//     <CardContent \n//     sx={{ \n//       backgroundColor: \"primary.main\", \n//       height: '120px' }}>\n\n//       <Link to=\"/VideoPage\" state={{ path: props.path, video_id : props.id }}>\n//         <Typography \n//         variant=\"subtitle1\" \n//         fontWeight=\"bold\" \n//         color=\"primary.dark\">\n//         {/* The slice function is  used to reduce the title length to 60*/}\n//           {props.title.slice(0, 60)}\n//         </Typography>\n\n//       </Link>\n//       <Link to=\"/VideoPage\" state={{ path: props.path, video_id : props.id }}>\n\n//         <Typography variant=\"subtitle2\" color=\"primary.dark\">\n//           {props.channelTitle}\n//           <CheckCircleIcon sx={{ fontSize: \"12px\", color: \"primary.dark\", ml: \"5px\" }} />\n//         </Typography>\n\n//         <Grid container paddingTop={1}>\n//             <Tag\n//               colour = \"secondary.main\"\n//               text = \"AI description\"\n//             />\n//         </Grid>\n\n//       </Link>\n//     </CardContent>\n//   </Card>\n// );\n\n// export default VideoCard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}