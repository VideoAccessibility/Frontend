{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AskAI.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Dialog from '@mui/material/Dialog';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = ['None', 'Atria', 'Callisto', 'Dione', 'Ganymede', 'Hangouts Call', 'Luna', 'Oberon', 'Phobos', 'Pyxis', 'Sedna', 'Titania', 'Triton', 'Umbriel'];\nfunction ConfirmationDialogRaw(props) {\n  _s();\n  const {\n    onClose,\n    value: valueProp,\n    open,\n    ...other\n  } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n  const handleCancel = () => {\n    onClose();\n  };\n  const handleOk = () => {\n    onClose(value);\n  };\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    sx: {\n      '& .MuiDialog-paper': {\n        width: '80%',\n        maxHeight: 435\n      }\n    },\n    maxWidth: \"xs\",\n    TransitionProps: {\n      onEntering: handleEntering\n    },\n    open: open,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Phone Ringtone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        ref: radioGroupRef,\n        \"aria-label\": \"ringtone\",\n        name: \"ringtone\",\n        value: value,\n        onChange: handleChange,\n        children: options.map(option => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: option,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 24\n          }, this),\n          label: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        autoFocus: true,\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOk,\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(ConfirmationDialogRaw, \"OMt7sSt5R/TCL4tHSUZzglY9GI4=\");\n_c = ConfirmationDialogRaw;\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\nexport default function ConfirmationDialog() {\n  _s2();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n  const handleClose = newValue => {\n    setOpen(false);\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: 360,\n      bgcolor: 'background.paper'\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      component: \"div\",\n      role: \"group\",\n      children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n        divider: true,\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Interruptions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemButton, {\n        divider: true,\n        \"aria-haspopup\": \"true\",\n        \"aria-controls\": \"ringtone-menu\",\n        \"aria-label\": \"phone ringtone\",\n        onClick: handleClickListItem,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Phone ringtone\",\n          secondary: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemButton, {\n        divider: true,\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Default notification ringtone\",\n          secondary: \"Tethys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialogRaw, {\n        id: \"ringtone-menu\",\n        keepMounted: true,\n        open: open,\n        onClose: handleClose,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n// // This is the the alert box that opens when a user wants to ask a questions regarding a scene of a video\n// import React from 'react';\n// import Swal from 'sweetalert2';\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n// import {Button,  DialogContent, DialogContentText, DialogActions} from \"@mui/material\";\n// import KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';\n\n// const AskAI = (props) => {\n//   (async () => {\n\n//     const { value: text } = await Swal.fire({\n//       input: 'textarea',\n//       inputLabel: 'Type in your question regarding the frame',\n//       inputPlaceholder: 'Type your question here...',\n//       icon: 'question',\n//       inputAttributes: {\n//         'aria-label': 'Type the question you want to ask about the frame here'\n//       },\n//       showCancelButton: false,\n//       confirmButtonText: 'Submit Question',\n//       cancelButtonText: 'Cancel',\n//     })\n\n//     if (text) {\n//       // Swal.fire(text)\n//       const token = Cookies.get(\"jwtToken\");\n//       // Define the API endpoint where you want to send the POST request\n//       const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n//       console.log(\"This is my props id\", props.videoID)\n//       const postData = {\n//         \"id\": props.videoID,\n//         \"question\":text,\n//         \"currentTime\": props.timeStamp,\n//         \"jwt\":token\n//       };\n\n//       axios\n//         .post(apiUrl, postData)\n//         .then((response) => {\n//           // Handle the successful response\n//           console.log(\"Response:\", response.data);\n\n//         })\n//         .catch((error) => {\n//           // Handle errors, if any\n//           console.error(\"Error:\", error);\n//         });\n//     }\n\n//     })()\n//   return (\n//     <div>\n//      { props.parentCallback()}\n//         {/* <DialogContent>\n//         <KeyboardVoiceIcon\n//             sx={{ fontSize: \"70px\", backgroundColor:\"#1D5B79\", color: \"#EF6262\", ml: \"5px\", borderRadius:\"100%\" , padding:\"20px\", margin: \"20px\"}}\n//         />\n//           <DialogContentText id=\"alert-dialog-description\" justifyContent={\"center\"}>\n//             Ask your questions regarding the frame here\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//         </DialogActions> */}\n//     </div>\n//   );\n// }\n\n// export default AskAI\n_s2(ConfirmationDialog, \"NJy85h6SXthY6/o2MVDs2svv5vo=\");\n_c2 = ConfirmationDialog;\nvar _c, _c2;\n$RefreshReg$(_c, \"ConfirmationDialogRaw\");\n$RefreshReg$(_c2, \"ConfirmationDialog\");","map":{"version":3,"names":["React","PropTypes","Box","Button","List","ListItemButton","ListItemText","DialogTitle","DialogContent","DialogActions","Dialog","RadioGroup","Radio","FormControlLabel","jsxDEV","_jsxDEV","options","ConfirmationDialogRaw","props","_s","onClose","value","valueProp","open","other","setValue","useState","radioGroupRef","useRef","useEffect","handleEntering","current","focus","handleCancel","handleOk","handleChange","event","target","sx","width","maxHeight","maxWidth","TransitionProps","onEntering","children","fileName","_jsxFileName","lineNumber","columnNumber","dividers","ref","name","onChange","map","option","control","label","autoFocus","onClick","_c","propTypes","func","isRequired","bool","string","ConfirmationDialog","_s2","setOpen","handleClickListItem","handleClose","newValue","bgcolor","component","role","divider","disabled","primary","secondary","id","keepMounted","_c2","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AskAI.jsx"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Dialog from '@mui/material/Dialog';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nconst options = [\n  'None',\n  'Atria',\n  'Callisto',\n  'Dione',\n  'Ganymede',\n  'Hangouts Call',\n  'Luna',\n  'Oberon',\n  'Phobos',\n  'Pyxis',\n  'Sedna',\n  'Titania',\n  'Triton',\n  'Umbriel',\n];\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleOk = () => {\n    onClose(value);\n  };\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <Dialog\n      sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 435 } }}\n      maxWidth=\"xs\"\n      TransitionProps={{ onEntering: handleEntering }}\n      open={open}\n      {...other}\n    >\n      <DialogTitle>Phone Ringtone</DialogTitle>\n      <DialogContent dividers>\n        <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"ringtone\"\n          name=\"ringtone\"\n          value={value}\n          onChange={handleChange}\n        >\n          {options.map((option) => (\n            <FormControlLabel\n              value={option}\n              key={option}\n              control={<Radio />}\n              label={option}\n            />\n          ))}\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={handleCancel}>\n          Cancel\n        </Button>\n        <Button onClick={handleOk}>Ok</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default function ConfirmationDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (newValue) => {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return (\n    <Box sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n      <List component=\"div\" role=\"group\">\n        <ListItemButton divider disabled>\n          <ListItemText primary=\"Interruptions\" />\n        </ListItemButton>\n        <ListItemButton\n          divider\n          aria-haspopup=\"true\"\n          aria-controls=\"ringtone-menu\"\n          aria-label=\"phone ringtone\"\n          onClick={handleClickListItem}\n        >\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\n        </ListItemButton>\n        <ListItemButton divider disabled>\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n        </ListItemButton>\n        <ConfirmationDialogRaw\n          id=\"ringtone-menu\"\n          keepMounted\n          open={open}\n          onClose={handleClose}\n          value={value}\n        />\n      </List>\n    </Box>\n  );\n}\n\n\n// // This is the the alert box that opens when a user wants to ask a questions regarding a scene of a video\n// import React from 'react';\n// import Swal from 'sweetalert2';\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n// import {Button,  DialogContent, DialogContentText, DialogActions} from \"@mui/material\";\n// import KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';\n\n// const AskAI = (props) => {\n//   (async () => {\n\n//     const { value: text } = await Swal.fire({\n//       input: 'textarea',\n//       inputLabel: 'Type in your question regarding the frame',\n//       inputPlaceholder: 'Type your question here...',\n//       icon: 'question',\n//       inputAttributes: {\n//         'aria-label': 'Type the question you want to ask about the frame here'\n//       },\n//       showCancelButton: false,\n//       confirmButtonText: 'Submit Question',\n//       cancelButtonText: 'Cancel',\n//     })\n    \n//     if (text) {\n//       // Swal.fire(text)\n//       const token = Cookies.get(\"jwtToken\");\n//       // Define the API endpoint where you want to send the POST request\n//       const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n//       console.log(\"This is my props id\", props.videoID)\n//       const postData = {\n//         \"id\": props.videoID,\n//         \"question\":text,\n//         \"currentTime\": props.timeStamp,\n//         \"jwt\":token\n//       };\n  \n//       axios\n//         .post(apiUrl, postData)\n//         .then((response) => {\n//           // Handle the successful response\n//           console.log(\"Response:\", response.data);\n\n//         })\n//         .catch((error) => {\n//           // Handle errors, if any\n//           console.error(\"Error:\", error);\n//         });\n//     }\n    \n//     })()\n//   return (\n//     <div>\n//      { props.parentCallback()}\n//         {/* <DialogContent>\n//         <KeyboardVoiceIcon\n//             sx={{ fontSize: \"70px\", backgroundColor:\"#1D5B79\", color: \"#EF6262\", ml: \"5px\", borderRadius:\"100%\" , padding:\"20px\", margin: \"20px\"}}\n//         />\n//           <DialogContentText id=\"alert-dialog-description\" justifyContent={\"center\"}>\n//             Ask your questions regarding the frame here\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//         </DialogActions> */}\n//     </div>\n//   );\n// }\n\n// export default AskAI"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}