{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Stack, Typography, Grid, Button } from \"@mui/material\";\nimport { Sidebar, Comment, AskAI, Navbar, VideoPlayer, ChangeRating, Player } from \"./\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport formatTime from \"../utils/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPage = () => {\n  _s();\n  const [isLoading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [played, setPlayed] = useState(0);\n  const [desc, setDesc] = useState();\n  const [descUser, setDescUser] = useState();\n  const [video, setVideo] = useState([]);\n\n  // these are some error handling checks that I am doing\n  const [noDescription, setNoDescription] = useState(false);\n  const location = useLocation();\n  const {\n    video_id,\n    path\n  } = location.state;\n  const apiUrl = \"http://127.0.0.1:8000/api/video/\";\n  const token = Cookies.get(\"jwtToken\");\n  const params = {\n    id: video_id\n  };\n  const url = \"http://127.0.0.1:8000/descriptions/\";\n  const parameters = {\n    video_id: video_id\n  };\n  useEffect(() => {\n    axios.get(apiUrl, {\n      params: params\n    }).then(response => {\n      setVideo(response.data.video);\n      console.log(\"Received video data\", response.data.video);\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get(url, {\n      params: parameters\n    }).then(response => {\n      console.log(\"Received description data\", response.data.descriptions);\n      const descriptions = response.data.descriptions.map(item => {\n        return JSON.parse(item);\n      });\n      setDesc(descriptions);\n      if (descriptions.length > 0) {\n        setNoDescription(true);\n      }\n      // this just gets the usernames for all the user and then display the descriptions from only one user\n      const uniqueUsernames = Array.from(new Set(descriptions.map(description => description.username)));\n      setDescUser(descriptions.filter(description => description.username === uniqueUsernames[0]));\n      setLoading(false);\n    }).catch(err => {\n      console.log(\"Not receiving data description data\", err);\n      setLoading(false);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleCallback = progressData => {\n    setPlayed(progressData);\n  };\n  const handleChangeUserCallback = filteredDescriptions => {\n    setDescUser(filteredDescriptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        flexDirection: {\n          sx: \"column\",\n          md: \"row\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: {\n            sx: \"auto\",\n            md: \"100vh\"\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {\n          selectedCategory: selectedCategory,\n          setSelectedCategory: setSelectedCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        p: 3,\n        sx: {\n          overflowY: \"auto\",\n          height: \"90vh\",\n          flex: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: [!isLoading && noDescription && /*#__PURE__*/_jsxDEV(VideoPlayer, {\n            path: video.video_path,\n            title: video.title,\n            descrip: descUser,\n            parentCallback: handleCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), noDescription && /*#__PURE__*/_jsxDEV(ChangeRating, {\n            descriptions: desc,\n            parentCallback: handleChangeUserCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), !noDescription && /*#__PURE__*/_jsxDEV(Player, {\n            path: video.video_path,\n            parentCallback: handleCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), !noDescription && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"primary.dark\",\n              paddingTop: 2,\n              children: video.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            p: 2,\n            sx: {\n              backgroundColor: \"primary.main\",\n              borderRadius: \"5px\",\n              paddingBottom: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: \"primary.dark\"\n              },\n              children: \"InfoBot Q&A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                overflow: \"scroll\",\n                height: {\n                  md: \"55vh\"\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(Comment, {\n                videoID: video_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), open && /*#__PURE__*/_jsxDEV(AskAI, {\n            videoID: video_id,\n            timeStamp: played,\n            parentCallback: handleClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            p: 2,\n            sx: {\n              backgroundColor: \"primary.main\",\n              borderRadius: \"5px\",\n              margin: \"20px 0\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: \"primary.dark\"\n              },\n              children: \"More Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                backgroundColor: \"secondary.main\",\n                color: \"white\",\n                width: \"100%\",\n                marginTop: \"10px\"\n              },\n              className: \"category-btn\",\n              onClick: handleClickOpen,\n              children: [\"Ask infobot at \", formatTime(played)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/AddDescriptions\",\n              state: {\n                video_id: video_id,\n                video_path: video.video_path\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  backgroundColor: \"secondary.main\",\n                  color: \"white\",\n                  width: \"100%\",\n                  marginTop: \"10px\"\n                },\n                className: \"category-btn\",\n                children: \"Add description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), noDescription && /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/EditDescriptions\",\n              state: {\n                video_id: video_id,\n                video_path: video.video_path\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  backgroundColor: \"secondary.main\",\n                  color: \"white\",\n                  width: \"100%\",\n                  marginTop: \"10px\"\n                },\n                className: \"category-btn\",\n                children: \"Edit descriptions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPage, \"K6S3TU21jptsgb3OLq139D1evhw=\", false, function () {\n  return [useLocation];\n});\n_c = VideoPage;\nexport default VideoPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import { Box, Stack, Typography, Grid, Button, Dialog } from \"@mui/material\";\n// import {\n//   Sidebar,\n//   Comment,\n//   Player,\n//   AskAI,\n//   Navbar,\n//   TextToSpeech,\n//   DisplayDescriptions,\n//   ChatGPT,\n// } from \"./\";\n// import Comments from \"../data/comments\";\n// import { useLocation, Link } from \"react-router-dom\";\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n// import { getDescriptions } from \"../utils/functions.js\";\n// import VideoPlayer from \"./VideoPlayer\";\n\n// const VideoPage = () => {\n//   const [isLoading, setLoading] = useState(true);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n//   const [open, setOpen] = React.useState(false);\n//   const [played, setPlayed] = useState();\n//   const [desc, setDesc] = useState();\n//   // If we want to pause the video when the description is played it will need to be handled here\n//   const [pauseVideo, setPauseVideo] = useState(false);\n//   // using use location to get the props data along with the link\n//   const location = useLocation();\n//   const { video_id } = location.state;\n\n//   const [video, setVideo] = useState([]);\n//   const apiUrl = \"http://127.0.0.1:8000/api/video/\";\n//   const token = Cookies.get(\"jwtToken\");\n\n//   const params = {\n//     id: video_id,\n//     jwt: token,\n//   };\n//   const url = \"http://127.0.0.1:8000/descriptions/\";;\n//   const parameters = {\n//     video_id: video_id,\n//     jwt: token,\n//   };\n\n//   useEffect(() => {\n//     axios\n//       .get(apiUrl, {\n//         params: params,\n//       })\n//       .then((response) => {\n//         setVideo(response.data.video);\n//         console.log(\"This is what I am recieving\", response.data.video);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n\n//     axios\n//       .get(url, {\n//         params: parameters,\n//       })\n//       .then((response) => {\n//         console.log(\"This is what I am recieving\", response.data.video);\n//         setDesc(\n//           response.data.descriptions.map((item) => {\n//             return JSON.parse(item);\n//           })\n//         );\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         console.log(\"Not recieving data\", err);\n//       });\n//   }, []);\n\n//   if (isLoading) {\n//     return <div className=\"App\">Loading...</div>;\n//   }\n\n//   // console.log(\"This is the video\", video.video_path);\n//   console.log(\"This is what I am recieving in display description\", desc);\n\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n\n//   // this function just retrives the time the video is played\n//   const handleCallback = (progressData) => {\n//     setPlayed(progressData);\n//   };\n\n//   return (\n//     // The box is the sidebar\n//     <div>\n//       <Navbar />\n//       <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//         <Box sx={{ height: { sx: \"auto\", md: \"100vh\" } }}>\n//           <Sidebar\n//             selectedCategory={selectedCategory}\n//             setSelectedCategory={setSelectedCategory}\n//           />\n//         </Box>\n\n//         {/* This container consists of the video player, the video information for now is hardcoded*/}\n//         <Grid\n//           container\n//           spacing={2}\n//           p={3}\n//           sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}\n//         >\n//           <Grid item xs={12} md={8}>\n//           <VideoPlayer path={video.video_path} title={video.title}/>\n//           </Grid>\n\n//           {/* This grid represent the comments asked info, showing this next to the video */}\n//           <Grid item xs={6} md={4}>\n//             <Box\n//               p={2}\n//               sx={{\n//                 backgroundColor: \"primary.main\",\n//                 borderRadius: \"5px\",\n//                 paddingBottom: \"20px\",\n//               }}\n//             >\n//               <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                 InfoBot Q&A\n//               </Typography>\n//               <hr />\n//               <Box sx={{ overflow: \"scroll\", height: { md: \"55vh\" } }}>\n//                 {Comments.map((item) => (\n//                   <Comment\n//                     id={item.id}\n//                     username={item.user}\n//                     question={item.question}\n//                     answer={item.answer}\n//                     timeStamp={item.timestamp}\n//                   />\n//                 ))}\n//               </Box>\n//             </Box>\n\n//             {open && (\n//               <AskAI\n//                 videoID={video_id}\n//                 timeStamp={played}\n//                 parentCallback={handleClose}\n//               />\n//             )}\n\n//             <Box\n//               p={2}\n//               sx={{\n//                 backgroundColor: \"primary.main\",\n//                 borderRadius: \"5px\",\n//                 margin: \"20px 0\",\n//               }}\n//             >\n//               <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                 InfoBot Q&A\n//               </Typography>\n//               <hr />\n//               <Button\n//                 sx={{\n//                   backgroundColor: \"secondary.main\",\n//                   color: \"white\",\n//                   width: \"100%\",\n//                   marginTop: \"10px\",\n//                 }}\n//                 className=\"category-btn\"\n//                 onClick={handleClickOpen}\n//               >\n//                 Ask infobot at {played}\n//               </Button>\n//               <Link\n//                 to=\"/EditDescriptionPage\"\n//                 state={{ video_id: video_id, video_path: video.video_path }}\n//               >\n//                 <Button\n//                   sx={{\n//                     backgroundColor: \"secondary.main\",\n//                     color: \"white\",\n//                     width: \"100%\",\n//                     marginTop: \"10px\",\n//                   }}\n//                   className=\"category-btn\"\n//                 >\n//                   Add description\n//                 </Button>\n//               </Link>\n//               <Button\n//                 sx={{\n//                   backgroundColor: \"secondary.main\",\n//                   color: \"white\",\n//                   width: \"100%\",\n//                   marginTop: \"10px\",\n//                 }}\n//                 className=\"category-btn\"\n//               >\n//                 Generate AI description\n//               </Button>\n//             </Box>\n//           </Grid>\n//         </Grid>\n//       </Stack>\n//     </div>\n//   );\n// };\n\n// export default VideoPage;\nvar _c;\n$RefreshReg$(_c, \"VideoPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Stack","Typography","Grid","Button","Sidebar","Comment","AskAI","Navbar","VideoPlayer","ChangeRating","Player","useLocation","Link","axios","Cookies","formatTime","jsxDEV","_jsxDEV","VideoPage","_s","isLoading","setLoading","selectedCategory","setSelectedCategory","open","setOpen","played","setPlayed","desc","setDesc","descUser","setDescUser","video","setVideo","noDescription","setNoDescription","location","video_id","path","state","apiUrl","token","get","params","id","url","parameters","then","response","data","console","log","catch","err","descriptions","map","item","JSON","parse","length","uniqueUsernames","Array","from","Set","description","username","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClickOpen","handleClose","handleCallback","progressData","handleChangeUserCallback","filteredDescriptions","sx","flexDirection","md","height","container","spacing","p","overflowY","flex","xs","video_path","title","descrip","parentCallback","variant","color","paddingTop","backgroundColor","borderRadius","paddingBottom","overflow","videoID","timeStamp","margin","width","marginTop","onClick","to","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, Stack, Typography, Grid, Button } from \"@mui/material\";\nimport {\n  Sidebar,\n  Comment,\n  AskAI,\n  Navbar,\n  VideoPlayer,\n  ChangeRating,\n  Player,\n} from \"./\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport formatTime from \"../utils/functions\";\n\nconst VideoPage = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [played, setPlayed] = useState(0);\n  const [desc, setDesc] = useState();\n  const [descUser, setDescUser] = useState();\n  const [video, setVideo] = useState([]);\n\n  // these are some error handling checks that I am doing\n  const [noDescription, setNoDescription] = useState(false);\n\n  const location = useLocation();\n  const { video_id, path } = location.state;\n\n  const apiUrl = \"http://127.0.0.1:8000/api/video/\";\n  const token = Cookies.get(\"jwtToken\");\n\n  const params = { id: video_id };\n  const url = \"http://127.0.0.1:8000/descriptions/\";\n  const parameters = { video_id: video_id };\n\n  useEffect(() => {\n    axios\n      .get(apiUrl, { params: params })\n      .then((response) => {\n        setVideo(response.data.video);\n        console.log(\"Received video data\", response.data.video);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    axios\n      .get(url, { params: parameters })\n      .then((response) => {\n        console.log(\"Received description data\", response.data.descriptions);\n        const descriptions = response.data.descriptions.map((item) => {\n          return JSON.parse(item);\n        });\n        setDesc(descriptions);\n        if (descriptions.length > 0) {\n          setNoDescription(true);\n        }\n        // this just gets the usernames for all the user and then display the descriptions from only one user\n        const uniqueUsernames = Array.from(\n          new Set(descriptions.map((description) => description.username))\n        );\n        setDescUser(\n          descriptions.filter(\n            (description) => description.username === uniqueUsernames[0]\n          )\n        );\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(\"Not receiving data description data\", err);\n        setLoading(false);\n      });\n  }, []);\n\n  if (isLoading) {\n    return <div className=\"App\">Loading...</div>;\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCallback = (progressData) => {\n    setPlayed(progressData);\n  };\n\n  const handleChangeUserCallback = (filteredDescriptions) => {\n    setDescUser(filteredDescriptions);\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n        <Box sx={{ height: { sx: \"auto\", md: \"100vh\" } }}>\n          <Sidebar\n            selectedCategory={selectedCategory}\n            setSelectedCategory={setSelectedCategory}\n          />\n        </Box>\n\n        <Grid\n          container\n          spacing={2}\n          p={3}\n          sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}\n        >\n          <Grid item xs={12} md={8}>\n            {!isLoading && noDescription && (\n              <VideoPlayer\n                path={video.video_path}\n                title={video.title}\n                descrip={descUser}\n                parentCallback={handleCallback}\n              />\n            )}\n            {noDescription && (\n              <ChangeRating\n                descriptions={desc}\n                parentCallback={handleChangeUserCallback}\n              />\n            )}\n            {!noDescription && (\n              <Player path={video.video_path} parentCallback={handleCallback} />\n            )}\n          {!noDescription && <div>\n            <Typography variant=\"h6\" color={\"primary.dark\"} paddingTop={2}>\n              {video.title}\n            </Typography>\n            <hr />\n          </div>}\n          </Grid>\n\n          {/* This grid is to showcase all the comments */}\n          <Grid item xs={6} md={4}>\n            <Box\n              p={2}\n              sx={{\n                backgroundColor: \"primary.main\",\n                borderRadius: \"5px\",\n                paddingBottom: \"20px\",\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n                InfoBot Q&A\n              </Typography>\n              <hr />\n              <Box sx={{ overflow: \"scroll\", height: { md: \"55vh\" } }}>\n                <Comment videoID={video_id} />\n              </Box>\n            </Box>\n\n            {open && (\n              <AskAI\n                videoID={video_id}\n                timeStamp={played}\n                parentCallback={handleClose}\n              />\n            )}\n\n            <Box\n              p={2}\n              sx={{\n                backgroundColor: \"primary.main\",\n                borderRadius: \"5px\",\n                margin: \"20px 0\",\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n                More Options\n              </Typography>\n              <hr />\n              <Button\n                sx={{\n                  backgroundColor: \"secondary.main\",\n                  color: \"white\",\n                  width: \"100%\",\n                  marginTop: \"10px\",\n                }}\n                className=\"category-btn\"\n                onClick={handleClickOpen}\n              >\n                Ask infobot at {formatTime(played)}\n                \n              </Button>\n              <Link\n                to=\"/AddDescriptions\"\n                state={{ video_id: video_id, video_path: video.video_path }}\n              >\n                <Button\n                  sx={{\n                    backgroundColor: \"secondary.main\",\n                    color: \"white\",\n                    width: \"100%\",\n                    marginTop: \"10px\",\n                  }}\n                  className=\"category-btn\"\n                >\n                  Add description\n                </Button>\n              </Link>\n              {noDescription && (\n                <Link\n                  to=\"/EditDescriptions\"\n                  state={{ video_id: video_id, video_path: video.video_path }}\n                >\n                  <Button\n                    sx={{\n                      backgroundColor: \"secondary.main\",\n                      color: \"white\",\n                      width: \"100%\",\n                      marginTop: \"10px\",\n                    }}\n                    className=\"category-btn\"\n                  >\n                    Edit descriptions\n                  </Button>\n                </Link>\n              )}\n            </Box>\n          </Grid>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default VideoPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import { Box, Stack, Typography, Grid, Button, Dialog } from \"@mui/material\";\n// import {\n//   Sidebar,\n//   Comment,\n//   Player,\n//   AskAI,\n//   Navbar,\n//   TextToSpeech,\n//   DisplayDescriptions,\n//   ChatGPT,\n// } from \"./\";\n// import Comments from \"../data/comments\";\n// import { useLocation, Link } from \"react-router-dom\";\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n// import { getDescriptions } from \"../utils/functions.js\";\n// import VideoPlayer from \"./VideoPlayer\";\n\n// const VideoPage = () => {\n//   const [isLoading, setLoading] = useState(true);\n//   const [selectedCategory, setSelectedCategory] = useState(null);\n//   const [open, setOpen] = React.useState(false);\n//   const [played, setPlayed] = useState();\n//   const [desc, setDesc] = useState();\n//   // If we want to pause the video when the description is played it will need to be handled here\n//   const [pauseVideo, setPauseVideo] = useState(false);\n//   // using use location to get the props data along with the link\n//   const location = useLocation();\n//   const { video_id } = location.state;\n\n//   const [video, setVideo] = useState([]);\n//   const apiUrl = \"http://127.0.0.1:8000/api/video/\";\n//   const token = Cookies.get(\"jwtToken\");\n\n//   const params = {\n//     id: video_id,\n//     jwt: token,\n//   };\n//   const url = \"http://127.0.0.1:8000/descriptions/\";;\n//   const parameters = {\n//     video_id: video_id,\n//     jwt: token,\n//   };\n\n//   useEffect(() => {\n//     axios\n//       .get(apiUrl, {\n//         params: params,\n//       })\n//       .then((response) => {\n//         setVideo(response.data.video);\n//         console.log(\"This is what I am recieving\", response.data.video);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n\n//     axios\n//       .get(url, {\n//         params: parameters,\n//       })\n//       .then((response) => {\n//         console.log(\"This is what I am recieving\", response.data.video);\n//         setDesc(\n//           response.data.descriptions.map((item) => {\n//             return JSON.parse(item);\n//           })\n//         );\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         console.log(\"Not recieving data\", err);\n//       });\n//   }, []);\n\n//   if (isLoading) {\n//     return <div className=\"App\">Loading...</div>;\n//   }\n\n//   // console.log(\"This is the video\", video.video_path);\n//   console.log(\"This is what I am recieving in display description\", desc);\n\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n\n//   // this function just retrives the time the video is played\n//   const handleCallback = (progressData) => {\n//     setPlayed(progressData);\n//   };\n\n//   return (\n//     // The box is the sidebar\n//     <div>\n//       <Navbar />\n//       <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//         <Box sx={{ height: { sx: \"auto\", md: \"100vh\" } }}>\n//           <Sidebar\n//             selectedCategory={selectedCategory}\n//             setSelectedCategory={setSelectedCategory}\n//           />\n//         </Box>\n\n//         {/* This container consists of the video player, the video information for now is hardcoded*/}\n//         <Grid\n//           container\n//           spacing={2}\n//           p={3}\n//           sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}\n//         >\n//           <Grid item xs={12} md={8}>\n//           <VideoPlayer path={video.video_path} title={video.title}/>\n//           </Grid>\n\n//           {/* This grid represent the comments asked info, showing this next to the video */}\n//           <Grid item xs={6} md={4}>\n//             <Box\n//               p={2}\n//               sx={{\n//                 backgroundColor: \"primary.main\",\n//                 borderRadius: \"5px\",\n//                 paddingBottom: \"20px\",\n//               }}\n//             >\n//               <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                 InfoBot Q&A\n//               </Typography>\n//               <hr />\n//               <Box sx={{ overflow: \"scroll\", height: { md: \"55vh\" } }}>\n//                 {Comments.map((item) => (\n//                   <Comment\n//                     id={item.id}\n//                     username={item.user}\n//                     question={item.question}\n//                     answer={item.answer}\n//                     timeStamp={item.timestamp}\n//                   />\n//                 ))}\n//               </Box>\n//             </Box>\n\n//             {open && (\n//               <AskAI\n//                 videoID={video_id}\n//                 timeStamp={played}\n//                 parentCallback={handleClose}\n//               />\n//             )}\n\n//             <Box\n//               p={2}\n//               sx={{\n//                 backgroundColor: \"primary.main\",\n//                 borderRadius: \"5px\",\n//                 margin: \"20px 0\",\n//               }}\n//             >\n//               <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                 InfoBot Q&A\n//               </Typography>\n//               <hr />\n//               <Button\n//                 sx={{\n//                   backgroundColor: \"secondary.main\",\n//                   color: \"white\",\n//                   width: \"100%\",\n//                   marginTop: \"10px\",\n//                 }}\n//                 className=\"category-btn\"\n//                 onClick={handleClickOpen}\n//               >\n//                 Ask infobot at {played}\n//               </Button>\n//               <Link\n//                 to=\"/EditDescriptionPage\"\n//                 state={{ video_id: video_id, video_path: video.video_path }}\n//               >\n//                 <Button\n//                   sx={{\n//                     backgroundColor: \"secondary.main\",\n//                     color: \"white\",\n//                     width: \"100%\",\n//                     marginTop: \"10px\",\n//                   }}\n//                   className=\"category-btn\"\n//                 >\n//                   Add description\n//                 </Button>\n//               </Link>\n//               <Button\n//                 sx={{\n//                   backgroundColor: \"secondary.main\",\n//                   color: \"white\",\n//                   width: \"100%\",\n//                   marginTop: \"10px\",\n//                 }}\n//                 className=\"category-btn\"\n//               >\n//                 Generate AI description\n//               </Button>\n//             </Box>\n//           </Grid>\n//         </Grid>\n//       </Stack>\n//     </div>\n//   );\n// };\n\n// export default VideoPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}