{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Comment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, Grid, Chip } from \"@mui/material\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport formatTime from \"../utils/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = props => {\n  _s();\n  const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n  const token = Cookies.get(\"jwtToken\");\n  const [comments, setComments] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  // error handling check\n  const [noComments, setNoComments] = useState(false);\n  useEffect(() => {\n    const params = {\n      id: props.videoID\n    };\n    axios.get(apiUrl, {\n      params: params\n    }).then(response => {\n      if (!response.data.questions === \"NOT_FOUND\") {\n        console.log(\"am i even coming here\");\n        setNoComments(true);\n      } else {\n        console.log(\"Response data:\", response.data.questions);\n        setComments(response.data.questions.map(item => {\n          return JSON.parse(item);\n        }));\n      }\n      // if (response.data.questions.length === 0 || !response.data){\n      //     console.log(\"am i even coming here\")\n      //     setNoComments(true)\n      // }\n      setLoading(false);\n      // console.log(\"Received comments data:\", response.data.questions);\n    }).catch(err => {\n      console.log(\"Error fetching comments:\", err);\n      setLoading(false);\n    });\n  }, []); // Dependency array ensures the effect runs when token changes\n  console.log(isLoading, noComments);\n  if (isLoading || noComments) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle2\",\n      sx: {\n        color: \"#468B97\"\n      },\n      children: \"No comments to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  // Reverse the array to display comments in a Last In, First Out (LIFO) order\n  const reversedComments = [...comments].reverse();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: reversedComments.map((comment, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      p: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        md: 10,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          sx: {\n            color: \"#468B97\"\n          },\n          children: [\"@\", comment.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          sx: {\n            color: \"primary.dark\"\n          },\n          children: [\"Question: \", comment.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          sx: {\n            color: \"primary.dark\"\n          },\n          children: [\"Answer: \", comment.answer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(Chip, {\n          label: formatTime(parseInt(comment.time_stamp)),\n          sx: {\n            backgroundColor: \"secondary.light\",\n            color: \"white\",\n            marginBottom: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"fByQuv2xbQIIKhGysAuSFxEgK30=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Grid","Chip","axios","Cookies","formatTime","jsxDEV","_jsxDEV","Comment","props","_s","apiUrl","token","get","comments","setComments","isLoading","setLoading","noComments","setNoComments","params","id","videoID","then","response","data","questions","console","log","map","item","JSON","parse","catch","err","variant","sx","color","children","fileName","_jsxFileName","lineNumber","columnNumber","reversedComments","reverse","comment","index","container","p","xs","md","username","question","answer","label","parseInt","time_stamp","backgroundColor","marginBottom","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Comment.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography, Grid, Chip } from \"@mui/material\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport formatTime from \"../utils/functions\";\n\nconst Comment = (props) => {\n  const apiUrl = \"http://127.0.0.1:8000/api/ask_question/\";\n  const token = Cookies.get(\"jwtToken\");\n  const [comments, setComments] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  // error handling check\n  const [noComments, setNoComments] = useState(false);\n\n  useEffect(() => {\n    const params = {\n      id: props.videoID,\n    };\n\n    axios\n      .get(apiUrl, {\n        params: params,\n      })\n      .then((response) => {\n        if (!response.data.questions === \"NOT_FOUND\"){\n          console.log(\"am i even coming here\")\n          setNoComments(true)\n      }\n      else{\n        console.log(\"Response data:\", response.data.questions);\n        setComments(\n          response.data.questions.map((item) => {\n            return JSON.parse(item);\n          })\n        );\n      }\n        // if (response.data.questions.length === 0 || !response.data){\n        //     console.log(\"am i even coming here\")\n        //     setNoComments(true)\n        // }\n        setLoading(false);\n        // console.log(\"Received comments data:\", response.data.questions);\n      })\n      .catch((err) => {\n        console.log(\"Error fetching comments:\", err);\n        setLoading(false);\n      });\n  }, []); // Dependency array ensures the effect runs when token changes\n  console.log(isLoading, noComments)\n  if (isLoading || noComments) {\n    return (\n      <Typography variant=\"subtitle2\" sx={{ color: \"#468B97\" }}>\n        No comments to display\n      </Typography>\n    );\n  }\n  // Reverse the array to display comments in a Last In, First Out (LIFO) order\n  const reversedComments = [...comments].reverse();\n\n  return (\n    <div>\n      {reversedComments.map((comment, index) => (\n        <Grid container p={2} key={index}>\n          <Grid item xs={8} md={10}>\n            <Typography variant=\"subtitle2\" sx={{ color: \"#468B97\" }}>\n              @{comment.username}\n            </Typography>\n            <Typography variant=\"subtitle2\" sx={{ color: \"primary.dark\" }}>\n              Question: {comment.question}\n            </Typography>\n            <Typography variant=\"subtitle2\" sx={{ color: \"primary.dark\" }}>\n              Answer: {comment.answer}\n            </Typography>\n          </Grid>\n          <Grid item xs={4} md={2}>\n            <Chip\n              label={formatTime(parseInt(comment.time_stamp))}\n              sx={{\n                backgroundColor: \"secondary.light\",\n                color: \"white\",\n                marginBottom: \"20px\",\n              }}\n            />\n          </Grid>\n        </Grid>\n      ))}\n    </div>\n  );\n};\n\nexport default Comment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}