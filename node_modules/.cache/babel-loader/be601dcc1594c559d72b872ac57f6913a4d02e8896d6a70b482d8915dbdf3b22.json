{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/UploadVideo.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { Sidebar, Navbar } from \"./\";\n// import {\n//   Box,\n//   Stack,\n//   Typography,\n//   Button,\n//   CircularProgress,\n//   FormControl,\n//   RadioGroup,\n//   FormControlLabel,\n//   Radio,\n//   TextField,\n// } from \"@mui/material\";\n// import FileUploadIcon from \"@mui/icons-material/FileUpload\";\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n\n// const UploadVideo = () => {\n//   const [selectedCategory, setSelectedCategory] = useState(\"Upload\");\n//   const [loading, setLoading] = useState(false);\n//   const [heading, setHeading] = useState(\"Upload a video file\");\n//   const [smallHeading, setSmallHeading] = useState(\n//     \"Once uploaded and described, your video will be visible on homepage\"\n//   );\n//   const [visibility, setVisibility] = useState(\"private\");\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [videoTitle, setVideoTitle] = useState(\"\");\n\n//   const handleVisibilityChange = (event) => {\n//     setVisibility(event.target.value);\n//   };\n\n//   const handleFileChange = (event) => {\n//     setSelectedFile(event.target.files[0]);\n//     console.log(\"am i coming here????\")\n//     handleFileUpload()\n//   };\n\n//   const handleTitleChange = (event) => {\n//     setVideoTitle(event.target.value);\n//   };\n\n//   const handleFileUpload = () => {\n//     // if (!videoTitle.trim()) {\n//     //   alert(\"Please enter a video title.\");\n//     //   return;\n//     // }\n\n//     // if (!selectedFile) {\n//     //   alert(\"Please select a video file.\");\n//     //   return;\n//     // }\n\n//     console.log(\"I am coming here\")\n//     const formData = new FormData();\n//     formData.append(\"file\", selectedFile);\n//     formData.append(\"title\", videoTitle);\n//     formData.append(\"visibility\", visibility);\n\n//     const token = Cookies.get(\"jwtToken\");\n//     const apiUrl = \"http://127.0.0.1:8000/api/upload/\";\n\n//     axios\n//       .post(apiUrl, formData, {\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       })\n//       .then((response) => {\n//         // Handle the successful response\n//         console.log(\"Response:\", response.data);\n//         setHeading(\"Your file is being loaded, do not refresh the page\");\n//         setSmallHeading(\n//           \"You will be redirected to the video page when the video is described\"\n//         );\n//         setLoading(true);\n//       })\n//       .catch((error) => {\n//         // Handle errors, if any\n//         console.error(\"Error:\", error);\n//         setHeading(\"Error in uploading your file, please try again\");\n//         setSmallHeading(\"Make sure you are uploading an mp4 file\");\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//         <Box\n//           sx={{\n//             height: { sx: \"auto\", md: \"100vh\" },\n//             paddingRight: { sx: 0, md: 2 },\n//           }}\n//         >\n//           <Sidebar\n//             selectedCategory={selectedCategory}\n//             setSelectedCategory={setSelectedCategory}\n//           />\n//         </Box>\n\n//         <Stack\n//           spacing={2}\n//           paddingTop={15}\n//           width={\"100%\"}\n//           justifyContent={\"flex-start\"}\n//           alignItems={\"center\"}\n//         >\n//           <Typography\n//             variant=\"h4\"\n//             fontWeight=\"bold\"\n//             paddingTop={3}\n//             color=\"primary.dark\"\n//           >\n//             {heading}\n//           </Typography>\n//           <Typography variant=\"caption\" fontWeight=\"bold\" color=\"primary.dark\">\n//             {smallHeading}\n//           </Typography>\n//           <Typography\n//             variant=\"caption\"\n//             fontWeight=\"bold\"\n//             color=\"secondary.main\"\n//           >\n//             Choose whether you would like the video to be public or private. The\n//             video is private by default.\n//           </Typography>\n//           <FormControl component=\"fieldset\">\n//             <RadioGroup\n//               row\n//               aria-label=\"visibility\"\n//               name=\"visibility\"\n//               value={visibility}\n//               onChange={handleVisibilityChange}\n//             >\n//               <FormControlLabel\n//                 value=\"private\"\n//                 control={<Radio />}\n//                 label=\"Private\"\n//               />\n//               <FormControlLabel\n//                 value=\"public\"\n//                 control={<Radio />}\n//                 label=\"Public\"\n//               />\n//             </RadioGroup>\n//           </FormControl>\n\n//           <TextField\n//             label=\"Video Title\"\n//             variant=\"outlined\"\n//             sx={{ width: \"50%\" }}\n//             margin=\"normal\"\n//             value={videoTitle}\n//             onChange={handleTitleChange}\n//           />\n\n//           {!loading && (\n//             <label htmlFor=\"fileInput\">\n//               <Button\n//                 component=\"span\"\n//                 sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                 className=\"category-btn\"\n//                 startIcon={<FileUploadIcon />}\n//               >\n//                 Upload Video File\n//               </Button>\n//               <input\n//                 type=\"file\"\n//                 accept=\".mp4\"\n//                 id=\"fileInput\"\n//                 style={{ display: \"none\" }}\n//                 onChange={handleFileChange}\n//               />\n//             </label>\n//           )}\n\n//           {loading && <CircularProgress />}\n//         </Stack>\n//       </Stack>\n//     </div>\n//   );\n// };\n\n// export default UploadVideo;\n\nimport React, { useState } from \"react\";\nimport { Sidebar, Navbar } from \"./\";\nimport { Box, Stack, Typography, Button, CircularProgress } from \"@mui/material\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadVideo = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(\"Upload\");\n  const [loading, setLoading] = React.useState(false);\n  const [heading, setHeading] = React.useState(\"Drag and drop a file you want to upload\");\n  const [smallHeading, setSmallHeading] = React.useState(\"Once uploaded and described, your video will be visible on homepage\");\n  const [selectedFile, setSelectedFile] = useState();\n  const handleFileUpload = e => {\n    if (!e.target.files) {\n      return;\n    }\n    setSelectedFile(e.target.files[0]);\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    const token = Cookies.get(\"jwtToken\");\n\n    // Define the API endpoint where you want to send the POST request\n    const apiUrl = \"http://127.0.0.1:8000/api/upload/\";\n    axios.post(apiUrl, formData, token).then(response => {\n      // Handle the successful response\n      console.log(\"Response:\", response.data);\n      setHeading(\"Your file is being loaded, do not refresh page the page\");\n      setSmallHeading(\"You will be redirected to the video page when the video is described\");\n      setLoading(true);\n    }).catch(error => {\n      // Handle errors, if any\n      console.error(\"Error:\", error);\n      setHeading(\"Error in uploading your file, please try again\");\n      setSmallHeading(\"Make sure, you are uploading an mp4 file\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        flexDirection: {\n          sx: \"column\",\n          md: \"row\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: {\n            sx: \"auto\",\n            md: \"100vh\"\n          },\n          paddingRight: {\n            sx: 0,\n            md: 2\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {\n          selectedCategory: selectedCategory,\n          setSelectedCategory: setSelectedCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        paddingTop: 15,\n        width: \"100%\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        children: [!loading && /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            backgroundColor: \"secondary.main\",\n            color: \"white\"\n          },\n          className: \"category-btn\",\n          component: \"label\",\n          startIcon: /*#__PURE__*/_jsxDEV(FileUploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 26\n          }, this),\n          disabled: loading,\n          children: [\"Upload Video File\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".mp4\",\n            hidden: true,\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          fontWeight: \"bold\",\n          paddingTop: 3,\n          color: \"primary.dark\",\n          children: heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          fontWeight: \"bold\",\n          color: \"primary.dark\",\n          children: smallHeading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadVideo, \"XiCgE+08F9bI1mFYtz9V9kZwBEo=\");\n_c = UploadVideo;\nexport default UploadVideo;\nvar _c;\n$RefreshReg$(_c, \"UploadVideo\");","map":{"version":3,"names":["React","useState","Sidebar","Navbar","Box","Stack","Typography","Button","CircularProgress","FileUploadIcon","axios","Cookies","jsxDEV","_jsxDEV","UploadVideo","_s","selectedCategory","setSelectedCategory","loading","setLoading","heading","setHeading","smallHeading","setSmallHeading","selectedFile","setSelectedFile","handleFileUpload","e","target","files","formData","FormData","append","token","get","apiUrl","post","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexDirection","md","height","paddingRight","spacing","paddingTop","width","justifyContent","alignItems","backgroundColor","color","className","component","startIcon","disabled","type","accept","hidden","onChange","variant","fontWeight","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/UploadVideo.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { Sidebar, Navbar } from \"./\";\n// import {\n//   Box,\n//   Stack,\n//   Typography,\n//   Button,\n//   CircularProgress,\n//   FormControl,\n//   RadioGroup,\n//   FormControlLabel,\n//   Radio,\n//   TextField,\n// } from \"@mui/material\";\n// import FileUploadIcon from \"@mui/icons-material/FileUpload\";\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n\n// const UploadVideo = () => {\n//   const [selectedCategory, setSelectedCategory] = useState(\"Upload\");\n//   const [loading, setLoading] = useState(false);\n//   const [heading, setHeading] = useState(\"Upload a video file\");\n//   const [smallHeading, setSmallHeading] = useState(\n//     \"Once uploaded and described, your video will be visible on homepage\"\n//   );\n//   const [visibility, setVisibility] = useState(\"private\");\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [videoTitle, setVideoTitle] = useState(\"\");\n\n//   const handleVisibilityChange = (event) => {\n//     setVisibility(event.target.value);\n//   };\n\n//   const handleFileChange = (event) => {\n//     setSelectedFile(event.target.files[0]);\n//     console.log(\"am i coming here????\")\n//     handleFileUpload()\n//   };\n\n//   const handleTitleChange = (event) => {\n//     setVideoTitle(event.target.value);\n//   };\n\n//   const handleFileUpload = () => {\n//     // if (!videoTitle.trim()) {\n//     //   alert(\"Please enter a video title.\");\n//     //   return;\n//     // }\n\n//     // if (!selectedFile) {\n//     //   alert(\"Please select a video file.\");\n//     //   return;\n//     // }\n\n//     console.log(\"I am coming here\")\n//     const formData = new FormData();\n//     formData.append(\"file\", selectedFile);\n//     formData.append(\"title\", videoTitle);\n//     formData.append(\"visibility\", visibility);\n\n//     const token = Cookies.get(\"jwtToken\");\n//     const apiUrl = \"http://127.0.0.1:8000/api/upload/\";\n\n//     axios\n//       .post(apiUrl, formData, {\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       })\n//       .then((response) => {\n//         // Handle the successful response\n//         console.log(\"Response:\", response.data);\n//         setHeading(\"Your file is being loaded, do not refresh the page\");\n//         setSmallHeading(\n//           \"You will be redirected to the video page when the video is described\"\n//         );\n//         setLoading(true);\n//       })\n//       .catch((error) => {\n//         // Handle errors, if any\n//         console.error(\"Error:\", error);\n//         setHeading(\"Error in uploading your file, please try again\");\n//         setSmallHeading(\"Make sure you are uploading an mp4 file\");\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//         <Box\n//           sx={{\n//             height: { sx: \"auto\", md: \"100vh\" },\n//             paddingRight: { sx: 0, md: 2 },\n//           }}\n//         >\n//           <Sidebar\n//             selectedCategory={selectedCategory}\n//             setSelectedCategory={setSelectedCategory}\n//           />\n//         </Box>\n\n//         <Stack\n//           spacing={2}\n//           paddingTop={15}\n//           width={\"100%\"}\n//           justifyContent={\"flex-start\"}\n//           alignItems={\"center\"}\n//         >\n//           <Typography\n//             variant=\"h4\"\n//             fontWeight=\"bold\"\n//             paddingTop={3}\n//             color=\"primary.dark\"\n//           >\n//             {heading}\n//           </Typography>\n//           <Typography variant=\"caption\" fontWeight=\"bold\" color=\"primary.dark\">\n//             {smallHeading}\n//           </Typography>\n//           <Typography\n//             variant=\"caption\"\n//             fontWeight=\"bold\"\n//             color=\"secondary.main\"\n//           >\n//             Choose whether you would like the video to be public or private. The\n//             video is private by default.\n//           </Typography>\n//           <FormControl component=\"fieldset\">\n//             <RadioGroup\n//               row\n//               aria-label=\"visibility\"\n//               name=\"visibility\"\n//               value={visibility}\n//               onChange={handleVisibilityChange}\n//             >\n//               <FormControlLabel\n//                 value=\"private\"\n//                 control={<Radio />}\n//                 label=\"Private\"\n//               />\n//               <FormControlLabel\n//                 value=\"public\"\n//                 control={<Radio />}\n//                 label=\"Public\"\n//               />\n//             </RadioGroup>\n//           </FormControl>\n\n//           <TextField\n//             label=\"Video Title\"\n//             variant=\"outlined\"\n//             sx={{ width: \"50%\" }}\n//             margin=\"normal\"\n//             value={videoTitle}\n//             onChange={handleTitleChange}\n//           />\n\n//           {!loading && (\n//             <label htmlFor=\"fileInput\">\n//               <Button\n//                 component=\"span\"\n//                 sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                 className=\"category-btn\"\n//                 startIcon={<FileUploadIcon />}\n//               >\n//                 Upload Video File\n//               </Button>\n//               <input\n//                 type=\"file\"\n//                 accept=\".mp4\"\n//                 id=\"fileInput\"\n//                 style={{ display: \"none\" }}\n//                 onChange={handleFileChange}\n//               />\n//             </label>\n//           )}\n\n//           {loading && <CircularProgress />}\n//         </Stack>\n//       </Stack>\n//     </div>\n//   );\n// };\n\n// export default UploadVideo;\n\nimport React, { useState } from \"react\";\nimport { Sidebar, Navbar } from \"./\";\nimport {\n  Box,\n  Stack,\n  Typography,\n  Button,\n  CircularProgress,\n} from \"@mui/material\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst UploadVideo = () => {\n  const [selectedCategory, setSelectedCategory] = useState(\"Upload\");\n  const [loading, setLoading] = React.useState(false);\n  const [heading, setHeading] = React.useState(\n    \"Drag and drop a file you want to upload\"\n  );\n  const [smallHeading, setSmallHeading] = React.useState(\n    \"Once uploaded and described, your video will be visible on homepage\"\n  );\n\n  const [selectedFile, setSelectedFile] = useState();\n\n  const handleFileUpload = (e) => {\n    if (!e.target.files) {\n      return;\n    }\n    setSelectedFile(e.target.files[0]);\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    const token = Cookies.get(\"jwtToken\");\n\n    // Define the API endpoint where you want to send the POST request\n    const apiUrl = \"http://127.0.0.1:8000/api/upload/\";\n\n    axios\n      .post(apiUrl, formData, token)\n      .then((response) => {\n        // Handle the successful response\n        console.log(\"Response:\", response.data);\n        setHeading(\"Your file is being loaded, do not refresh page the page\");\n        setSmallHeading(\n          \"You will be redirected to the video page when the video is described\"\n        );\n        setLoading(true);\n      })\n      .catch((error) => {\n        // Handle errors, if any\n        console.error(\"Error:\", error);\n        setHeading(\"Error in uploading your file, please try again\");\n        setSmallHeading(\"Make sure, you are uploading an mp4 file\");\n      });\n  };\n\n  return (\n    <div>\n      <Navbar />\n      {/*  The box is the sidebar */}\n      <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n        <Box\n          sx={{\n            height: { sx: \"auto\", md: \"100vh\" },\n            paddingRight: { sx: 0, md: 2 },\n          }}\n        >\n          <Sidebar\n            selectedCategory={selectedCategory}\n            setSelectedCategory={setSelectedCategory}\n          />\n        </Box>\n\n        <Stack\n          spacing={2}\n          paddingTop={15}\n          width={\"100%\"}\n          justifyContent={\"flex-start\"}\n          alignItems={\"center\"}\n        >\n          {!loading && (\n            <Button\n              sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n              className=\"category-btn\"\n              component=\"label\"\n              startIcon={<FileUploadIcon />}\n              disabled={loading}\n            >\n              Upload Video File\n              <input\n                type=\"file\"\n                accept=\".mp4\"\n                hidden\n                onChange={handleFileUpload}\n              />\n            </Button>\n          )}\n\n          {loading && <CircularProgress />}\n\n          <Typography\n            variant=\"h4\"\n            fontWeight=\"bold\"\n            paddingTop={3}\n            color=\"primary.dark\"\n          >\n            {heading}\n          </Typography>\n          <Typography variant=\"caption\" fontWeight=\"bold\" color=\"primary.dark\">\n            {smallHeading}\n          </Typography>\n        </Stack>\n\n        {/* This is for if the user wants to upload a youtube link */}\n      </Stack>\n    </div>\n  );\n};\n\nexport default UploadVideo;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,EAAEC,MAAM,QAAQ,IAAI;AACpC,SACEC,GAAG,EACHC,KAAK,EACLC,UAAU,EACVC,MAAM,EACNC,gBAAgB,QACX,eAAe;AACtB,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,gBAAgB,E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"},"metadata":{},"sourceType":"module","externalDependencies":[]}