{"ast":null,"code":"var _jsxFileName = \"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AddDescriptions.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { Box, Stack, Typography, Grid, TextField, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport { Sidebar, Player, Navbar, Notes } from \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddDescriptions = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState();\n  const [played, setPlayed] = useState();\n  const [frames, setFrames] = useState([]);\n  const [description, setDescription] = useState(\"\");\n  const [selectedFrameIndex, setSelectedFrameIndex] = useState(null);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const handleAddFrame = () => {\n    if (played) {\n      const newFrame = {\n        time: played,\n        description: description\n      };\n      setFrames([...frames, newFrame]);\n      setDescription(\"\");\n    }\n  };\n  const handleEditFrame = index => {\n    setSelectedFrameIndex(index);\n    setDescription(frames[index].description);\n    setPlayed(frames[index].time); // Set the timestamp in the input field\n    setEditDialogOpen(true);\n  };\n  const handleSaveEdit = () => {\n    const updatedFrames = [...frames];\n    updatedFrames[selectedFrameIndex].description = description;\n    updatedFrames[selectedFrameIndex].time = played; // Update the timestamp\n    setFrames(updatedFrames);\n    setEditDialogOpen(false);\n  };\n\n  // ... other functions and components\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: () => setEditDialogOpen(false),\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          variant: \"outlined\",\n          fullWidth: true,\n          placeholder: \"Enter description\",\n          style: {\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: played,\n          onChange: e => setPlayed(e.target.value),\n          variant: \"outlined\",\n          fullWidth: true,\n          placeholder: \"Enter timestamp\",\n          style: {\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEditDialogOpen(false),\n          sx: {\n            backgroundColor: \"secondary.main\",\n            color: \"white\"\n          },\n          className: \"category-btn\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveEdit,\n          sx: {\n            backgroundColor: \"secondary.main\",\n            color: \"white\"\n          },\n          className: \"category-btn\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AddDescriptions, \"3/CwKlLicD0bYb11rjJQZVHDx1c=\");\n_c = AddDescriptions;\nexport default AddDescriptions;\n\n// import React, { useState } from \"react\";\n// import DeleteIcon from \"@mui/icons-material/Delete\";\n// import EditIcon from \"@mui/icons-material/Edit\";\n// import {\n//   Box,\n//   Stack,\n//   Typography,\n//   Grid,\n//   TextField,\n//   Button,\n//   IconButton,\n//   List,\n//   ListItem,\n//   ListItemText,\n//   ListItemSecondaryAction,\n//   Dialog,\n//   DialogTitle,\n//   DialogContent,\n//   DialogActions,\n//   Chip,\n// } from \"@mui/material\";\n// import { Sidebar, Player, Navbar, Notes } from \"./\";\n\n// const AddDescriptions = () => {\n//   const [selectedCategory, setSelectedCategory] = useState();\n//   const [played, setPlayed] = useState();\n//   const [frames, setFrames] = useState([]);\n//   const [description, setDescription] = useState(\"\");\n//   const [selectedFrameIndex, setSelectedFrameIndex] = useState(null);\n//   const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n//   const handleCallback = (progressData) => {\n//     setPlayed(progressData);\n//   };\n\n//   const handleAddFrame = () => {\n//     if (played) {\n//       const newFrame = { time: played, description: description };\n//       setFrames([...frames, newFrame]);\n//       setDescription(\"\");\n//     }\n//   };\n\n//   const handleRemoveFrame = (index) => {\n//     const updatedFrames = [...frames];\n//     updatedFrames.splice(index, 1);\n//     setFrames(updatedFrames);\n//   };\n\n//   const handleEditFrame = (index) => {\n//     setSelectedFrameIndex(index);\n//     setDescription(frames[index].description);\n//     setEditDialogOpen(true);\n//   };\n\n//   const handleSaveEdit = () => {\n//     const updatedFrames = [...frames];\n//     updatedFrames[selectedFrameIndex].description = description;\n//     setFrames(updatedFrames);\n//     setEditDialogOpen(false);\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//         <Box\n//           sx={{\n//             height: { sx: \"auto\", md: \"100vh\" },\n//             paddingRight: { sx: 0, md: 2 },\n//           }}\n//         >\n//           <Sidebar\n//             selectedCategory={selectedCategory}\n//             setSelectedCategory={setSelectedCategory}\n//           />\n//         </Box>\n\n//         <Grid\n//           container\n//           spacing={2}\n//           p={3}\n//           sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}\n//         >\n//           <Grid item xs={12} md={8}>\n//             <Player path={\"videos/19.mp4\"} parentCallback={handleCallback} />\n//           </Grid>\n\n//           <Notes videoId={19} />\n\n//           <Grid item xs={12} md={8}>\n//             <Box\n//               p={2}\n//               sx={{\n//                 backgroundColor: \"primary.main\",\n//                 borderRadius: \"5px\",\n//                 paddingBottom: \"20px\",\n//               }}\n//             >\n//               <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                 Add Frame at {played}\n//               </Typography>\n//               <hr />\n//               <TextField\n//                 value={description}\n//                 onChange={(e) => setDescription(e.target.value)}\n//                 variant=\"outlined\"\n//                 fullWidth\n//                 placeholder=\"Enter description\"\n//                 sx={{\n//                   marginBottom: \"10px\",\n//                   backgroundColor: \"white\",\n//                   borderRadius: \"5px\",\n//                 }}\n//               />\n//               <Button\n//                 sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                 className=\"category-btn\"\n//                 onClick={handleAddFrame}\n//               >\n//                 Add Frame\n//               </Button>\n//             </Box>\n\n//             {frames.map((frame, index) => (\n//               <Box\n//                 p={2}\n//                 sx={{\n//                   backgroundColor: \"primary.main\",\n//                   borderRadius: \"5px\",\n//                   margin: \"20px 0\",\n//                 }}\n//               >\n//                 <Grid\n//                   container\n//                   rowSpacing={2}\n//                   columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n//                 >\n//                   {/* Displays Scene number */}\n//                   <Grid item xs={2}>\n//                     <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                       Scene {index}\n//                     </Typography>\n//                   </Grid>\n//                   {/* Displays time stamp */}\n//                   <Grid item xs={1}>\n//                     <Chip\n//                       label={frame.time}\n//                       sx={{\n//                         backgroundColor: \"secondary.light\",\n//                         color: \"white\",\n//                         marginBottom: \"20px\",\n//                       }}\n//                     />\n//                   </Grid>\n//                   <Grid item xs={9}>\n//                     <Box display=\"flex\" justifyContent=\"flex-end\">\n//                       <IconButton\n//                         edge=\"end\"\n//                         aria-label=\"delete\"\n//                         onClick={() => handleRemoveFrame(index)}\n//                       >\n//                         <DeleteIcon\n//                           sx={{\n//                             color: \"#EF6262\",\n//                           }}\n//                           aria-label=\"delete scene\"\n//                         />\n//                       </IconButton>\n//                       <IconButton\n//                         edge=\"end\"\n//                         aria-label=\"edit\"\n//                         onClick={() => handleEditFrame(index)}\n//                         sx={{marginLeft:\"20px\"}}\n//                       >\n//                         <EditIcon\n//                           sx={{\n//                             color: \"#EF6262\",\n//                           }}\n//                           aria-label=\"edit scene\"\n//                         />\n//                       </IconButton>\n//                     </Box>\n//                   </Grid>\n\n//                   <Grid item xs={3} md={2}>\n//                     <Typography\n//                       variant=\"subtitle1\"\n//                       sx={{ color: \"primary.dark\" }}\n//                     >\n//                       On screen text\n//                     </Typography>\n//                   </Grid>\n//                   <Grid item xs={9} md={10}>\n//                     <Box\n//                       p={1.5}\n//                       borderRadius=\"5px\"\n//                       sx={{ backgroundColor: \"white\" }}\n//                     >\n//                       <Typography\n//                         variant=\"body1\"\n//                         sx={{ color: \"primary.dark\" }}\n//                       >\n//                         Currently, no screen text\n//                       </Typography>\n//                     </Box>\n//                   </Grid>\n\n//                   <Grid item xs={3} md={2}>\n//                     <Typography\n//                       variant=\"subtitle1\"\n//                       sx={{ color: \"primary.dark\" }}\n//                     >\n//                       Description\n//                     </Typography>\n//                   </Grid>\n//                   <Grid item xs={9} md={10}>\n//                     <Box\n//                       p={1.5}\n//                       borderRadius=\"5px\"\n//                       sx={{ backgroundColor: \"white\" }}\n//                     >\n//                       <Typography variant=\"body1\" sx={{ color: \"#1D5B79\" }}>\n//                         {frame.description}\n//                       </Typography>\n//                     </Box>\n//                   </Grid>\n//                 </Grid>\n//               </Box>\n//             ))}\n\n//             <Dialog\n//               open={editDialogOpen}\n//               onClose={() => setEditDialogOpen(false)}\n//               fullWidth\n//             >\n//               <DialogTitle>Edit Description at timestamp {played}</DialogTitle>\n//               <DialogContent>\n//                 <TextField\n//                   value={description}\n//                   onChange={(e) => setDescription(e.target.value)}\n//                   variant=\"outlined\"\n//                   fullWidth\n//                   placeholder=\"Enter description\"\n//                   style={{ marginBottom: \"10px\" }}\n//                 />\n//               </DialogContent>\n//               <DialogActions>\n//                 <Button\n//                   onClick={() => setEditDialogOpen(false)}\n//                   sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                 className=\"category-btn\"\n//                 >\n//                   Cancel\n//                 </Button>\n//                 <Button onClick={handleSaveEdit} sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                 className=\"category-btn\">\n//                   Save\n//                 </Button>\n//               </DialogActions>\n//             </Dialog>\n//           </Grid>\n//         </Grid>\n//       </Stack>\n//     </div>\n//   );\n// };\n\n// export default AddDescriptions;\nvar _c;\n$RefreshReg$(_c, \"AddDescriptions\");","map":{"version":3,"names":["React","useState","DeleteIcon","EditIcon","Box","Stack","Typography","Grid","TextField","Button","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Sidebar","Player","Navbar","Notes","jsxDEV","_jsxDEV","AddDescriptions","_s","selectedCategory","setSelectedCategory","played","setPlayed","frames","setFrames","description","setDescription","selectedFrameIndex","setSelectedFrameIndex","editDialogOpen","setEditDialogOpen","handleAddFrame","newFrame","time","handleEditFrame","index","handleSaveEdit","updatedFrames","children","open","onClose","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","variant","placeholder","style","marginBottom","onClick","sx","backgroundColor","color","className","_c","$RefreshReg$"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AddDescriptions.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport {\n  Box,\n  Stack,\n  Typography,\n  Grid,\n  TextField,\n  Button,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport { Sidebar, Player, Navbar, Notes } from \"./\";\n\nconst AddDescriptions = () => {\n  const [selectedCategory, setSelectedCategory] = useState();\n  const [played, setPlayed] = useState();\n  const [frames, setFrames] = useState([]);\n  const [description, setDescription] = useState(\"\");\n  const [selectedFrameIndex, setSelectedFrameIndex] = useState(null);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n  const handleAddFrame = () => {\n    if (played) {\n      const newFrame = { time: played, description: description };\n      setFrames([...frames, newFrame]);\n      setDescription(\"\");\n    }\n  };\n\n  const handleEditFrame = (index) => {\n    setSelectedFrameIndex(index);\n    setDescription(frames[index].description);\n    setPlayed(frames[index].time); // Set the timestamp in the input field\n    setEditDialogOpen(true);\n  };\n\n  const handleSaveEdit = () => {\n    const updatedFrames = [...frames];\n    updatedFrames[selectedFrameIndex].description = description;\n    updatedFrames[selectedFrameIndex].time = played; // Update the timestamp\n    setFrames(updatedFrames);\n    setEditDialogOpen(false);\n  };\n\n  // ... other functions and components\n\n  return (\n    <div>\n      {/* ... other components */}\n      <Dialog\n        open={editDialogOpen}\n        onClose={() => setEditDialogOpen(false)}\n        fullWidth\n      >\n        <DialogTitle>Edit Description</DialogTitle>\n        <DialogContent>\n          <TextField\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            variant=\"outlined\"\n            fullWidth\n            placeholder=\"Enter description\"\n            style={{ marginBottom: \"10px\" }}\n          />\n          <TextField\n            value={played}\n            onChange={(e) => setPlayed(e.target.value)}\n            variant=\"outlined\"\n            fullWidth\n            placeholder=\"Enter timestamp\"\n            style={{ marginBottom: \"10px\" }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => setEditDialogOpen(false)}\n            sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n            className=\"category-btn\"\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleSaveEdit}\n            sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n            className=\"category-btn\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddDescriptions;\n\n\n\n// import React, { useState } from \"react\";\n// import DeleteIcon from \"@mui/icons-material/Delete\";\n// import EditIcon from \"@mui/icons-material/Edit\";\n// import {\n//   Box,\n//   Stack,\n//   Typography,\n//   Grid,\n//   TextField,\n//   Button,\n//   IconButton,\n//   List,\n//   ListItem,\n//   ListItemText,\n//   ListItemSecondaryAction,\n//   Dialog,\n//   DialogTitle,\n//   DialogContent,\n//   DialogActions,\n//   Chip,\n// } from \"@mui/material\";\n// import { Sidebar, Player, Navbar, Notes } from \"./\";\n\n// const AddDescriptions = () => {\n//   const [selectedCategory, setSelectedCategory] = useState();\n//   const [played, setPlayed] = useState();\n//   const [frames, setFrames] = useState([]);\n//   const [description, setDescription] = useState(\"\");\n//   const [selectedFrameIndex, setSelectedFrameIndex] = useState(null);\n//   const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n//   const handleCallback = (progressData) => {\n//     setPlayed(progressData);\n//   };\n\n//   const handleAddFrame = () => {\n//     if (played) {\n//       const newFrame = { time: played, description: description };\n//       setFrames([...frames, newFrame]);\n//       setDescription(\"\");\n//     }\n//   };\n\n//   const handleRemoveFrame = (index) => {\n//     const updatedFrames = [...frames];\n//     updatedFrames.splice(index, 1);\n//     setFrames(updatedFrames);\n//   };\n\n//   const handleEditFrame = (index) => {\n//     setSelectedFrameIndex(index);\n//     setDescription(frames[index].description);\n//     setEditDialogOpen(true);\n//   };\n\n//   const handleSaveEdit = () => {\n//     const updatedFrames = [...frames];\n//     updatedFrames[selectedFrameIndex].description = description;\n//     setFrames(updatedFrames);\n//     setEditDialogOpen(false);\n//   };\n\n//   return (\n//     <div>\n//       <Navbar />\n//       <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//         <Box\n//           sx={{\n//             height: { sx: \"auto\", md: \"100vh\" },\n//             paddingRight: { sx: 0, md: 2 },\n//           }}\n//         >\n//           <Sidebar\n//             selectedCategory={selectedCategory}\n//             setSelectedCategory={setSelectedCategory}\n//           />\n//         </Box>\n\n//         <Grid\n//           container\n//           spacing={2}\n//           p={3}\n//           sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}\n//         >\n//           <Grid item xs={12} md={8}>\n//             <Player path={\"videos/19.mp4\"} parentCallback={handleCallback} />\n//           </Grid>\n\n//           <Notes videoId={19} />\n\n//           <Grid item xs={12} md={8}>\n//             <Box\n//               p={2}\n//               sx={{\n//                 backgroundColor: \"primary.main\",\n//                 borderRadius: \"5px\",\n//                 paddingBottom: \"20px\",\n//               }}\n//             >\n//               <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                 Add Frame at {played}\n//               </Typography>\n//               <hr />\n//               <TextField\n//                 value={description}\n//                 onChange={(e) => setDescription(e.target.value)}\n//                 variant=\"outlined\"\n//                 fullWidth\n//                 placeholder=\"Enter description\"\n//                 sx={{\n//                   marginBottom: \"10px\",\n//                   backgroundColor: \"white\",\n//                   borderRadius: \"5px\",\n//                 }}\n//               />\n//               <Button\n//                 sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                 className=\"category-btn\"\n//                 onClick={handleAddFrame}\n//               >\n//                 Add Frame\n//               </Button>\n//             </Box>\n\n//             {frames.map((frame, index) => (\n//               <Box\n//                 p={2}\n//                 sx={{\n//                   backgroundColor: \"primary.main\",\n//                   borderRadius: \"5px\",\n//                   margin: \"20px 0\",\n//                 }}\n//               >\n//                 <Grid\n//                   container\n//                   rowSpacing={2}\n//                   columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n//                 >\n//                   {/* Displays Scene number */}\n//                   <Grid item xs={2}>\n//                     <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n//                       Scene {index}\n//                     </Typography>\n//                   </Grid>\n//                   {/* Displays time stamp */}\n//                   <Grid item xs={1}>\n//                     <Chip\n//                       label={frame.time}\n//                       sx={{\n//                         backgroundColor: \"secondary.light\",\n//                         color: \"white\",\n//                         marginBottom: \"20px\",\n//                       }}\n//                     />\n//                   </Grid>\n//                   <Grid item xs={9}>\n//                     <Box display=\"flex\" justifyContent=\"flex-end\">\n//                       <IconButton\n//                         edge=\"end\"\n//                         aria-label=\"delete\"\n//                         onClick={() => handleRemoveFrame(index)}\n//                       >\n//                         <DeleteIcon\n//                           sx={{\n//                             color: \"#EF6262\",\n//                           }}\n//                           aria-label=\"delete scene\"\n//                         />\n//                       </IconButton>\n//                       <IconButton\n//                         edge=\"end\"\n//                         aria-label=\"edit\"\n//                         onClick={() => handleEditFrame(index)}\n//                         sx={{marginLeft:\"20px\"}}\n//                       >\n//                         <EditIcon\n//                           sx={{\n//                             color: \"#EF6262\",\n//                           }}\n//                           aria-label=\"edit scene\"\n//                         />\n//                       </IconButton>\n//                     </Box>\n//                   </Grid>\n\n//                   <Grid item xs={3} md={2}>\n//                     <Typography\n//                       variant=\"subtitle1\"\n//                       sx={{ color: \"primary.dark\" }}\n//                     >\n//                       On screen text\n//                     </Typography>\n//                   </Grid>\n//                   <Grid item xs={9} md={10}>\n//                     <Box\n//                       p={1.5}\n//                       borderRadius=\"5px\"\n//                       sx={{ backgroundColor: \"white\" }}\n//                     >\n//                       <Typography\n//                         variant=\"body1\"\n//                         sx={{ color: \"primary.dark\" }}\n//                       >\n//                         Currently, no screen text\n//                       </Typography>\n//                     </Box>\n//                   </Grid>\n\n//                   <Grid item xs={3} md={2}>\n//                     <Typography\n//                       variant=\"subtitle1\"\n//                       sx={{ color: \"primary.dark\" }}\n//                     >\n//                       Description\n//                     </Typography>\n//                   </Grid>\n//                   <Grid item xs={9} md={10}>\n//                     <Box\n//                       p={1.5}\n//                       borderRadius=\"5px\"\n//                       sx={{ backgroundColor: \"white\" }}\n//                     >\n//                       <Typography variant=\"body1\" sx={{ color: \"#1D5B79\" }}>\n//                         {frame.description}\n//                       </Typography>\n//                     </Box>\n//                   </Grid>\n//                 </Grid>\n//               </Box>\n//             ))}\n\n//             <Dialog\n//               open={editDialogOpen}\n//               onClose={() => setEditDialogOpen(false)}\n//               fullWidth\n//             >\n//               <DialogTitle>Edit Description at timestamp {played}</DialogTitle>\n//               <DialogContent>\n//                 <TextField\n//                   value={description}\n//                   onChange={(e) => setDescription(e.target.value)}\n//                   variant=\"outlined\"\n//                   fullWidth\n//                   placeholder=\"Enter description\"\n//                   style={{ marginBottom: \"10px\" }}\n//                 />\n//               </DialogContent>\n//               <DialogActions>\n//                 <Button\n//                   onClick={() => setEditDialogOpen(false)}\n//                   sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                 className=\"category-btn\"\n//                 >\n//                   Cancel\n//                 </Button>\n//                 <Button onClick={handleSaveEdit} sx={{ backgroundColor: \"secondary.main\", color: \"white\" }}\n//                 className=\"category-btn\">\n//                   Save\n//                 </Button>\n//               </DialogActions>\n//             </Dialog>\n//           </Grid>\n//         </Grid>\n//       </Stack>\n//     </div>\n//   );\n// };\n\n// export default AddDescriptions;\n"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}