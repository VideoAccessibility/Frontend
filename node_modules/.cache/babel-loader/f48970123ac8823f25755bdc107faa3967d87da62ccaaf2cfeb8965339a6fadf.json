{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { jwtDecode } from 'jwt-decode';\nfunction formatTime(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor(seconds % 3600 / 60);\n  const remainingSeconds = seconds % 60;\n  const formattedHours = hours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.toString().padStart(2, '0');\n  const formattedSeconds = remainingSeconds.toString().padStart(2, '0');\n  if (hours === 0) {\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n  return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n}\nexport default formatTime;\nfunction authorizeToken(token) {\n  // User is not logged in, display Material-UI Alert\n  const decodedToken = jwtDecode(token);\n  const currentTime = Date.now() / 1000; // Convert milliseconds to seconds\n\n  // Check if the token is not expired\n  isLoggedIn = decodedToken.exp > currentTime;\n}","map":{"version":3,"names":["axios","Cookies","jwtDecode","formatTime","seconds","hours","Math","floor","minutes","remainingSeconds","formattedHours","toString","padStart","formattedMinutes","formattedSeconds","authorizeToken","token","decodedToken","currentTime","Date","now","isLoggedIn","exp"],"sources":["/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/utils/functions.js"],"sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport {jwtDecode} from 'jwt-decode';\n\nfunction formatTime(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const remainingSeconds = seconds % 60;\n\n  const formattedHours = hours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.toString().padStart(2, '0');\n  const formattedSeconds = remainingSeconds.toString().padStart(2, '0');\n\n  if (hours === 0)\n  {\n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n\n  return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n}\n\nexport default formatTime;\n\n\nfunction authorizeToken(token){\n        // User is not logged in, display Material-UI Alert\n        const decodedToken = jwtDecode(token);\n        const currentTime = Date.now() / 1000; // Convert milliseconds to seconds\n    \n        // Check if the token is not expired\n        isLoggedIn = decodedToken.exp > currentTime;\n\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAAQC,SAAS,QAAO,YAAY;AAEpC,SAASC,UAAUA,CAACC,OAAO,EAAE;EAC3B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,IAAI,CAAC;EACxC,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,OAAO,GAAG,IAAI,GAAI,EAAE,CAAC;EACjD,MAAMK,gBAAgB,GAAGL,OAAO,GAAG,EAAE;EAErC,MAAMM,cAAc,GAAGL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACxD,MAAMC,gBAAgB,GAAGL,OAAO,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC5D,MAAME,gBAAgB,GAAGL,gBAAgB,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAErE,IAAIP,KAAK,KAAK,CAAC,EACf;IACE,OAAQ,GAAEQ,gBAAiB,IAAGC,gBAAiB,EAAC;EAClD;EAEA,OAAQ,GAAEJ,cAAe,IAAGG,gBAAiB,IAAGC,gBAAiB,EAAC;AACpE;AAEA,eAAeX,UAAU;AAGzB,SAASY,cAAcA,CAACC,KAAK,EAAC;EACtB;EACA,MAAMC,YAAY,GAAGf,SAAS,CAACc,KAAK,CAAC;EACrC,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;;EAEvC;EACAC,UAAU,GAAGJ,YAAY,CAACK,GAAG,GAAGJ,WAAW;AAEnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}