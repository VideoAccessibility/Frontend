[{"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/index.js":"1","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/App.js":"2","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoPage.jsx":"3","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/index.js":"4","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Sidebar.jsx":"5","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Videos.jsx":"6","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Player.jsx":"7","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoCard.jsx":"8","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/UploadVideo.jsx":"9","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Comment.jsx":"10","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/data/comments.js":"11","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/SearchBar.jsx":"12","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Scene.jsx":"13","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Navbar.jsx":"14","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Home.jsx":"15","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AskAI.jsx":"16","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/SceneCards.jsx":"17","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/data/sceneinfo.js":"18","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/data/issuesMedia.js":"19","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/data/videoMedia.js":"20","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/utils/constants.js":"21","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/SignIn.jsx":"22","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/UploadUrl.jsx":"23","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Notes.jsx":"24","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Frame.jsx":"25","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/TextToSpeech.jsx":"26","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/utils/functions.js":"27","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/DisplayDescriptions.jsx":"28","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoPlayer.jsx":"29","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/ChangeRating.jsx":"30","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/EditDescriptions.jsx":"31","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AddDescriptions.jsx":"32","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/OldEditDescriptionPage.jsx":"33","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/hooks/useSpeechRecognition.jsx":"34","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/SRPage.jsx":"35","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AlertBar.jsx":"36","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/SignUp.jsx":"37","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/RedirectHome.jsx":"38","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoSearch.jsx":"39","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/utils/loggedIn.js":"40"},{"size":204,"mtime":1709145327883,"results":"41","hashOfConfig":"42"},{"size":1925,"mtime":1709833003968,"results":"43","hashOfConfig":"42"},{"size":7492,"mtime":1709832911711,"results":"44","hashOfConfig":"42"},{"size":1437,"mtime":1709832724794,"results":"45","hashOfConfig":"42"},{"size":1310,"mtime":1707256235265,"results":"46","hashOfConfig":"42"},{"size":1749,"mtime":1709831869686,"results":"47","hashOfConfig":"42"},{"size":1175,"mtime":1709832762252,"results":"48","hashOfConfig":"42"},{"size":1743,"mtime":1706849298996,"results":"49","hashOfConfig":"42"},{"size":7083,"mtime":1709832879475,"results":"50","hashOfConfig":"42"},{"size":2601,"mtime":1709832607482,"results":"51","hashOfConfig":"42"},{"size":981,"mtime":1691741278439,"results":"52","hashOfConfig":"42"},{"size":1185,"mtime":1709832824195,"results":"53","hashOfConfig":"42"},{"size":14005,"mtime":1709832787658,"results":"54","hashOfConfig":"42"},{"size":1718,"mtime":1708641469429,"results":"55","hashOfConfig":"42"},{"size":2383,"mtime":1709831869686,"results":"56","hashOfConfig":"42"},{"size":8690,"mtime":1709832585975,"results":"57","hashOfConfig":"42"},{"size":2026,"mtime":1709832801639,"results":"58","hashOfConfig":"42"},{"size":1538,"mtime":1692834436328,"results":"59","hashOfConfig":"42"},{"size":1368,"mtime":1692906555612,"results":"60","hashOfConfig":"42"},{"size":1352,"mtime":1709831869687,"results":"61","hashOfConfig":"42"},{"size":1028,"mtime":1698795065709,"results":"62","hashOfConfig":"42"},{"size":3303,"mtime":1709832836644,"results":"63","hashOfConfig":"42"},{"size":5664,"mtime":1709832866222,"results":"64","hashOfConfig":"42"},{"size":2782,"mtime":1697076315278,"results":"65","hashOfConfig":"42"},{"size":3646,"mtime":1709832646330,"results":"66","hashOfConfig":"42"},{"size":3158,"mtime":1709257228639,"results":"67","hashOfConfig":"42"},{"size":655,"mtime":1707435270816,"results":"68","hashOfConfig":"42"},{"size":1050,"mtime":1695964539660,"results":"69","hashOfConfig":"42"},{"size":3812,"mtime":1709832928832,"results":"70","hashOfConfig":"42"},{"size":3844,"mtime":1707440189815,"results":"71","hashOfConfig":"42"},{"size":2236,"mtime":1709257681421,"results":"72","hashOfConfig":"42"},{"size":15800,"mtime":1709831869686,"results":"73","hashOfConfig":"42"},{"size":3663,"mtime":1709832748472,"results":"74","hashOfConfig":"42"},{"size":2576,"mtime":1699392672090,"results":"75","hashOfConfig":"42"},{"size":853,"mtime":1699548228542,"results":"76","hashOfConfig":"42"},{"size":667,"mtime":1707443135195,"results":"77","hashOfConfig":"42"},{"size":10397,"mtime":1709832843427,"results":"78","hashOfConfig":"42"},{"size":2073,"mtime":1701972702176,"results":"79","hashOfConfig":"42"},{"size":5475,"mtime":1709832957440,"results":"80","hashOfConfig":"42"},{"size":367,"mtime":1708641484802,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a482sx",{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"99"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"99"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"99"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"99"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"92"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/index.js",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/App.js",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoPage.jsx",["216","217","218","219","220"],[],"import React, { useState, useEffect } from \"react\";\nimport { Box, Stack, Typography, Grid, Button } from \"@mui/material\";\nimport {\n  Sidebar,\n  Comment,\n  AskAI,\n  Navbar,\n  VideoPlayer,\n  ChangeRating,\n  Player,\n  AlertBar,\n} from \"./\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport formatTime from \"../utils/functions\";\nimport tokenUsable from \"../utils/loggedIn\";\n\nfunction ensureVideoUrlFormat(url) {\n  // Check if url is null or undefined\n  if (url == null) {\n    console.error(\"Error: URL is null or undefined\");\n    return null; // Return null in case of error\n  }\n\n  // Check if the URL already starts with \"videos/\"\n  if (!url.startsWith(\"videos/\")) {\n    // If not, prepend \"videos/\" to the URL\n    url = \"videos/\" + url;\n  }\n  return url;\n}\n\nconst VideoPage = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [played, setPlayed] = useState(0);\n  const [desc, setDesc] = useState();\n  const [descUser, setDescUser] = useState();\n  const [video, setVideo] = useState([]);\n  const [turnOnOff, setturnOnOff] = useState(\"off\");\n  const [descOn, setDescOn] = useState(true);\n\n  // these are some error handling checks that I am doing\n  const [noDescription, setNoDescription] = useState(false);\n\n  const location = useLocation();\n  const { video_id, path } = location.state;\n\n  const apiUrl = \"https://vidscribe.org/api/video/\";\n  const token = Cookies.get(\"jwtToken\");\n\n  const params = { id: video_id, jwt: token };\n  const url = \"https://vidscribe.org/descriptions/\";\n  const parameters = { video_id: video_id };\n\n  useEffect(() => {\n    axios\n      .get(apiUrl, { params: params })\n      .then((response) => {\n        setVideo(response.data.video);\n        console.log(\"Received video data\", response.data.video);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    axios\n      .get(url, { params: parameters })\n      .then((response) => {\n        console.log(\"Received description data\", response.data.descriptions);\n        const descriptions = response.data.descriptions.map((item) => {\n          return JSON.parse(item);\n        });\n        setDesc(descriptions);\n        if (descriptions.length > 0) {\n          setNoDescription(true);\n        }\n        // this just gets the usernames for all the user and then display the descriptions from only one user\n        const uniqueUsernames = Array.from(\n          new Set(descriptions.map((description) => description.username))\n        );\n        setDescUser(\n          descriptions.filter(\n            (description) => description.username === uniqueUsernames[0]\n          )\n        );\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(\"Not receiving data description data\", err);\n        setLoading(false);\n      });\n  }, []);\n\n  if (isLoading) {\n    return <div className=\"App\">Loading...</div>;\n  }\n\n  const handleCallback = (progressData) => {\n    setPlayed(progressData);\n  };\n\n  const handleChangeUserCallback = (filteredDescriptions) => {\n    setDescUser(filteredDescriptions);\n  };\n\n  const handleViewDescriptions = () => {\n    if (turnOnOff === \"off\") {\n      setturnOnOff(\"on\");\n      setDescOn(false);\n    } else {\n      setturnOnOff(\"off\");\n      setDescOn(true);\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n        <Box sx={{ height: { sx: \"auto\", md: \"100vh\" } }}>\n          <Sidebar\n            selectedCategory={selectedCategory}\n            setSelectedCategory={setSelectedCategory}\n          />\n        </Box>\n\n        <Grid\n          container\n          spacing={2}\n          p={3}\n          sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}\n        >\n          <Grid item xs={12} md={8}>\n            {!isLoading && noDescription && (\n              <VideoPlayer\n                yesDesc={descOn}\n                path={ensureVideoUrlFormat(video.video_path)}\n                title={video.title}\n                descrip={descUser}\n                parentCallback={handleCallback}\n              />\n            )}\n            {noDescription && descOn && (\n              <ChangeRating\n                descriptions={desc}\n                parentCallback={handleChangeUserCallback}\n              />\n            )}\n            {!noDescription && (\n              <Player path={ensureVideoUrlFormat(video.video_path)} parentCallback={handleCallback} />\n            )}\n            {!noDescription && (\n              <div>\n                <Typography variant=\"h6\" color={\"primary.dark\"} paddingTop={2}>\n                  {video.title}\n                </Typography>\n                <hr />\n              </div>\n            )}\n          </Grid>\n\n          {/* This grid is to showcase all the comments */}\n          <Grid item xs={12} md={4}>\n            <Box\n              p={2}\n              sx={{\n                backgroundColor: \"primary.main\",\n                borderRadius: \"5px\",\n                paddingBottom: \"20px\",\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n                Q&A\n              </Typography>\n              <hr />\n              <Box sx={{ overflow: \"scroll\", height: { md: \"55vh\" } }}>\n                <Comment videoID={video_id} />\n              </Box>\n            </Box>\n\n            <Box\n              p={2}\n              sx={{\n                backgroundColor: \"primary.main\",\n                borderRadius: \"5px\",\n                margin: \"20px 0\",\n              }}\n            >\n              <Typography variant=\"h6\" sx={{ color: \"primary.dark\" }}>\n                More Options\n              </Typography>\n              \n              <hr />\n\n              <Button\n                sx={{\n                  backgroundColor: \"secondary.main\",\n                  color: \"white\",\n                  width: \"100%\",\n                  marginTop: \"10px\",\n                }}\n                className=\"category-btn\"\n                onClick={handleViewDescriptions}\n              >\n                Turn {turnOnOff} descriptions\n              </Button>\n\n              <AskAI videoID={video_id} timeStamp={played} />\n\n              <Link\n                to=\"/AddDescriptions\"\n                state={{ video_id: video_id, video_path: video.video_path }}\n              >\n                <Button\n                  sx={{\n                    backgroundColor: \"secondary.main\",\n                    color: \"white\",\n                    width: \"100%\",\n                    marginTop: \"10px\",\n                  }}\n                  className=\"category-btn\"\n                >\n                  Add description\n                </Button>\n              </Link>\n              {noDescription && (\n                <Link\n                  to=\"/EditDescriptions\"\n                  state={{ video_id: video_id, video_path: video.video_path }}\n                >\n                  <Button\n                    sx={{\n                      backgroundColor: \"secondary.main\",\n                      color: \"white\",\n                      width: \"100%\",\n                      marginTop: \"10px\",\n                    }}\n                    className=\"category-btn\"\n                  >\n                    Edit descriptions\n                  </Button>\n                </Link>\n              )}\n            </Box>\n          </Grid>\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default VideoPage;\n",[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/index.js",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Sidebar.jsx",[],[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Videos.jsx",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Player.jsx",["221","222","223","224","225","226","227","228","229"],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoCard.jsx",["230"],[],"// This component displays all the cards\nimport React from 'react'\nimport { Link } from \"react-router-dom\"; \nimport { Typography, Card, CardContent, CardMedia, Grid} from \"@mui/material\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\n\nconst VideoCard = (props) => (\n  \n  <Card \n  sx={{ \n    width: { xs: '100%', sm: '350px', md: \"270px\", }, \n    boxShadow: \"none\", \n    borderRadius: \"10px\" }}>\n    {/* passing the video path to the video page */}\n    <Link to=\"/VideoPage\" state={{video_id : props.id }}>\n      <CardMedia image={props.image} \n        sx={{ \n          width: { xs: '350px', sm: '350px',md: \"270px\", }, \n          height: 180 }} \n      />\n    </Link>\n\n    <CardContent \n    sx={{ \n      backgroundColor: \"primary.main\", \n      height: '100px' }}>\n\n      <Link to=\"/VideoPage\" state={{ path: props.path, video_id : props.id }}>\n        <Typography \n        variant=\"subtitle1\" \n        fontWeight=\"bold\" \n        color=\"primary.dark\">\n        {/* The slice function is  used to reduce the title length to 60*/}\n          {props.title.slice(0, 60)}\n        </Typography>\n\n      </Link>\n      <Link to=\"/VideoPage\" state={{ path: props.path, video_id : props.id }}>\n\n        {/* <Typography variant=\"subtitle2\" color=\"primary.dark\">\n          {props.channelTitle}\n          <CheckCircleIcon sx={{ fontSize: \"12px\", color: \"primary.dark\", ml: \"5px\" }} />\n        </Typography> */}\n\n        <Grid container paddingTop={1}>\n            <Typography fontSize=\"0.75rem\" color=\"white\" backgroundColor=\"secondary.main\" padding=\"3px 10px\" borderRadius=\"5px\" marginRight={\"10px\"}>\n                Described by AI\n        </Typography>\n        </Grid>\n\n      </Link>\n    </CardContent>\n  </Card>\n);\n\nexport default VideoCard","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/UploadVideo.jsx",["231","232","233"],[],"// all the commented code is to deal with the functionality of handling private videos\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Sidebar, Navbar } from \"./\";\nimport {\n  Box,\n  Stack,\n  Typography,\n  Button,\n  CircularProgress,\n  // FormControl,\n  // RadioGroup,\n  // FormControlLabel,\n  // Radio,\n  InputAdornment,\n  TextField,\n  Alert,\n  AlertTitle,\n  Snackbar,\n} from \"@mui/material\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport {jwtDecode} from 'jwt-decode';\n\nfunction tokenUsable(token){\n  // User is not logged in, display Material-UI Alert\n  const decodedToken = jwtDecode(token);\n  const currentTime = Date.now() / 1000; // Convert milliseconds to seconds\n\n  // Check if the token is not expired\n  return decodedToken.exp > currentTime;\n\n}\n\nconst UploadVideo = () => {\n  const [selectedCategory, setSelectedCategory] = useState(\"Upload\");\n  const [loading, setLoading] = React.useState(false);\n  const [heading, setHeading] = React.useState(\n    \"Add a video title and upload video file\"\n  );\n  const [smallHeading, setSmallHeading] = React.useState(\n    \"Once uploaded and described, your video will be visible on homepage\"\n  );\n  const [visibility, setVisibility] = useState(\"public\");\n  const [selectedFile, setSelectedFile] = useState();\n  const [videoTitle, setVideoTitle] = useState(\"\");\n  const [alertOpen, setAlertOpen] = useState(false);\n\n  const navigate = useNavigate();\n\n  // const handleVisibilityChange = (event) => {\n  //   setVisibility(event.target.value);\n  // };\n\n  const handleTitleChange = (event) => {\n    setVideoTitle(event.target.value);\n  };\n\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n    // Assuming you have a function to handle redirects to the sign-in page\n    // handleRedirectToSignIn(); // You need to implement this function\n  };\n\n  const handleFileUpload = (e) => {\n    if (!e.target.files) {\n      return;\n    }\n    setSelectedFile(e.target.files[0]);\n    const token = Cookies.get(\"jwtToken\");\n\n    // check if user is logged out or if token is expired\n    if (!token) {\n      setAlertOpen(true);\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"jwt\", token);\n    formData.append(\"file\", e.target.files[0]);\n    formData.append(\"title\", videoTitle);\n    formData.append(\"public_or_private\", visibility);\n\n    console.log(\"This is my form data\", visibility);\n\n    // Define the API endpoint where you want to send the POST request\n    const apiUrl = \"https://vidscribe.org/api/upload/\";\n\n    // Seting the page to loading\n    setHeading(\"Your file is being loaded, do not refresh page the page\");\n    setSmallHeading(\n      \"You will be redirected to the video page when the video is described\"\n    );\n    setLoading(true);\n\n    axios\n      .post(apiUrl, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\", // Use ‘multipart/form-data’ for file uploads\n        },\n      })\n      .then((response) => {\n        // Handle the successful response\n        console.log(\"Response:\", response.data);\n        navigate(\"/\");\n      })\n      .catch((error) => {\n        // Handle errors, if any\n        console.error(\"Error:\", error);\n        setLoading(false)\n        setHeading(\"Error in uploading your file, please try again\");\n        setSmallHeading(\"Make sure, you are uploading an mp4 file\");\n      });\n  };\n\n  return (\n    <div>\n      <Snackbar\n        open={alertOpen}\n        autoHideDuration={6000}\n        onClose={handleAlertClose}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <Alert severity=\"error\" onClose={handleAlertClose}>\n          <AlertTitle>Authentication Error</AlertTitle>\n          You need to be logged in to upload a video.\n        </Alert>\n      </Snackbar>\n      <Navbar />\n      {/*  The box is the sidebar */}\n      <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n        <Box\n          sx={{\n            height: { sx: \"auto\", md: \"100vh\" },\n            paddingRight: { sx: 0, md: 2 },\n          }}\n        >\n          <Sidebar\n            selectedCategory={selectedCategory}\n            setSelectedCategory={setSelectedCategory}\n          />\n        </Box>\n\n        <Stack\n          width={{ xs: \"80%\", md: \"50%\" }}\n          p={3}\n          m={3}\n          spacing={3}\n          borderRadius={4}\n          boxShadow={3}\n          justifyContent={\"center\"}\n          height={{ md: \"400px\" }}\n          al\n        >\n          <Typography variant=\"h4\" fontWeight=\"bold\" color=\"primary.dark\">\n            {heading}\n          </Typography>\n          <Typography variant=\"caption\" fontWeight=\"bold\" color=\"primary.dark\">\n            {smallHeading}\n          </Typography>\n          <br />\n          {/* <Typography variant=\"caption\" fontWeight=\"bold\" color=\"secondary.main\">\n            Choose whether you would like the video to be public or private. The video is private by default.\n          </Typography> */}\n          {!loading && (\n            <Box>\n              {/* <FormControl component=\"fieldset\">\n                <RadioGroup\n                  row\n                  aria-label=\"visibility\"\n                  name=\"visibility\"\n                  value={visibility}\n                  onChange={handleVisibilityChange}\n                >\n                  <FormControlLabel\n                    value=\"private\"\n                    control={<Radio />}\n                    label=\"Private\"\n                  />\n                  <FormControlLabel\n                    value=\"public\"\n                    control={<Radio />}\n                    label=\"Public\"\n                  />\n                </RadioGroup>\n              </FormControl> */}\n              <TextField\n                label=\"Video Title\"\n                variant=\"outlined\"\n                value={videoTitle}\n                fullWidth\n                onChange={handleTitleChange}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <Button\n                        sx={{\n                          backgroundColor: \"secondary.main\",\n                          color: \"white\",\n                        }}\n                        className=\"category-btn\"\n                        component=\"label\"\n                        startIcon={<FileUploadIcon />}\n                        disabled={loading || videoTitle.trim() === \"\"}\n                      >\n                        Upload Video File\n                        <input\n                          type=\"file\"\n                          accept=\".mp4\"\n                          hidden\n                          onChange={handleFileUpload}\n                        />\n                      </Button>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Box>\n          )}\n          {loading && <CircularProgress sx={{ mt: 3 }} />}\n        </Stack>\n      </Stack>\n    </div>\n  );\n};\n\nexport default UploadVideo;\n","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Comment.jsx",["234","235"],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/data/comments.js",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/SearchBar.jsx",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Scene.jsx",["236"],[],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  Chip,\n  CardContent,\n  Typography,\n  Button,\n  TextField,\n  DialogActions,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  Select,\n  Box,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport formatTime from \"../utils/functions\";\n\nconst Scene = ({id}) => {\n  const [descriptions, setDescriptions] = useState([]);\n  const [editedDescription, setEditedDescription] = useState(\"\");\n  const [selectedDescriptionId, setSelectedDescriptionId] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const url = \"https://vidscribe.org/descriptions/\";\n  const token = Cookies.get(\"jwtToken\");\n  const parameters = { video_id: id, jwt: token };\n\n  useEffect(() => {\n    axios\n      .get(url, { params: parameters })\n      .then((response) => {\n        // Parse JSON strings into JavaScript objects\n        const descriptions = response.data.descriptions.map((item) =>\n          JSON.parse(item)\n        );\n\n        // Extract unique user names from all descriptions and set them in state\n        const uniqueUserNames = Array.from(\n          new Set(\n            descriptions.map((description) => {\n              // Log each user name before adding it to the set\n              console.log(description.username);\n              return description.username;\n            })\n          )\n        );\n\n        setDescriptions(descriptions);\n        setLoading(false);\n        // Assuming the first user in the uniqueUserNames array as the initial user\n        setCurrentUser(uniqueUserNames[0]);\n      })\n      .catch((err) => {\n        console.log(\"Error fetching description data\", err);\n        setLoading(false);\n      });\n  }, []);\n\n  const handleUserChange = (event) => {\n    const selectedUser = event.target.value;\n    setCurrentUser(selectedUser);\n  };\n\n  const handleEditClick = (descriptionId, descriptionText) => {\n    setSelectedDescriptionId(descriptionId);\n    setEditedDescription(descriptionText);\n    setIsEditing(true);\n  };\n\n  const handleSaveClick = () => {\n    if (selectedDescriptionId !== null) {\n      const updatedDescription = {\n        id: selectedDescriptionId,\n        modified_descriptions: editedDescription,\n        jwt: token\n      };\n      console.log(\"here is the updated info\", selectedDescriptionId, editedDescription)\n  \n      axios\n        .put(`https://vidscribe.org/descriptions/`, updatedDescription)\n        .then((response) => {\n          console.log('Description updated successfully:', response.data.message);\n  \n          // Trigger a re-render by fetching updated data from the API\n          axios\n            .get(url, { params: parameters })\n            .then((response) => {\n              const descriptions = response.data.descriptions.map((item) =>\n                JSON.parse(item)\n              );\n              setDescriptions(descriptions);\n              setIsEditing(false);\n              setSelectedDescriptionId(null);\n            })\n            .catch((err) => {\n              console.log('Error fetching updated description data', err);\n            });\n        })\n        .catch((error) => {\n          console.error('Error updating description:', error);\n        });\n    }\n  };\n  \n\n  return (\n    <div>\n      {isLoading ? (\n        <div className=\"App\">Loading...</div>\n      ) : (\n        <div>\n          {/* User selection dropdown */}\n          {currentUser && (\n            <FormControl\n              sx={{\n                margin: \"20px 0\",\n                width: \"300px\",\n                backgroundColor: \"primary.main\",\n              }}\n            >\n              <InputLabel>User</InputLabel>\n              <Select value={currentUser} onChange={handleUserChange}>\n                {Array.from(\n                  new Set(\n                    descriptions.map((description) => description.username)\n                  )\n                ).map((username) => (\n                  <MenuItem key={username} value={username}>\n                    {username}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          )}\n\n          {/* Description cards */}\n          {descriptions\n            .filter((description) => description.username === currentUser)\n            .sort((a, b) => parseInt(a.time_stamp) - parseInt(b.time_stamp)) // Sort based on timestamps\n            .map((description) => (\n              <Card\n                key={description.id}\n                variant=\"outlined\"\n                sx={{ marginBottom: \"10px\", backgroundColor: \"primary.main\" }}\n              >\n                <CardContent>\n                  <Chip\n                    label={formatTime(parseInt(description.time_stamp_start))+ \" - \" + formatTime(parseInt(description.time_stamp_end))}\n                    sx={{\n                      backgroundColor: \"secondary.light\",\n                      color: \"white\",\n                      marginBottom: \"20px\",\n                    }}\n                  />\n                  {isEditing && selectedDescriptionId === description.id ? (\n                    <TextField\n                      multiline\n                      fullWidth\n                      sx={{\n                        backgroundColor: \"white\",\n                      }}\n                      variant=\"outlined\"\n                      label=\"Edit Description\"\n                      value={editedDescription}\n                      onChange={(e) => setEditedDescription(e.target.value)}\n                    />\n                  ) : (\n                    <Box\n                      p={1.5}\n                      borderRadius=\"5px\"\n                      sx={{ backgroundColor: \"white\" }}\n                    >\n                      <Typography variant=\"body1\">\n                        {description.descriptions}{\" \"}\n                        {/* Assuming description property name is descriptions */}\n                      </Typography>\n                    </Box>\n                  )}\n                  <div style={{ marginTop: \"10px\" }}>\n                    {isEditing && selectedDescriptionId === description.id ? (\n                      <DialogActions>\n                        <Button\n                          onClick={handleSaveClick}\n                          sx={{\n                            backgroundColor: \"secondary.main\",\n                            color: \"white\",\n                            marginTop: \"10px\",\n                          }}\n                          className=\"category-btn\"\n                        >\n                          Save\n                        </Button>\n                      </DialogActions>\n                    ) : (\n                      <Button\n                        onClick={() =>\n                          handleEditClick(\n                            description.id,\n                            description.descriptions\n                          )\n                        }\n                        sx={{\n                          backgroundColor: \"secondary.main\",\n                          color: \"white\",\n                          marginTop: \"10px\",\n                        }}\n                        className=\"category-btn\"\n                      >\n                        Edit\n                      </Button>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Scene;\n\n// import React, { useState, useEffect } from \"react\";\n// import {\n//   Card,\n//   Chip,\n//   CardContent,\n//   Typography,\n//   Button,\n//   TextField,\n//   Dialog,\n//   DialogActions,\n//   InputLabel,\n//   FormControl,\n//   MenuItem,\n//   Select,\n//   Box,\n// } from \"@mui/material\";\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n\n// const fakeUsers = [\n//   { id: 1, name: \"User 1\" },\n//   { id: 2, name: \"User 2\" },\n//   // Add more users as needed\n// ];\n\n// const Scene = () => {\n//   const [currentUser, setCurrentUser] = useState(fakeUsers[0]);\n//   const [fakeDescriptions, setFakeDescriptions] = useState([\n//     {\n//       id: 1,\n//       timestamp: \"00:05\",\n//       userId: 1,\n//       description: \"Description 1 by User 1\",\n//     },\n//     {\n//       id: 2,\n//       timestamp: \"00:10\",\n//       userId: 1,\n//       description: \"Description 1 by User 1 at 10 seconds\",\n//     },\n//     {\n//       id: 3,\n//       timestamp: \"00:15\",\n//       userId: 1,\n//       description: \"Description 1 by User 1 at 10 seconds\",\n//     },\n//     {\n//       id: 4,\n//       timestamp: \"01:30\",\n//       userId: 2,\n//       description: \"Description 2 by User 2\",\n//     },\n//     // Add more fake descriptions as needed\n//   ]);\n//   const [editedDescription, setEditedDescription] = useState(\"\");\n//   const [selectedDescriptionId, setSelectedDescriptionId] = useState(null);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [isLoading, setLoading] = useState(true);\n//   const [desc, setDesc] = useState();\n\n//   const url = \"http://127.0.0.1:8000/descriptions/\";\n//   const token = Cookies.get(\"jwtToken\");\n//   const parameters = { video_id: 19, jwt: token };\n\n//   useEffect(() => {\n\n//     axios.get(url, { params: parameters })\n//       .then((response) => {\n//         console.log(\"Received description data in edit descriptions page\", response.data.descriptions);\n//         setDesc(\n//           response.data.descriptions.map((item) => {\n//             return JSON.parse(item);\n//           })\n//         );\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         console.log(\"Not receiving data description data\", err);\n//         setLoading(false);\n//       });\n\n//   }, []);\n\n//   if (isLoading) {\n//     return <div className=\"App\">Loading...</div>;\n//   }\n\n//   const handleUserChange = (event) => {\n//     const userId = event.target.value;\n//     const selectedUser = fakeUsers.find((user) => user.id === userId);\n//     setCurrentUser(selectedUser);\n//   };\n\n//   const handleEditClick = (descriptionId, descriptionText) => {\n//     setSelectedDescriptionId(descriptionId);\n//     setEditedDescription(descriptionText);\n//     setIsEditing(true);\n//   };\n\n//   const handleSaveClick = () => {\n//     if (selectedDescriptionId !== null) {\n//       const updatedDescriptions = fakeDescriptions.map((description) =>\n//         description.id === selectedDescriptionId\n//           ? { ...description, description: editedDescription }\n//           : description\n//       );\n//       setFakeDescriptions(updatedDescriptions);\n//       setIsEditing(false);\n//       setSelectedDescriptionId(null);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <FormControl\n//         sx={{\n//           margin: \"20px 0\",\n//           width: \"300px\",\n//           backgroundColor: \"primary.main\",\n//         }}\n//       >\n//         <InputLabel>User</InputLabel>\n//         <Select value={currentUser.id} onChange={handleUserChange}>\n//           {fakeUsers.map((user) => (\n//             <MenuItem key={user.id} value={user.id}>\n//               {user.name}\n//             </MenuItem>\n//           ))}\n//         </Select>\n//       </FormControl>\n//       {fakeDescriptions\n//         .filter((description) => description.userId === currentUser.id)\n//         .map((description) => (\n//           <Card\n//             key={description.id}\n//             variant=\"outlined\"\n//             sx={{ marginBottom: \"10px\", backgroundColor: \"primary.main\" }}\n//           >\n//             <CardContent>\n//               <Chip\n//                 label={description.timestamp}\n//                 sx={{\n//                   backgroundColor: \"secondary.light\",\n//                   color: \"white\",\n//                   marginBottom: \"20px\",\n//                 }}\n//               />\n//               {isEditing && selectedDescriptionId === description.id ? (\n//                 <TextField\n//                   multiline\n//                   fullWidth\n//                   sx={{\n//                     backgroundColor: \"white\",\n//                   }}\n//                   variant=\"outlined\"\n//                   label=\"Edit Description\"\n//                   value={editedDescription}\n//                   onChange={(e) => setEditedDescription(e.target.value)}\n//                 />\n//               ) : (\n//                 <Box p={1.5}  borderRadius=\"5px\" sx={{backgroundColor : \"white\"}}>\n//                 <Typography variant=\"body1\">\n//                   {description.description}\n//                 </Typography>\n//                 </Box>\n//               )}\n//               <div style={{ marginTop: \"10px\" }}>\n//                 {isEditing && selectedDescriptionId === description.id ? (\n//                   <DialogActions>\n//                     <Button\n//                       onClick={handleSaveClick}\n//                       sx={{\n//                         backgroundColor: \"secondary.main\",\n//                         color: \"white\",\n//                         marginTop: \"10px\",\n//                       }}\n//                       className=\"category-btn\"\n//                     >\n//                       Save\n//                     </Button>\n//                   </DialogActions>\n//                 ) : (\n//                   <Button\n//                     onClick={() =>\n//                       handleEditClick(description.id, description.description)\n//                     }\n//                     sx={{\n//                       backgroundColor: \"secondary.main\",\n//                       color: \"white\",\n//                       marginTop: \"10px\",\n//                     }}\n//                     className=\"category-btn\"\n//                   >\n//                     Edit\n//                   </Button>\n//                 )}\n//               </div>\n//             </CardContent>\n//           </Card>\n//         ))}\n//     </div>\n//   );\n// };\n\n// export default Scene;\n","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Navbar.jsx",["237"],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Home.jsx",["238"],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AskAI.jsx",["239","240","241","242"],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/SceneCards.jsx",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/data/sceneinfo.js",[],[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/data/issuesMedia.js",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/data/videoMedia.js",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/utils/constants.js",["243","244"],[],"import HomeIcon from '@mui/icons-material/Home';\nimport KeyboardVoiceIcon from '@mui/icons-material/KeyboardVoice';\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\nexport const logo = 'https://i.ibb.co/s9Qys2j/logo.png';\n\nexport const categories = [\n  { name: 'Home', icon: <HomeIcon />,  href: '/'},\n  { name: 'Upload', icon: <FileUploadIcon />, href: '/UploadVideo'},\n  { name: 'Use URL', icon: <YouTubeIcon />, href: '/UploadUrl'},\n];\n\nexport const demoThumbnailUrl = 'https://i.ibb.co/G2L2Gwp/API-Course.png';\nexport const demoChannelUrl = '/channel/UCmXmlB4-HJytD7wek0Uo97A';\nexport const demoVideoUrl = '/video/GDa8kZLNhJ4';\nexport const demoChannelTitle = 'JavaScript Mastery';\nexport const demoVideoTitle = 'Build and Deploy 5 JavaScript & React API Projects in 10 Hours - Full Course | RapidAPI';\nexport const demoProfilePicture = 'http://dergipark.org.tr/assets/app/images/buddy_sample.png'\n","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/SignIn.jsx",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/UploadUrl.jsx",["245","246","247","248","249"],[],"// all the commented code is to deal with the functionality of handling private videos\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Sidebar, Navbar } from \"./\";\nimport {\n  Box,\n  Stack,\n  Typography,\n  Button,\n  CircularProgress,\n  TextField,\n  InputAdornment,\n  FormControlLabel,\n  Snackbar,\n  Alert,\n  AlertTitle,\n  Switch,\n} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { jwtDecode } from \"jwt-decode\";\n\nfunction tokenUsable(token) {\n  // User is not logged in, display Material-UI Alert\n  const decodedToken = jwtDecode(token);\n  const currentTime = Date.now() / 1000; // Convert milliseconds to seconds\n\n  // Check if the token is not expired\n  return decodedToken.exp > currentTime;\n}\n\nconst UploadUrl = () => {\n  const [selectedCategory, setSelectedCategory] = useState(\"Use URL\");\n  const [loading, setLoading] = React.useState(false);\n  const [heading, setHeading] = React.useState(\"Add a YouTube video URL\");\n  const [smallHeading, setSmallHeading] = React.useState(\n    \"Once uploaded and described, your video will be visible on the homepage\"\n  );\n  const [url, setUrl] = useState(\"\");\n  const [visibility, setVisibility] = useState(\"public\");\n  const [alertOpen, setAlertOpen] = useState(false);\n\n  const navigate = useNavigate();\n\n  const handleAlertClose = () => {\n    setAlertOpen(false);\n    // Assuming you have a function to handle redirects to the sign-in page\n    // handleRedirectToSignIn(); // You need to implement this function\n  };\n\n  function handleChange(event) {\n    const value = event.target.value;\n    setUrl(value);\n  }\n\n  const handleVisibilityChange = () => {\n    setVisibility((prevVisibility) =>\n      prevVisibility === \"public\" ? \"private\" : \"public\"\n    );\n  };\n\n  const handleURLUpload = () => {\n    const token = Cookies.get(\"jwtToken\");\n    const apiUrl = \"https://vidscribe.org/api/youtube_video/\";\n\n    const postData = {\n      youtube_url: url,\n      jwt: token,\n      public_or_private: visibility,\n    };\n\n    // check if user is logged out or if token is expired\n    if (!token || !tokenUsable(token)) {\n      setAlertOpen(true);\n      return;\n    }\n\n    setHeading(\"Your file is being loaded, do not refresh the page\");\n    setSmallHeading(\n      `You will be redirected to the video page when the video is described. Visibility: ${visibility}`\n    );\n    setLoading(true);\n\n    axios\n      .post(apiUrl, postData)\n      .then((response) => {\n        // Handle the successful response\n        console.log(\"Response:\", response.data);\n        navigate(\"/\");\n      })\n      .catch((error) => {\n        // Handle errors, if any\n        console.error(\"Error:\", error);\n        setLoading(false);\n        setHeading(\"Error in uploading your file, please try again\");\n        setSmallHeading(\"Make sure you are entering a valid YouTube URL\");\n      });\n  };\n\n  return (\n    <div>\n      <Snackbar\n        open={alertOpen}\n        autoHideDuration={6000}\n        onClose={handleAlertClose}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <Alert severity=\"error\" onClose={handleAlertClose}>\n          <AlertTitle>Authentication Error</AlertTitle>\n          You need to be logged in to upload a video.\n        </Alert>\n      </Snackbar>\n      <Navbar />\n      <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n        <Box\n          sx={{\n            height: { sx: \"auto\", md: \"100vh\" },\n            paddingRight: { sx: 0, md: 2 },\n          }}\n        >\n          <Sidebar\n            selectedCategory={selectedCategory}\n            setSelectedCategory={setSelectedCategory}\n          />\n        </Box>\n\n        <Stack\n          width={{ xs: \"80%\", md: \"50%\" }}\n          p={3}\n          m={3}\n          spacing={3}\n          borderRadius={4}\n          boxShadow={3}\n          justifyContent={\"center\"}\n          height={{ md: \"400px\" }}\n        >\n          <Typography variant=\"h4\" fontWeight=\"bold\" color=\"primary.dark\">\n            {heading}\n          </Typography>\n          <Typography variant=\"caption\" fontWeight=\"bold\" color=\"primary.dark\">\n            {smallHeading}\n          </Typography>\n          {!loading && (\n            <TextField\n              label=\"Enter YouTube URL\"\n              onChange={handleChange}\n              value={url}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    {/* <FormControlLabel\n                        control={\n                          <Switch\n                            checked={visibility === \"public\"}\n                            onChange={handleVisibilityChange}\n                            color=\"secondary\"\n                          />\n                        }\n                        label={visibility === \"public\" ? \"Public\" : \"Private\"}\n                      /> */}\n                    <Button\n                      sx={{\n                        backgroundColor: \"secondary.main\",\n                        color: \"white\",\n                      }}\n                      className=\"category-btn\"\n                      component=\"label\"\n                      disabled={loading}\n                      onClick={handleURLUpload}\n                    >\n                      Submit URL\n                    </Button>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          )}\n          {loading && <CircularProgress />}\n        </Stack>\n      </Stack>\n    </div>\n  );\n};\n\nexport default UploadUrl;\n","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Notes.jsx",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/Frame.jsx",["250","251"],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/TextToSpeech.jsx",["252","253","254","255","256"],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/utils/functions.js",["257","258"],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/DisplayDescriptions.jsx",["259","260","261","262","263","264"],[],"import React, { useState, useEffect } from \"react\";\nimport { Box, Grid, Typography, Paper } from \"@mui/material\";\nimport { TextToSpeech } from \"./\";\n\n\nconst DisplayDescriptions = (props) => {\n  const [desc, setDesc] = useState(\"\");\n\n  function handlePause(){\n    console.log(\"yolo\")\n  }\n  return (\n    <div>\n      <Box\n        p={2}\n        sx={{\n          backgroundColor: \"#1D5B79\",\n          borderRadius: \"5px\",\n          marginBottom: \"32px\",\n        }}\n      >\n        <Box p={1.5} borderRadius=\"5px\" sx={{ backgroundColor: \"white\" }}>\n          {props.descriptions.map((item) => {\n            if (item.time_stamp === props.timeStamp)\n            {\n              return (\n                <Typography variant=\"body1\" sx={{ color: \"#1D5B79\" }}>\n                  {item.descriptions}\n                  {handlePause}\n                  <hr />\n                  <TextToSpeech text={item.descriptions} />\n                </Typography>\n              );\n          }})}\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default DisplayDescriptions;\n","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoPlayer.jsx",["265","266","267"],[],"import React, { useState, useEffect } from \"react\";\nimport { Typography, Box, Chip } from \"@mui/material\";\nimport { TextToSpeech } from \".\";\nimport formatTime from \"../utils/functions\";\n\nconst VideoPlayer = (props) => {\n  // const video = require(\"./\" + props.path);\n  const video = \"https://vidscribe.org/\" + props.path;\n  // console.log(\"this is my video path\", video)\n  const defaultDescription = {\n    descriptions: \"No description playing\",\n    time_stamp_start: \"-\",\n    time_stamp_end: \"-\"\n  };\n  // console.log(\"these are my descriptions in video-player\", props.descrip)\n  const [videoDescriptions, setVideoDescriptions] = useState([defaultDescription]);\n  const [currentDescriptionIndex, setCurrentDescriptionIndex] = useState(0);\n  const [isSpeechPlaying, setIsSpeechPlaying] = useState(false);\n\n  useEffect(() => {\n    // Concatenate the default description with the new descriptions from props\n    const updatedDescriptions = [defaultDescription, ...(props.descrip || [])];\n    setCurrentDescriptionIndex(0)\n    setVideoDescriptions(updatedDescriptions);\n  }, [props.descrip]);\n\n  useEffect(() => {\n    const videoElement = document.getElementById(\"video\");\n\n    const handleTimeUpdate = () => {\n      // Ensure videoDescriptions is not empty before accessing properties\n      if (videoDescriptions.length > 0) {\n        const currentTime = Math.floor(videoElement.currentTime);\n        props.parentCallback(Math.floor(currentTime));\n        const index = videoDescriptions.findIndex(\n          (description) => parseInt(description.time_stamp_start) === currentTime\n        );\n\n        if (index !== -1 && index !== currentDescriptionIndex && props.yesDesc) {\n          setCurrentDescriptionIndex(index);\n          videoElement.pause();\n        }\n      }\n    };\n\n    videoElement.addEventListener(\"timeupdate\", handleTimeUpdate);\n\n    return () => {\n      videoElement.removeEventListener(\"timeupdate\", handleTimeUpdate);\n    };\n  }, [currentDescriptionIndex, videoDescriptions, props.parentCallback]);\n\n  const handleCallback = () => {\n    const videoElement = document.getElementById(\"video\");\n    videoElement.play();\n  };\n\n  // Ensure videoDescriptions[currentDescriptionIndex] is defined before accessing its properties\n  const currentDescription = videoDescriptions[currentDescriptionIndex] || defaultDescription;\n\n\n  return (\n    <div>\n      <video id=\"video\" controls width=\"100%\" height=\"500px\">\n        <source src={video} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n\n      <div>\n        <Typography variant=\"h6\" color={\"primary.dark\"} paddingTop={2}>\n          {props.title}\n        </Typography>\n        <hr />\n        {props.yesDesc && <Box\n          p={2}\n          sx={{\n            backgroundColor: \"#1D5B79\",\n            borderRadius: \"5px\",\n            marginBottom: \"32px\",\n          }}\n        >\n          <Box p={1.5} borderRadius=\"5px\" sx={{ backgroundColor: \"white\" }}>\n            <Chip\n              label={formatTime(parseInt(currentDescription.time_stamp_start)) + \" - \" + formatTime(parseInt(currentDescription.time_stamp_end))}\n              sx={{\n                backgroundColor: \"secondary.light\",\n                color: \"white\",\n                marginBottom: \"20px\",\n              }}\n            />\n            <Typography variant=\"body1\" sx={{ color: \"#1D5B79\" }}>\n              {currentDescription.descriptions}\n              <hr />\n              {currentDescriptionIndex !== 0 && (\n                <TextToSpeech\n                  text={currentDescription.descriptions}\n                  isPlayed={isSpeechPlaying}\n                  parentCallback={handleCallback}\n                />\n              )}\n            </Typography>\n          </Box>\n        </Box>}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/ChangeRating.jsx",["268"],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/EditDescriptions.jsx",["269","270","271","272","273","274","275","276","277","278","279"],[],"import React, { useState, useEffect } from \"react\";\nimport { Box, Stack, Typography, Grid, TextField, Button } from \"@mui/material\";\nimport { Sidebar, Player, Scene, Navbar, Notes, Frame } from \"./\";\nimport { useLocation, Link } from \"react-router-dom\";\n\nfunction ensureVideoUrlFormat(url) {\n  // Check if url is null or undefined\n  if (url == null) {\n    console.error(\"Error: URL is null or undefined\");\n    return null; // Return null in case of error\n  }\n\n  // Check if the URL already starts with \"videos/\"\n  if (!url.startsWith(\"videos/\")) {\n    // If not, prepend \"videos/\" to the URL\n    url = \"videos/\" + url;\n  }\n  return url;\n}\n\n\nconst EditDescriptions = () => {\n  const [selectedCategory, setSelectedCategory] = useState();\n  const [yesFrame, setYesFrame] = useState(false);\n  const [played, setPlayed] = useState();\n  const [videoDescriptions, setVideoDescriptions] = useState([]);\n\n  const location = useLocation();\n  const { video_id, video_path } = location.state;\n  // this function just retrives the time the video is played\n  const handleCallback = (progressData) => {\n    setPlayed(progressData);\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n        <Box\n          sx={{\n            height: { sx: \"auto\", md: \"100vh\" },\n            paddingRight: { sx: 0, md: 2 },\n          }}\n        >\n          <Sidebar\n            selectedCategory={selectedCategory}\n            setSelectedCategory={setSelectedCategory}\n          />\n        </Box>\n\n        {/* This container consists of the video player, the video information for now is hardcoded*/}\n        <Grid\n          container\n          spacing={2}\n          p={3}\n          sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}\n        >\n          <Grid item xs={12} md={8}>\n            <Player path={ensureVideoUrlFormat(video_path)} parentCallback={handleCallback} />\n          </Grid>\n          {/* CHANGE THIS FROM HARD CODING */}\n          <Notes videoId={video_id} />\n\n          <Grid item xs={12} md={8}>\n            <Scene id={video_id}/>\n          </Grid>\n          {/* This grid represent the notes section */}\n        </Grid>\n      </Stack>\n    </div>\n  );\n};\n\nexport default EditDescriptions;\n","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AddDescriptions.jsx",["280","281","282"],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/OldEditDescriptionPage.jsx",["283","284","285"],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/hooks/useSpeechRecognition.jsx",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/SRPage.jsx",["286"],[],"import React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\nconst SRPage = () => {\n    const {\n        transcript,\n        listening,\n        resetTranscript,\n        browserSupportsSpeechRecognition\n      } = useSpeechRecognition();\n    \n      if (!browserSupportsSpeechRecognition) {\n        return <span>Browser doesn't support speech recognition.</span>;\n      }\n    \n      return (\n        <div>\n        <img src='../Backend-main/videos/35.png'></img>\n          <p>Microphone: {listening ? 'on' : 'off'}</p>\n          <button onClick={SpeechRecognition.startListening}>Start</button>\n          <button onClick={SpeechRecognition.stopListening}>Stop</button>\n          <button onClick={resetTranscript}>Reset</button>\n          <p>{transcript}</p>\n        </div>\n      );\n}\n\nexport default SRPage;","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/AlertBar.jsx",["287"],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/SignUp.jsx",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/RedirectHome.jsx",[],[],"/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/components/VideoSearch.jsx",["288","289"],[],"import React, { useState, useEffect } from \"react\";\nimport { Box, Stack, Typography } from \"@mui/material\";\nimport { Sidebar, Videos, Navbar } from \"./\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { useParams } from \"react-router-dom\"; // Import useParams\n\nconst VideoSearch = () => {\n  const { searchQuery } = useParams(); // Get the search query from URL params\n  const [isLoading, setLoading] = useState(true);\n  const [videoList, setVideoList] = useState([]);\n  const [filteredVideos, setFilteredVideos] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n\n  const apiUrl = \"https://vidscribe.org/api/all_videos/\";\n\n  useEffect(() => {\n    const jwtToken = Cookies.get(\"jwtToken\");\n\n    if (jwtToken) {\n      const params = { jwt: jwtToken };\n      axios\n        .get(apiUrl, { params: params })\n        .then((response) => {\n          setVideoList(\n            response.data.videos.map((item) => {\n              return JSON.parse(item);\n            })\n          );\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setLoading(true);\n        });\n    } else {\n      axios\n        .get(apiUrl)\n        .then((response) => {\n          setVideoList(\n            response.data.videos.map((item) => {\n              return JSON.parse(item);\n            })\n          );\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setLoading(true);\n        });\n    }\n  }, [searchQuery]); // Add searchQuery to dependency array to fetch data when searchQuery changes\n\n  useEffect(() => {\n    setFilteredVideos(videoList.filter((video) =>\n      video.title.toLowerCase().includes(searchQuery.toLowerCase())))\n  }, [videoList, searchQuery]); // Update filteredVideos when videoList or searchQuery changes\n\n  return (\n    <div>\n      <Navbar />\n      <Stack sx={{ flexDirection: { xs: \"column\", md: \"row\" } }}>\n        <Box\n          sx={{\n            height: { xs: \"auto\", md: \"100vh\" },\n            paddingRight: { xs: 0, md: 2 },\n            marginBottom: 2,\n          }}\n        >\n          <Sidebar />\n        </Box>\n        <Box\n          p={2}\n          sx={{\n            overflowY: \"auto\",\n            height: \"90vh\",\n            flex: 2,\n          }}\n        >\n          <Typography variant=\"h4\" fontWeight=\"bold\" mb={2} color=\"primary.dark\">\n            Search results\n          </Typography>\n          {isLoading ? (\n            <div>Loading...</div>\n          ) : (\n            <Videos videos={filteredVideos} />\n          )}\n        </Box>\n      </Stack>\n    </div>\n  );\n}\n\nexport default VideoSearch;\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { Box, Stack, Typography, Button } from \"@mui/material\";\n// import { Sidebar,Videos,  Navbar } from \"./\";\n// import axios from \"axios\";\n// import Cookies from \"js-cookie\";\n\n// const VideoSearch = ({ searchQuery }) => {\n//   const [isLoading, setLoading] = useState(true);\n//   const [videoList, setVideoList] = useState([]);\n//   const [filteredVideos, setFilteredVideos] = useState([]);\n\n//   console.log(\"this is my searchQuery \", searchQuery)\n\n//   const apiUrl = \"http://127.0.0.1:8000/api/all_videos/\";\n\n//   useEffect(() => {\n//     const jwtToken = Cookies.get(\"jwtToken\"); // Get JWT token from cookies\n\n//     // Check if the user is authenticated\n//     if (jwtToken) {\n//       const params = { jwt: jwtToken };\n//       axios\n//         .get(apiUrl, { params: params })\n//         .then((response) => {\n//           setVideoList(\n//             response.data.videos.map((item) => {\n//               return JSON.parse(item);\n//             })\n//           );\n//           setFilteredVideos(videoList.filter((video) =>\n//             video.title.toLowerCase().includes(searchQuery.toLowerCase())))\n//           setLoading(false);\n//         })\n//         .catch((err) => {\n//           console.log(err);\n//           setLoading(true);\n//         });\n//     } else {\n//       // User is not authenticated, make a request without the JWT token\n//       axios\n//         .get(apiUrl)\n//         .then((response) => {\n//           setVideoList(\n//             response.data.videos.map((item) => {\n//               return JSON.parse(item);\n//             })\n//           );\n//           setFilteredVideos(videoList.filter((video) =>\n//           video.title.toLowerCase().includes(searchQuery.toLowerCase())))\n//           setLoading(false);\n//         })\n//         .catch((err) => {\n//           console.log(err);\n//           setLoading(true);\n//         });\n//     }\n//   }, []);\n//   return (\n//     <div>\n//     <Navbar />\n//     <Stack sx={{ flexDirection: { xs: \"column\", md: \"row\" } }}>\n//       <Box\n//         sx={{\n//           height: { xs: \"auto\", md: \"100vh\" },\n//           paddingRight: { xs: 0, md: 2 },\n//           marginBottom: 2,\n//         }}\n//       >\n//         <Sidebar\n//         />\n//       </Box>\n//       <Box\n//         p={2}\n//         sx={{\n//           overflowY: \"auto\",\n//           height: \"90vh\",\n//           flex: 2,\n//         }}\n//       >\n//         <Typography variant=\"h4\" fontWeight=\"bold\" mb={2} color=\"primary.dark\">\n//           Search results\n//         </Typography>\n//         {isLoading ? (\n//           <div>Loading...</div>\n//         ) : (\n//           <Videos videos={filteredVideos} />\n//         )}\n//       </Box>\n//     </Stack>\n//   </div>\n//   );\n// }\n\n// export default VideoSearch;","/Users/maryamcheema/Documents/VideoAccessibility/frontend/src/utils/loggedIn.js",["290","291"],[],{"ruleId":"292","severity":1,"message":"293","line":11,"column":3,"nodeType":"294","messageId":"295","endLine":11,"endColumn":11},{"ruleId":"292","severity":1,"message":"296","line":16,"column":8,"nodeType":"294","messageId":"295","endLine":16,"endColumn":18},{"ruleId":"292","severity":1,"message":"297","line":17,"column":8,"nodeType":"294","messageId":"295","endLine":17,"endColumn":19},{"ruleId":"292","severity":1,"message":"298","line":48,"column":21,"nodeType":"294","messageId":"295","endLine":48,"endColumn":25},{"ruleId":"299","severity":1,"message":"300","line":94,"column":6,"nodeType":"301","endLine":94,"endColumn":8,"suggestions":"302"},{"ruleId":"292","severity":1,"message":"303","line":1,"column":38,"nodeType":"294","messageId":"295","endLine":1,"endColumn":44},{"ruleId":"292","severity":1,"message":"304","line":3,"column":10,"nodeType":"294","messageId":"295","endLine":3,"endColumn":13},{"ruleId":"292","severity":1,"message":"305","line":3,"column":15,"nodeType":"294","messageId":"295","endLine":3,"endColumn":19},{"ruleId":"292","severity":1,"message":"306","line":3,"column":21,"nodeType":"294","messageId":"295","endLine":3,"endColumn":31},{"ruleId":"292","severity":1,"message":"307","line":3,"column":33,"nodeType":"294","messageId":"295","endLine":3,"endColumn":38},{"ruleId":"292","severity":1,"message":"308","line":4,"column":10,"nodeType":"294","messageId":"295","endLine":4,"endColumn":22},{"ruleId":"292","severity":1,"message":"309","line":8,"column":23,"nodeType":"294","messageId":"295","endLine":8,"endColumn":35},{"ruleId":"292","severity":1,"message":"310","line":15,"column":11,"nodeType":"294","messageId":"295","endLine":15,"endColumn":26},{"ruleId":"299","severity":1,"message":"311","line":23,"column":8,"nodeType":"301","endLine":23,"endColumn":16,"suggestions":"312"},{"ruleId":"292","severity":1,"message":"313","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":23},{"ruleId":"292","severity":1,"message":"297","line":27,"column":10,"nodeType":"294","messageId":"295","endLine":27,"endColumn":21},{"ruleId":"292","severity":1,"message":"314","line":46,"column":22,"nodeType":"294","messageId":"295","endLine":46,"endColumn":35},{"ruleId":"292","severity":1,"message":"315","line":47,"column":10,"nodeType":"294","messageId":"295","endLine":47,"endColumn":22},{"ruleId":"292","severity":1,"message":"316","line":9,"column":9,"nodeType":"294","messageId":"295","endLine":9,"endColumn":14},{"ruleId":"299","severity":1,"message":"317","line":43,"column":6,"nodeType":"301","endLine":43,"endColumn":8,"suggestions":"318"},{"ruleId":"299","severity":1,"message":"319","line":61,"column":6,"nodeType":"301","endLine":61,"endColumn":8,"suggestions":"320"},{"ruleId":"292","severity":1,"message":"306","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":27},{"ruleId":"292","severity":1,"message":"321","line":2,"column":34,"nodeType":"294","messageId":"295","endLine":2,"endColumn":40},{"ruleId":"292","severity":1,"message":"322","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":28},{"ruleId":"292","severity":1,"message":"323","line":1,"column":30,"nodeType":"294","messageId":"295","endLine":1,"endColumn":38},{"ruleId":"299","severity":1,"message":"324","line":63,"column":6,"nodeType":"301","endLine":63,"endColumn":12,"suggestions":"325"},{"ruleId":"292","severity":1,"message":"326","line":69,"column":5,"nodeType":"294","messageId":"295","endLine":69,"endColumn":37},{"ruleId":"292","severity":1,"message":"327","line":2,"column":8,"nodeType":"294","messageId":"295","endLine":2,"endColumn":25},{"ruleId":"292","severity":1,"message":"328","line":4,"column":8,"nodeType":"294","messageId":"295","endLine":4,"endColumn":21},{"ruleId":"292","severity":1,"message":"329","line":14,"column":3,"nodeType":"294","messageId":"295","endLine":14,"endColumn":19},{"ruleId":"292","severity":1,"message":"330","line":18,"column":3,"nodeType":"294","messageId":"295","endLine":18,"endColumn":9},{"ruleId":"292","severity":1,"message":"331","line":20,"column":8,"nodeType":"294","messageId":"295","endLine":20,"endColumn":18},{"ruleId":"292","severity":1,"message":"332","line":21,"column":8,"nodeType":"294","messageId":"295","endLine":21,"endColumn":22},{"ruleId":"292","severity":1,"message":"333","line":59,"column":9,"nodeType":"294","messageId":"295","endLine":59,"endColumn":31},{"ruleId":"292","severity":1,"message":"334","line":1,"column":27,"nodeType":"294","messageId":"295","endLine":1,"endColumn":36},{"ruleId":"292","severity":1,"message":"335","line":3,"column":10,"nodeType":"294","messageId":"295","endLine":3,"endColumn":13},{"ruleId":"292","severity":1,"message":"303","line":1,"column":38,"nodeType":"294","messageId":"295","endLine":1,"endColumn":44},{"ruleId":"292","severity":1,"message":"336","line":6,"column":10,"nodeType":"294","messageId":"295","endLine":6,"endColumn":19},{"ruleId":"292","severity":1,"message":"337","line":7,"column":17,"nodeType":"294","messageId":"295","endLine":7,"endColumn":25},{"ruleId":"292","severity":1,"message":"338","line":8,"column":17,"nodeType":"294","messageId":"295","endLine":8,"endColumn":25},{"ruleId":"299","severity":1,"message":"339","line":35,"column":6,"nodeType":"301","endLine":35,"endColumn":50,"suggestions":"340"},{"ruleId":"292","severity":1,"message":"341","line":1,"column":8,"nodeType":"294","messageId":"295","endLine":1,"endColumn":13},{"ruleId":"292","severity":1,"message":"342","line":2,"column":8,"nodeType":"294","messageId":"295","endLine":2,"endColumn":15},{"ruleId":"292","severity":1,"message":"334","line":1,"column":27,"nodeType":"294","messageId":"295","endLine":1,"endColumn":36},{"ruleId":"292","severity":1,"message":"305","line":2,"column":15,"nodeType":"294","messageId":"295","endLine":2,"endColumn":19},{"ruleId":"292","severity":1,"message":"307","line":2,"column":33,"nodeType":"294","messageId":"295","endLine":2,"endColumn":38},{"ruleId":"292","severity":1,"message":"343","line":7,"column":10,"nodeType":"294","messageId":"295","endLine":7,"endColumn":14},{"ruleId":"292","severity":1,"message":"344","line":7,"column":16,"nodeType":"294","messageId":"295","endLine":7,"endColumn":23},{"ruleId":"345","severity":1,"message":"346","line":23,"column":42,"nodeType":"347","messageId":"348","endLine":23,"endColumn":44},{"ruleId":"292","severity":1,"message":"349","line":18,"column":27,"nodeType":"294","messageId":"295","endLine":18,"endColumn":45},{"ruleId":"299","severity":1,"message":"350","line":25,"column":6,"nodeType":"301","endLine":25,"endColumn":21,"suggestions":"351"},{"ruleId":"299","severity":1,"message":"311","line":51,"column":6,"nodeType":"301","endLine":51,"endColumn":72,"suggestions":"352"},{"ruleId":"292","severity":1,"message":"353","line":12,"column":8,"nodeType":"294","messageId":"295","endLine":12,"endColumn":16},{"ruleId":"292","severity":1,"message":"334","line":1,"column":27,"nodeType":"294","messageId":"295","endLine":1,"endColumn":36},{"ruleId":"292","severity":1,"message":"306","line":2,"column":22,"nodeType":"294","messageId":"295","endLine":2,"endColumn":32},{"ruleId":"292","severity":1,"message":"354","line":2,"column":40,"nodeType":"294","messageId":"295","endLine":2,"endColumn":49},{"ruleId":"292","severity":1,"message":"321","line":2,"column":51,"nodeType":"294","messageId":"295","endLine":2,"endColumn":57},{"ruleId":"292","severity":1,"message":"355","line":3,"column":49,"nodeType":"294","messageId":"295","endLine":3,"endColumn":54},{"ruleId":"292","severity":1,"message":"356","line":4,"column":23,"nodeType":"294","messageId":"295","endLine":4,"endColumn":27},{"ruleId":"292","severity":1,"message":"357","line":24,"column":10,"nodeType":"294","messageId":"295","endLine":24,"endColumn":18},{"ruleId":"292","severity":1,"message":"358","line":24,"column":20,"nodeType":"294","messageId":"295","endLine":24,"endColumn":31},{"ruleId":"292","severity":1,"message":"359","line":25,"column":10,"nodeType":"294","messageId":"295","endLine":25,"endColumn":16},{"ruleId":"292","severity":1,"message":"360","line":26,"column":10,"nodeType":"294","messageId":"295","endLine":26,"endColumn":27},{"ruleId":"292","severity":1,"message":"361","line":26,"column":29,"nodeType":"294","messageId":"295","endLine":26,"endColumn":49},{"ruleId":"292","severity":1,"message":"362","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":23},{"ruleId":"292","severity":1,"message":"363","line":6,"column":8,"nodeType":"294","messageId":"295","endLine":6,"endColumn":25},{"ruleId":"292","severity":1,"message":"359","line":22,"column":10,"nodeType":"294","messageId":"295","endLine":22,"endColumn":16},{"ruleId":"292","severity":1,"message":"306","line":2,"column":22,"nodeType":"294","messageId":"295","endLine":2,"endColumn":32},{"ruleId":"292","severity":1,"message":"354","line":2,"column":40,"nodeType":"294","messageId":"295","endLine":2,"endColumn":49},{"ruleId":"299","severity":1,"message":"364","line":45,"column":6,"nodeType":"301","endLine":45,"endColumn":16,"suggestions":"365"},{"ruleId":"366","severity":1,"message":"367","line":18,"column":9,"nodeType":"368","endLine":18,"endColumn":50},{"ruleId":"292","severity":1,"message":"334","line":1,"column":27,"nodeType":"294","messageId":"295","endLine":1,"endColumn":36},{"ruleId":"292","severity":1,"message":"369","line":13,"column":10,"nodeType":"294","messageId":"295","endLine":13,"endColumn":26},{"ruleId":"292","severity":1,"message":"370","line":13,"column":28,"nodeType":"294","messageId":"295","endLine":13,"endColumn":47},{"ruleId":"292","severity":1,"message":"371","line":5,"column":9,"nodeType":"294","messageId":"295","endLine":5,"endColumn":21},{"ruleId":"292","severity":1,"message":"372","line":6,"column":9,"nodeType":"294","messageId":"295","endLine":6,"endColumn":20},"no-unused-vars","'AlertBar' is defined but never used.","Identifier","unusedVar","'formatTime' is defined but never used.","'tokenUsable' is defined but never used.","'path' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'parameters' and 'params'. Either include them or remove the dependency array.","ArrayExpression",["373"],"'useRef' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'Paper' is defined but never used.","'TextToSpeech' is defined but never used.","'setIsPlaying' is assigned a value but never used.","'seekToTimestamp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["374"],"'CheckCircleIcon' is defined but never used.","'setVisibility' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.videoID'. Either include it or remove the dependency array.",["375"],"React Hook useEffect has a missing dependency: 'parameters'. Either include it or remove the dependency array.",["376"],"'Button' is defined but never used.","'useCallback' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'handleClickOpen' and 'handleStartStop'. Either include them or remove the dependency array.",["377"],"'browserSupportsSpeechRecognition' is assigned a value but never used.","'KeyboardVoiceIcon' is defined but never used.","'BugReportIcon' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'SearchIcon' is defined but never used.","'FileUploadIcon' is defined but never used.","'handleVisibilityChange' is assigned a value but never used.","'useEffect' is defined but never used.","'Tag' is defined but never used.","'utterance' is assigned a value but never used.","'setVoice' is assigned a value but never used.","'setPitch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'parentCallback'. Either include it or remove the dependency array. If 'parentCallback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["378"],"'axios' is defined but never used.","'Cookies' is defined but never used.","'desc' is assigned a value but never used.","'setDesc' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setIsSpeechPlaying' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'defaultDescription'. Either include it or remove the dependency array.",["379"],["380"],"'StarIcon' is defined but never used.","'TextField' is defined but never used.","'Frame' is defined but never used.","'Link' is defined but never used.","'yesFrame' is assigned a value but never used.","'setYesFrame' is assigned a value but never used.","'played' is assigned a value but never used.","'videoDescriptions' is assigned a value but never used.","'setVideoDescriptions' is assigned a value but never used.","'ArrowUpwardIcon' is defined but never used.","'ArrowDownwardIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.",["381"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'selectedCategory' is assigned a value but never used.","'setSelectedCategory' is assigned a value but never used.","'decodedToken' is assigned a value but never used.","'currentTime' is assigned a value but never used.",{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},"Update the dependencies array to be: [parameters, params]",{"range":"400","text":"401"},"Update the dependencies array to be: [played, props]",{"range":"402","text":"403"},"Update the dependencies array to be: [props.videoID]",{"range":"404","text":"405"},"Update the dependencies array to be: [parameters]",{"range":"406","text":"407"},"Update the dependencies array to be: [handleClickOpen, handleStartStop, open]",{"range":"408","text":"409"},"Update the dependencies array to be: [text, voice, pitch, rate, volume, isPaused, parentCallback]",{"range":"410","text":"411"},"Update the dependencies array to be: [defaultDescription, props.descrip]",{"range":"412","text":"413"},"Update the dependencies array to be: [currentDescriptionIndex, videoDescriptions, props.parentCallback, props]",{"range":"414","text":"415"},"Update the dependencies array to be: [params, yesFrame]",{"range":"416","text":"417"},[2895,2897],"[parameters, params]",[859,867],"[played, props]",[1228,1230],"[props.videoID]",[1842,1844],"[parameters]",[2077,2083],"[handleClickOpen, handleStartStop, open]",[978,1022],"[text, voice, pitch, rate, volume, isPaused, parentCallback]",[1072,1087],"[defaultDescription, props.descrip]",[1947,2013],"[currentDescriptionIndex, videoDescriptions, props.parentCallback, props]",[1366,1376],"[params, yesFrame]"]